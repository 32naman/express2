{"ast":null,"code":"var _jsxFileName = \"/home/revpro/Desktop/new/ToDoAppReact/ToDoApp/src/components/TodoListShare.tsx\";\nimport React from 'react';\nimport netCalls from '../netCallsShare';\nconst PORT = 8000;\nconst sharePOSTURL = `http://localhost:${PORT}/sharePOST`;\n\nfunction TodoList(props) {\n  let tickOrDelete = event => {\n    const btn = event.target;\n    let todos = props.state.todos;\n    const item = btn.parentElement;\n    let ind = 0;\n\n    if (item != null) {\n      const todoText = item.querySelector('.text');\n      if (todoText != null) ind = todos.findIndex(ele => ele.text === todoText.innerText);\n      console.log(ind);\n    } // Tick Case\n\n\n    if (btn.id === 'tick') {\n      todos[ind].done = !todos[ind].done;\n      props.setTodos([...todos]);\n      netCalls.putJSON(sharePOSTURL, todos, props.state.hash);\n    } // Delete Case\n    else if (btn.id === 'delete') {\n        // item.remove();\n        todos.splice(ind, 1);\n        props.setTodos([...todos]);\n        netCalls.putJSON(sharePOSTURL, todos, props.state.hash);\n      }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TodoListUI, {\n    state: props.state,\n    tickOrDelete: tickOrDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }));\n}\n\nconst TodoListUI = props => {\n  var _state$filteredTodos;\n\n  const {\n    state,\n    tickOrDelete\n  } = props;\n  let todos = (_state$filteredTodos = state.filteredTodos) !== null && _state$filteredTodos !== void 0 ? _state$filteredTodos : state.todos;\n  let todoList = todos.map(todo => {\n    let doneTodo = todo.done ? \"text lineThrough\" : \"text\";\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: \"item\",\n      key: todo.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: doneTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, todo.text), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-check tick\",\n      id: \"tick\",\n      onClick: tickOrDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-trash delete\",\n      id: \"delete\",\n      onClick: tickOrDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }));\n  });\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, todoList);\n};\n\nexport default TodoList;","map":{"version":3,"sources":["/home/revpro/Desktop/new/ToDoAppReact/ToDoApp/src/components/TodoListShare.tsx"],"names":["React","netCalls","PORT","sharePOSTURL","TodoList","props","tickOrDelete","event","btn","target","todos","state","item","parentElement","ind","todoText","querySelector","findIndex","ele","text","innerText","console","log","id","done","setTodos","putJSON","hash","splice","TodoListUI","filteredTodos","todoList","map","todo","doneTodo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport netCalls from '../netCallsShare';\nimport {State,TodoItem} from './interfaces';\nconst PORT = 8000;\nconst sharePOSTURL = `http://localhost:${PORT}/sharePOST`;\n\ntype Props = {\n  state: State;\n  setTodos: React.Dispatch<React.SetStateAction<TodoItem[]>>;\n};\n\ntype PropsUI = {\n  state: State;\n  tickOrDelete: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n};\n\nfunction TodoList(props:Props) {\n\n    let tickOrDelete = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        const btn = event.target as HTMLElement;\n        let todos = props.state.todos; \n\n        const item = btn.parentElement;\n        let ind:number=0;\n        if(item!=null){\n          const todoText = item.querySelector('.text') as HTMLParagraphElement;\n          if(todoText!=null)\n            ind= todos.findIndex(ele => ele.text === todoText.innerText);\n          console.log(ind);\n        }\n        // Tick Case\n        if(btn.id === 'tick'){\n            todos[ind].done = !todos[ind].done;\n    \n            props.setTodos(\n              [...todos]\n            );\n            netCalls.putJSON(sharePOSTURL, todos, props.state.hash);\n        }\n        // Delete Case\n        else if(btn.id === 'delete'){\n            // item.remove();\n            todos.splice(ind,1);\n    \n            props.setTodos(\n                [...todos]\n            );\n            netCalls.putJSON(sharePOSTURL, todos, props.state.hash);    \n        }\n    }    \n\n    return (\n        <div className=\"todo\">\n            <TodoListUI state={props.state} \n            tickOrDelete={tickOrDelete}/>\n        </div>\n    ); \n}\n\nconst TodoListUI = (props:PropsUI) => {\n    const { state, tickOrDelete } = props;\n    let todos = state.filteredTodos ?? state.todos;\n    let todoList = todos.map( todo => {\n        let doneTodo = todo.done ? \"text lineThrough\" : \"text\";\n        return (\n            <li className=\"item\" key={todo.id}>\n                <p className={doneTodo}>{todo.text}</p>\n                <i className=\"fas fa-check tick\" id=\"tick\" onClick={tickOrDelete}></i>\n                <i className=\"fas fa-trash delete\" id=\"delete\" onClick={tickOrDelete}></i>\n            </li>\n        )\n    }) \n    return (\n        <ul id='list'>\n            {todoList}\n        </ul>\n    );\n}\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}