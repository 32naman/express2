{"ast":null,"code":"var _jsxFileName = \"/home/revpro/Desktop/new/ToDoAppReact/ToDoApp/src/components/SharedTodo.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport netCalls from '../netCallsShare';\nimport SearchBar from './SearchBar';\nimport TodoList from './TodoListShare';\nimport InputTodo from './InputTodoShare';\nimport './TodoApp.css';\nconst PORT = 8000;\nconst getURL = `http://localhost:${PORT}/getdata`;\nconst shareSocketURL = `ws://localhost:${PORT}/shareSocket`;\n\nfunction SharedTodo(props) {\n  const url = new URL(document.URL);\n  const search_params = url.searchParams;\n  const hash_val = search_params.get('hash');\n  const [todos, setTodos] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  let [filteredTodos, setFilteredTodos] = useState(null);\n  const [date] = useState(new Date().toLocaleDateString(\"en-IN\", {\n    day: \"numeric\",\n    month: \"short\",\n    weekday: \"short\"\n  }));\n  const [hash] = useState(hash_val);\n  const [, setSocket] = useState(new WebSocket(shareSocketURL));\n  const state = {\n    todos: todos,\n    searchQuery: searchQuery,\n    filteredTodos: filteredTodos,\n    date: date,\n    hash: hash,\n    listNum: 1,\n    totalLists: 1,\n    id_token: null,\n    sharing: \"off\"\n  }; // let updateState = (stateData:State) => {\n  //     if(stateData.todos) setTodos([...stateData.todos]);\n  //     if(stateData.searchQuery) setSearchQuery(stateData.searchQuery);\n  //     if(stateData.filteredTodos !== undefined){\n  //         if(stateData.filteredTodos === null) setFilteredTodos(null);\n  //         else setFilteredTodos([...stateData.filteredTodos]);\n  //     } \n  //     if(stateData.date) setDate(stateData.date);\n  //     if(stateData.hash) setHash(stateData.hash);\n  // }\n\n  useEffect(() => {\n    console.log(\"here Mount\"); // this.onLoad();\n\n    let startSocket = new WebSocket(shareSocketURL);\n    setSocket(startSocket);\n    console.log(\"initial load\");\n    let todos = [];\n    netCalls.getJSON(getURL, (err, data) => {\n      if (err !== null) {\n        console.log(\"Empty\");\n        setTodos([...todos]);\n      } else {\n        console.log(\"Loaded\");\n        console.log(data);\n        let dataWithKey = data;\n        if (dataWithKey[\"json\"] !== undefined) setTodos(JSON.parse(dataWithKey[\"json\"]));\n      }\n    }, hash, startSocket);\n\n    startSocket.onmessage = event => {\n      console.log(event.data);\n      let data = JSON.parse(event.data);\n      setTodos([...data]);\n    };\n  }, [hash]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, date), /*#__PURE__*/React.createElement(SearchBar, {\n    state: state,\n    setFilteredTodos: setFilteredTodos,\n    setSearchQuery: setSearchQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(TodoList, {\n    state: state,\n    setTodos: setTodos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(InputTodo, {\n    state: state,\n    setTodos: setTodos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default SharedTodo;","map":{"version":3,"sources":["/home/revpro/Desktop/new/ToDoAppReact/ToDoApp/src/components/SharedTodo.tsx"],"names":["React","useState","useEffect","netCalls","SearchBar","TodoList","InputTodo","PORT","getURL","shareSocketURL","SharedTodo","props","url","URL","document","search_params","searchParams","hash_val","get","todos","setTodos","searchQuery","setSearchQuery","filteredTodos","setFilteredTodos","date","Date","toLocaleDateString","day","month","weekday","hash","setSocket","WebSocket","state","listNum","totalLists","id_token","sharing","console","log","startSocket","getJSON","err","data","dataWithKey","undefined","JSON","parse","onmessage","event"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport netCalls from '../netCallsShare';\nimport SearchBar from './SearchBar';\nimport TodoList from './TodoListShare';\nimport InputTodo from './InputTodoShare';\nimport './TodoApp.css';\nimport {State,TodoItem} from './interfaces';\nconst PORT = 8000;\nconst getURL = `http://localhost:${PORT}/getdata`;\nconst shareSocketURL = `ws://localhost:${PORT}/shareSocket`;\n\ninterface Data{\n  [Key:string]:string|undefined;\n}\n\nfunction SharedTodo(props:{state:{\n  id_token:string;\n}}) {\n    const url = new URL(document.URL);\n    const search_params = url.searchParams;\n    const hash_val = search_params.get('hash');\n    const [todos, setTodos] = useState<TodoItem[]>([]);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    let [filteredTodos, setFilteredTodos] = useState<TodoItem[]|null>(null);\n    const [date, ] = useState((new Date()).toLocaleDateString(\"en-IN\", {day: \"numeric\", month: \"short\", weekday: \"short\"}));\n    const [hash, ] = useState(hash_val);\n    const [, setSocket] = useState<WebSocket>(new WebSocket(shareSocketURL));\n    const state:State = {\n        todos: todos,\n        searchQuery: searchQuery,\n        filteredTodos: filteredTodos,\n        date: date,\n        hash: hash,\n        listNum:1,\n        totalLists:1,\n        id_token:null,\n        sharing:\"off\",\n    };\n\n    // let updateState = (stateData:State) => {\n    //     if(stateData.todos) setTodos([...stateData.todos]);\n    //     if(stateData.searchQuery) setSearchQuery(stateData.searchQuery);\n    //     if(stateData.filteredTodos !== undefined){\n    //         if(stateData.filteredTodos === null) setFilteredTodos(null);\n    //         else setFilteredTodos([...stateData.filteredTodos]);\n    //     } \n    //     if(stateData.date) setDate(stateData.date);\n    //     if(stateData.hash) setHash(stateData.hash);\n    // }\n\n    useEffect(() => {\n        console.log(\"here Mount\");\n        // this.onLoad();\n        let startSocket = new WebSocket(shareSocketURL);\n        setSocket(startSocket);\n\n        console.log(\"initial load\");\n        let todos :TodoItem[]= [];\n        netCalls.getJSON(getURL, (err:number|null, data:object) => {\n            if(err !== null){\n                console.log(\"Empty\");\n                setTodos([...todos]);\n            }\n            else{\n                console.log(\"Loaded\");\n                console.log(data);\n                let dataWithKey=data as Data;\n                if(dataWithKey[\"json\"]!==undefined)\n                  setTodos(JSON.parse(dataWithKey[\"json\"]));\n            }\n        }, hash, startSocket);\n\n        startSocket.onmessage = (event) => {\n            console.log(event.data);\n            let data = JSON.parse(event.data);\n            setTodos([...data]);\n        }\n    }, [hash])\n\n    return (\n        <div className=\"container\">\n            <div className=\"header\">\n                <div className=\"date\">{date}</div>\n                <SearchBar state={state} setFilteredTodos={setFilteredTodos} setSearchQuery={setSearchQuery}/>\n            </div>\n            <TodoList state={state} setTodos={setTodos}/>\n            <InputTodo state={state} setTodos={setTodos}/>\n        </div>\n    );\n\n}\n\nexport default SharedTodo;"]},"metadata":{},"sourceType":"module"}