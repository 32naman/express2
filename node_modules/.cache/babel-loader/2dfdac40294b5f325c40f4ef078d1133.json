{"ast":null,"code":"var _jsxFileName = \"/home/revpro/Desktop/new/ToDoAppReact/ToDoApp/src/components/ScreenSharing.tsx\";\nimport React, { useRef } from \"react\";\nimport netCalls from \"../netCallsMod\";\nconst PORT = 8000;\nconst screenShareURL = `http://localhost:${PORT}/screenShare`; // const socketURL = `ws://localhost:${PORT}/screenShareClient`;\n\nfunction ScreenSharing(props) {\n  const shareCode = useRef(null);\n\n  let toggleScreenSharing = e => {\n    console.log(\"Reaching 1\");\n\n    if (props.sharing === \"off\") {\n      console.log(\"Reaching 2\");\n      netCalls.generateSSCode(screenShareURL).then(result => {\n        console.log(result);\n        let shareURL = `http://localhost:4000/screen?hash=${result}`;\n        if (shareCode.current != null) shareCode.current.innerHTML = `<a href=\"${shareURL}\" target=\"_blank\">${shareURL}</a>`;\n        props.setSharing(result);\n      });\n    } else {\n      console.log(\"Reaching 3\");\n      props.setSharing(\"off\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ScreenSharingUI, {\n    toggleScreenSharing: toggleScreenSharing,\n    shareCodeRef: shareCode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  });\n}\n\nconst ScreenSharingUI = props => {\n  const {\n    toggleScreenSharing,\n    shareCodeRef\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"screenShareLink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    id: \"shareCode\",\n    ref: shareCodeRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Code for Screen Sharing\"), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-share-alt\",\n    id: \"genCode\",\n    onClick: toggleScreenSharing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ScreenSharing;","map":{"version":3,"sources":["/home/revpro/Desktop/new/ToDoAppReact/ToDoApp/src/components/ScreenSharing.tsx"],"names":["React","useRef","netCalls","PORT","screenShareURL","ScreenSharing","props","shareCode","toggleScreenSharing","e","console","log","sharing","generateSSCode","then","result","shareURL","current","innerHTML","setSharing","ScreenSharingUI","shareCodeRef"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,MAAMC,IAAI,GAAG,IAAb;AACA,MAAMC,cAAc,GAAI,oBAAmBD,IAAK,cAAhD,C,CACA;;AAOA,SAASE,aAAT,CAAuBC,KAAvB,EAAqC;AACnC,QAAMC,SAAS,GAAGN,MAAM,CAAuB,IAAvB,CAAxB;;AAEA,MAAIO,mBAAmB,GAAIC,CAAD,IAAkD;AAC1EC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACA,QAAIL,KAAK,CAACM,OAAN,KAAkB,KAAtB,EAA6B;AAC3BF,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEAT,MAAAA,QAAQ,CAACW,cAAT,CAAwBT,cAAxB,EAAwCU,IAAxC,CAA8CC,MAAD,IAAY;AACvDL,QAAAA,OAAO,CAACC,GAAR,CAAYI,MAAZ;AACA,YAAIC,QAAQ,GAAI,qCAAoCD,MAAO,EAA3D;AACA,YAAIR,SAAS,CAACU,OAAV,IAAqB,IAAzB,EACEV,SAAS,CAACU,OAAV,CAAkBC,SAAlB,GAA+B,YAAWF,QAAS,qBAAoBA,QAAS,MAAhF;AAEFV,QAAAA,KAAK,CAACa,UAAN,CAAiBJ,MAAjB;AACD,OAPD;AAQD,KAXD,MAWO;AACLL,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAL,MAAAA,KAAK,CAACa,UAAN,CAAiB,KAAjB;AACD;AACF,GAjBD;;AAmBA,sBACE,oBAAC,eAAD;AACE,IAAA,mBAAmB,EAAEX,mBADvB;AAEE,IAAA,YAAY,EAAED,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD;;AASD,MAAMa,eAAe,GAAId,KAAD,IAAmB;AACzC,QAAM;AAAEE,IAAAA,mBAAF;AAAuBa,IAAAA;AAAvB,MAAwCf,KAA9C;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,EAAE,EAAC,WAAN;AAAkB,IAAA,GAAG,EAAEe,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAIE;AACE,IAAA,SAAS,EAAC,kBADZ;AAEE,IAAA,EAAE,EAAC,SAFL;AAGE,IAAA,OAAO,EAAEb,mBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAYD,CAdD;;AAgBA,eAAeH,aAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport netCalls from \"../netCallsMod\";\n\nconst PORT = 8000;\nconst screenShareURL = `http://localhost:${PORT}/screenShare`;\n// const socketURL = `ws://localhost:${PORT}/screenShareClient`;\n\ntype Props = {\n  sharing: string;\n  setSharing: React.Dispatch<React.SetStateAction<string>>;\n};\n\nfunction ScreenSharing(props: Props) {\n  const shareCode = useRef<HTMLParagraphElement>(null);\n\n  let toggleScreenSharing = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    console.log(\"Reaching 1\");\n    if (props.sharing === \"off\") {\n      console.log(\"Reaching 2\");\n\n      netCalls.generateSSCode(screenShareURL).then((result) => {\n        console.log(result);\n        let shareURL = `http://localhost:4000/screen?hash=${result}`;\n        if (shareCode.current != null)\n          shareCode.current.innerHTML = `<a href=\"${shareURL}\" target=\"_blank\">${shareURL}</a>`;\n\n        props.setSharing(result);\n      });\n    } else {\n      console.log(\"Reaching 3\");\n      props.setSharing(\"off\");\n    }\n  };\n\n  return (\n    <ScreenSharingUI\n      toggleScreenSharing={toggleScreenSharing}\n      shareCodeRef={shareCode}\n    />\n  );\n}\n\ntype Props1 = {\n  toggleScreenSharing: (\n    event: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => void;\n  shareCodeRef: React.RefObject<HTMLParagraphElement>;\n};\n\nconst ScreenSharingUI = (props: Props1) => {\n  const { toggleScreenSharing, shareCodeRef } = props;\n  return (\n    <div className=\"screenShareLink\">\n      <p id=\"shareCode\" ref={shareCodeRef}>\n        Code for Screen Sharing\n      </p>\n      <i\n        className=\"fas fa-share-alt\"\n        id=\"genCode\"\n        onClick={toggleScreenSharing}\n      ></i>\n    </div>\n  );\n};\n\nexport default ScreenSharing;\n"]},"metadata":{},"sourceType":"module"}