{"ast":null,"code":"var _jsxFileName = \"/home/revpro/Desktop/new/ToDoAppReact/ToDoApp/src/components/InputTodoShare.tsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport netCalls from '../netCallsShare';\nconst PORT = 8000;\nconst sharePOSTURL = `http://localhost:${PORT}/sharePOST`;\n\nfunction useNewTodo(props) {\n  const [newTodo, setNewTodo] = useState(\"\");\n  const {\n    state,\n    setTodos\n  } = props;\n  useEffect(() => {\n    if (newTodo !== \"\") {\n      let todosSend = [];\n      setTodos(todos => {\n        todos.push({\n          text: newTodo.trim(),\n          done: false,\n          id: Math.random()\n        });\n        todosSend = todos;\n        return [...todos];\n      });\n      netCalls.putJSON(sharePOSTURL, todosSend, state.hash);\n    }\n  }, [newTodo, setTodos, state.hash]);\n  return setNewTodo;\n}\n\nfunction InputTodo(props) {\n  const setNewTodo = useNewTodo(props);\n  const inputNewTodo = useRef(null);\n\n  function addTodo() {\n    const text = inputNewTodo.current.value;\n    setNewTodo(text);\n    inputNewTodo.current.value = \"\";\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputToDo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"input\",\n    ref: inputNewTodo,\n    placeholder: \"Enter a To-Do\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-plus-square\",\n    onClick: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default InputTodo;","map":{"version":3,"sources":["/home/revpro/Desktop/new/ToDoAppReact/ToDoApp/src/components/InputTodoShare.tsx"],"names":["React","useState","useEffect","useRef","netCalls","PORT","sharePOSTURL","useNewTodo","props","newTodo","setNewTodo","state","setTodos","todosSend","todos","push","text","trim","done","id","Math","random","putJSON","hash","InputTodo","inputNewTodo","addTodo","current","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,MAApC,QAAiD,OAAjD;AACA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,MAAMC,IAAI,GAAG,IAAb;AACA,MAAMC,YAAY,GAAI,oBAAmBD,IAAK,YAA9C;;AAOA,SAASE,UAAT,CAAoBC,KAApB,EAAiC;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAEU,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBJ,KAA5B;AACAN,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGO,OAAO,KAAK,EAAf,EACA;AACI,UAAII,SAAoB,GAAC,EAAzB;AACAD,MAAAA,QAAQ,CAACE,KAAK,IAAI;AACdA,QAAAA,KAAK,CAACC,IAAN,CAAW;AAACC,UAAAA,IAAI,EAAEP,OAAO,CAACQ,IAAR,EAAP;AAAuBC,UAAAA,IAAI,EAAE,KAA7B;AAAoCC,UAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL;AAAxC,SAAX;AACAR,QAAAA,SAAS,GAAGC,KAAZ;AACA,eAAO,CAAC,GAAGA,KAAJ,CAAP;AACH,OAJO,CAAR;AAMAV,MAAAA,QAAQ,CAACkB,OAAT,CAAiBhB,YAAjB,EAA+BO,SAA/B,EAA0CF,KAAK,CAACY,IAAhD;AACH;AACJ,GAZQ,EAYP,CAACd,OAAD,EAAUG,QAAV,EAAoBD,KAAK,CAACY,IAA1B,CAZO,CAAT;AAcA,SAAOb,UAAP;AACH;;AAED,SAASc,SAAT,CAAmBhB,KAAnB,EAA+B;AAC7B,QAAME,UAAU,GAAGH,UAAU,CAACC,KAAD,CAA7B;AACI,QAAMiB,YAAY,GAAGtB,MAAM,CAAmB,IAAnB,CAA3B;;AAEA,WAASuB,OAAT,GAAmB;AACjB,UAAMV,IAAI,GAAGS,YAAY,CAACE,OAAb,CAAsBC,KAAnC;AACAlB,IAAAA,UAAU,CAACM,IAAD,CAAV;AACAS,IAAAA,YAAY,CAACE,OAAb,CAAsBC,KAAtB,GAA8B,EAA9B;AACD;;AAEH,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,OAAtB;AAA8B,IAAA,GAAG,EAAEH,YAAnC;AAAiD,IAAA,WAAW,EAAC,eAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI;AAAG,IAAA,SAAS,EAAC,oBAAb;AAAkC,IAAA,OAAO,EAAEC,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;;AAED,eAAeF,SAAf","sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\nimport netCalls from '../netCallsShare';\nimport {TodoItem,State} from './interfaces';\nconst PORT = 8000;\nconst sharePOSTURL = `http://localhost:${PORT}/sharePOST`;\n\ninterface Props{\n  state:State;\n  setTodos:React.Dispatch<React.SetStateAction<TodoItem[]>>\n}\n\nfunction useNewTodo(props:Props) {\n    const [newTodo, setNewTodo] = useState(\"\");\n    const { state, setTodos } = props;\n    useEffect(()=>{\n        if(newTodo !== \"\")\n        {\n            let todosSend:TodoItem[]=[];\n            setTodos(todos => {\n                todos.push({text: newTodo.trim(), done: false, id: Math.random()});\n                todosSend = todos;\n                return [...todos];\n            })\n\n            netCalls.putJSON(sharePOSTURL, todosSend, state.hash);\n        }\n    },[newTodo, setTodos, state.hash])\n\n    return setNewTodo;\n}\n\nfunction InputTodo(props:Props){\n  const setNewTodo = useNewTodo(props);\n      const inputNewTodo = useRef<HTMLInputElement>(null);\n      \n      function addTodo() {\n        const text = inputNewTodo.current!.value;\n        setNewTodo(text);\n        inputNewTodo.current!.value = \"\"; \n      }\n\n    return (\n        <div className=\"inputToDo\">\n            <input type=\"text\" id=\"input\" ref={inputNewTodo} placeholder=\"Enter a To-Do\"/>\n            <i className=\"fas fa-plus-square\" onClick={addTodo}></i>\n        </div>\n    );  \n}\n\nexport default InputTodo;"]},"metadata":{},"sourceType":"module"}