{"ast":null,"code":"var netCalls = function () {\n  async function getJSON(url, listNum, callback, id_token) {\n    // const id_token = localStorage.getItem(\"token\");\n    console.log(url);\n    console.log(id_token);\n    let postMessage = \"id_token=\" + id_token + \"&listNum=\" + listNum;\n    let response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\"\n      },\n      body: postMessage\n    });\n    let result = await response.json();\n\n    if (response.status === 200) {\n      callback(null, result);\n    } else {\n      callback(response.status, result);\n    }\n  }\n\n  async function putJSON(url, listNum, todos, id_token) {\n    // const id_token = localStorage.getItem(\"token\");\n    let postJSON = {\n      token: id_token,\n      listNum: listNum,\n      json: JSON.stringify(todos)\n    };\n    await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      },\n      body: JSON.stringify(postJSON)\n    });\n  }\n\n  async function verifyToken(url, id_token) {\n    // const id_token = localStorage.getItem(\"token\");\n    console.log(id_token);\n    let postMessage = \"id_token=\" + id_token;\n    let response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\"\n      },\n      body: postMessage\n    });\n    let result = await response.text();\n    console.log(\"Signed in as: \" + result);\n  }\n\n  async function generateLink(url, listNum, id_token) {\n    // const id_token = localStorage.getItem(\"token\");\n    let postMessage = \"id_token=\" + id_token + \"&listNum=\" + listNum;\n    let response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\"\n      },\n      body: postMessage\n    });\n    let result = await response.text(); // linkAdd.innerHTML = `<a href=\"${result}\" target=\"_blank\">${result}</a>`;\n\n    return result;\n  }\n\n  async function generateSSCode(url) {\n    let response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\"\n      },\n      body: undefined\n    });\n    let result = await response.text();\n    return result;\n  }\n\n  return {\n    getJSON: getJSON,\n    putJSON: putJSON,\n    verifyToken: verifyToken,\n    generateLink: generateLink,\n    generateSSCode: generateSSCode\n  };\n}();\n\nexport default netCalls;","map":{"version":3,"sources":["/home/revpro/Desktop/new/ToDoAppReact/ToDoApp/src/netCallsMod.ts"],"names":["netCalls","getJSON","url","listNum","callback","id_token","console","log","postMessage","response","fetch","method","headers","body","result","json","status","putJSON","todos","postJSON","token","JSON","stringify","verifyToken","text","generateLink","generateSSCode","undefined"],"mappings":"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","sourcesContent":["var netCalls = (function () {\n  async function getJSON(\n    url: string,\n    listNum: number,\n    callback: (err: number | null, data: object) => void,\n    id_token: string | null\n  ) {\n    // const id_token = localStorage.getItem(\"token\");\n    console.log(url);\n    console.log(id_token);\n\n    let postMessage = \"id_token=\" + id_token + \"&listNum=\" + listNum;\n    let response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n      },\n      body: postMessage,\n    });\n    let result = await response.json();\n    if (response.status === 200) {\n      callback(null, result);\n    } else {\n      callback(response.status, result);\n    }\n  }\n\n  async function putJSON(\n    url: string,\n    listNum: number,\n    todos: object[],\n    id_token: string | null\n  ) {\n    // const id_token = localStorage.getItem(\"token\");\n\n    let postJSON = {\n      token: id_token,\n      listNum: listNum,\n      json: JSON.stringify(todos),\n    };\n    await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(postJSON),\n    });\n  }\n\n  async function verifyToken(url: string, id_token: string | null) {\n    // const id_token = localStorage.getItem(\"token\");\n    console.log(id_token);\n\n    let postMessage = \"id_token=\" + id_token;\n    let response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n      },\n      body: postMessage,\n    });\n    let result = await response.text();\n    console.log(\"Signed in as: \" + result);\n  }\n\n  async function generateLink(\n    url: string,\n    listNum: number,\n    id_token: string | null\n  ) {\n    // const id_token = localStorage.getItem(\"token\");\n\n    let postMessage = \"id_token=\" + id_token + \"&listNum=\" + listNum;\n    let response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n      },\n      body: postMessage,\n    });\n    let result = await response.text();\n    // linkAdd.innerHTML = `<a href=\"${result}\" target=\"_blank\">${result}</a>`;\n    return result;\n  }\n\n  async function generateSSCode(url: string) {\n    let response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n      },\n      body: undefined,\n    });\n    let result = await response.text();\n    return result;\n  }\n\n  return {\n    getJSON: getJSON,\n    putJSON: putJSON,\n    verifyToken: verifyToken,\n    generateLink: generateLink,\n    generateSSCode: generateSSCode,\n  };\n})();\n\nexport default netCalls;\n"]},"metadata":{},"sourceType":"module"}