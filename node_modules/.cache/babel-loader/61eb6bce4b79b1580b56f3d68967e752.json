{"ast":null,"code":"import _toConsumableArray from\"/home/revpro/Desktop/new/ToDoApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{useRef}from\"react\";var SearchBar=function SearchBar(_ref){var state=_ref.state,setFilteredTodos=_ref.setFilteredTodos,setSearchQuery=_ref.setSearchQuery;// const {state, setFilteredTodos, setSearchQuery} = props;\nvar searchInput=useRef(null);var onSearchInputChanged=function onSearchInputChanged(event){if(searchInput.current===null)return;var text=searchInput.current.value;text=text.trim().toLowerCase();setSearchQuery(text);var filteredTodos=[];state.todos.forEach(function(ele){if(ele.text.toLowerCase().indexOf(text)!==-1){filteredTodos.push(ele);}});if(text===\"\"){filteredTodos=null;setFilteredTodos(null);}else{setFilteredTodos(_toConsumableArray(filteredTodos));}};var resetSearch=function resetSearch(event){if(searchInput.current===null)return;searchInput.current.value=\"\";setSearchQuery(\"\");setFilteredTodos(null);};return/*#__PURE__*/React.createElement(\"div\",{className:\"searchBar\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",id:\"searchInput\",ref:searchInput,onChange:onSearchInputChanged,placeholder:\"Search for a To-Do\"}),/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-times\",id:\"close\",onClick:resetSearch}));};export default SearchBar;","map":{"version":3,"sources":["/home/revpro/Desktop/new/ToDoApp/src/components/SearchBar.tsx"],"names":["React","useRef","SearchBar","state","setFilteredTodos","setSearchQuery","searchInput","onSearchInputChanged","event","current","text","value","trim","toLowerCase","filteredTodos","todos","forEach","ele","indexOf","push","resetSearch"],"mappings":"+JAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CASA,GAAMC,CAAAA,SAAyC,CAAG,QAA5CA,CAAAA,SAA4C,MAI5C,IAHJC,CAAAA,KAGI,MAHJA,KAGI,CAFJC,gBAEI,MAFJA,gBAEI,CADJC,cACI,MADJA,cACI,CACJ;AACA,GAAMC,CAAAA,WAAW,CAAGL,MAAM,CAAmB,IAAnB,CAA1B,CAEA,GAAIM,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,KAAD,CAAgD,CACzE,GAAIF,WAAW,CAACG,OAAZ,GAAwB,IAA5B,CAAkC,OAClC,GAAIC,CAAAA,IAAI,CAAGJ,WAAW,CAACG,OAAZ,CAAoBE,KAA/B,CACAD,IAAI,CAAGA,IAAI,CAACE,IAAL,GAAYC,WAAZ,EAAP,CACAR,cAAc,CAACK,IAAD,CAAd,CACA,GAAII,CAAAA,aAAgC,CAAG,EAAvC,CACAX,KAAK,CAACY,KAAN,CAAYC,OAAZ,CAAoB,SAACC,GAAD,CAAS,CAC3B,GAAIA,GAAG,CAACP,IAAJ,CAASG,WAAT,GAAuBK,OAAvB,CAA+BR,IAA/B,IAAyC,CAAC,CAA9C,CAAiD,CAC/CI,aAAa,CAAEK,IAAf,CAAoBF,GAApB,EACD,CACF,CAJD,EAKA,GAAIP,IAAI,GAAK,EAAb,CAAiB,CACfI,aAAa,CAAG,IAAhB,CACAV,gBAAgB,CAAC,IAAD,CAAhB,CACD,CAHD,IAGO,CACLA,gBAAgB,oBAAKU,aAAL,EAAhB,CACD,CACF,CAjBD,CAmBA,GAAIM,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACZ,KAAD,CAAsD,CACtE,GAAIF,WAAW,CAACG,OAAZ,GAAwB,IAA5B,CAAkC,OAClCH,WAAW,CAACG,OAAZ,CAAoBE,KAApB,CAA4B,EAA5B,CACAN,cAAc,CAAC,EAAD,CAAd,CACAD,gBAAgB,CAAC,IAAD,CAAhB,CACD,CALD,CAOA,mBACE,2BAAK,SAAS,CAAC,WAAf,eACE,6BACE,IAAI,CAAC,MADP,CAEE,EAAE,CAAC,aAFL,CAGE,GAAG,CAAEE,WAHP,CAIE,QAAQ,CAAEC,oBAJZ,CAKE,WAAW,CAAC,oBALd,EADF,cAQE,yBAAG,SAAS,CAAC,cAAb,CAA4B,EAAE,CAAC,OAA/B,CAAuC,OAAO,CAAEa,WAAhD,EARF,CADF,CAYD,CA9CD,CAgDA,cAAelB,CAAAA,SAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport { State, TodoItem } from \"./TodoApp\";\n\ntype Props = {\n  state: State;\n  setFilteredTodos: React.Dispatch<React.SetStateAction<TodoItem[] | null>>;\n  setSearchQuery: React.Dispatch<React.SetStateAction<string>>;\n};\n\nconst SearchBar: React.FunctionComponent<Props> = ({\n  state,\n  setFilteredTodos,\n  setSearchQuery,\n}) => {\n  // const {state, setFilteredTodos, setSearchQuery} = props;\n  const searchInput = useRef<HTMLInputElement>(null);\n\n  let onSearchInputChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (searchInput.current === null) return;\n    let text = searchInput.current.value;\n    text = text.trim().toLowerCase();\n    setSearchQuery(text);\n    let filteredTodos: TodoItem[] | null = [];\n    state.todos.forEach((ele) => {\n      if (ele.text.toLowerCase().indexOf(text) !== -1) {\n        filteredTodos!.push(ele);\n      }\n    });\n    if (text === \"\") {\n      filteredTodos = null;\n      setFilteredTodos(null);\n    } else {\n      setFilteredTodos([...filteredTodos]);\n    }\n  };\n\n  let resetSearch = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (searchInput.current === null) return;\n    searchInput.current.value = \"\";\n    setSearchQuery(\"\");\n    setFilteredTodos(null);\n  };\n\n  return (\n    <div className=\"searchBar\">\n      <input\n        type=\"text\"\n        id=\"searchInput\"\n        ref={searchInput}\n        onChange={onSearchInputChanged}\n        placeholder=\"Search for a To-Do\"\n      />\n      <i className=\"fas fa-times\" id=\"close\" onClick={resetSearch}></i>\n    </div>\n  );\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}