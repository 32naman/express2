{"ast":null,"code":"import _toConsumableArray from\"/home/revpro/Desktop/new/ToDoApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{useEffect,useRef}from\"react\";import netCalls from\"../netCallsMod\";var PORT=8000;var getURL=\"http://localhost:\".concat(PORT,\"/getdata\");var ListSelector=function ListSelector(_ref){var state=_ref.state,updateState=_ref.updateState,setTodos=_ref.setTodos;var lists=useRef(null);useEffect(function(){var todos=[];netCalls.getJSON(getURL,state.listNum,function(err,data){if(err!==null){console.log(\"Empty\");// updateState({todos: todos});\nsetTodos(_toConsumableArray(todos));}else{console.log(\"Loaded\");console.log(data);todos=JSON.parse(data[\"json\"]);// updateState({todos: todos});\nsetTodos(_toConsumableArray(todos));}},state.id_token);if(lists.current!==null)lists.current.selectedIndex=state.listNum-1;},[state.listNum,state.id_token,setTodos]);var getList=function getList(e){console.log(\"onChange\");if(lists.current===null)return;var listNum=Number(lists.current.selectedIndex+1);if(listNum===0)return;console.log(listNum);updateState({listNum:listNum});};var addNewList=function addNewList(e){var totalLists=state.totalLists+1;updateState({totalLists:totalLists});console.log(totalLists);updateState({listNum:totalLists});};return/*#__PURE__*/React.createElement(ListSelectorUI,{state:state,getList:getList,addNewList:addNewList,lists:lists});};var ListSelectorUI=function ListSelectorUI(_ref2){var state=_ref2.state,getList=_ref2.getList,addNewList=_ref2.addNewList,lists=_ref2.lists;//   const { state, getList, addNewList, lists } = props;\nvar optionsList=[];for(var i=1;i<=state.totalLists;i++){optionsList.push(/*#__PURE__*/React.createElement(\"option\",{value:i.toString()},\"List\"+i.toString()));}return/*#__PURE__*/React.createElement(\"div\",{className:\"multipleLists\"},/*#__PURE__*/React.createElement(\"select\",{id:\"lists\",ref:lists,onChange:getList},optionsList),/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-list\",id:\"addList\",onClick:addNewList}));};export default ListSelector;","map":{"version":3,"sources":["/home/revpro/Desktop/new/ToDoApp/src/components/ListSelector.tsx"],"names":["React","useEffect","useRef","netCalls","PORT","getURL","ListSelector","state","updateState","setTodos","lists","todos","getJSON","listNum","err","data","console","log","JSON","parse","id_token","current","selectedIndex","getList","e","Number","addNewList","totalLists","ListSelectorUI","optionsList","i","push","toString"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport netCalls from \"../netCallsMod\";\nimport { State, TodoItem } from \"./TodoApp\";\n\nconst PORT = 8000;\nconst getURL = `http://localhost:${PORT}/getdata`;\n\ntype Props = {\n  state: State;\n  updateState: (stateData: Partial<State>) => void;\n  setTodos: React.Dispatch<React.SetStateAction<TodoItem[]>>;\n};\n\ntype PropsUI = {\n  state: State;\n  getList: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n  addNewList: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  lists: React.RefObject<HTMLSelectElement>;\n};\n\nconst ListSelector: React.FunctionComponent<Props> = ({\n  state,\n  updateState,\n  setTodos,\n}) => {\n  const lists = useRef<HTMLSelectElement>(null);\n  useEffect(() => {\n    let todos = [];\n    netCalls.getJSON(\n      getURL,\n      state.listNum,\n      (err: number | null, data: object) => {\n        if (err !== null) {\n          console.log(\"Empty\");\n          // updateState({todos: todos});\n          setTodos([...todos]);\n        } else {\n          console.log(\"Loaded\");\n          console.log(data);\n          todos = JSON.parse(data[\"json\"]);\n          // updateState({todos: todos});\n          setTodos([...todos]);\n        }\n      },\n      state.id_token\n    );\n    if (lists.current !== null) lists.current.selectedIndex = state.listNum - 1;\n  }, [state.listNum, state.id_token, setTodos]);\n\n  let getList = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    console.log(\"onChange\");\n    if (lists.current === null) return;\n    let listNum = Number(lists.current.selectedIndex + 1);\n    if (listNum === 0) return;\n    console.log(listNum);\n    updateState({ listNum: listNum });\n  };\n\n  let addNewList = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    let totalLists = state.totalLists + 1;\n    updateState({ totalLists: totalLists });\n    console.log(totalLists);\n    updateState({ listNum: totalLists });\n  };\n\n  return (\n    <ListSelectorUI\n      state={state}\n      getList={getList}\n      addNewList={addNewList}\n      lists={lists}\n    />\n  );\n};\n\nconst ListSelectorUI: React.FunctionComponent<PropsUI> = ({\n  state,\n  getList,\n  addNewList,\n  lists,\n}) => {\n  //   const { state, getList, addNewList, lists } = props;\n  let optionsList: JSX.Element[] = [];\n  for (let i = 1; i <= state.totalLists; i++) {\n    optionsList.push(\n      <option value={i.toString()}>{\"List\" + i.toString()}</option>\n    );\n  }\n  return (\n    <div className=\"multipleLists\">\n      <select id=\"lists\" ref={lists} onChange={getList}>\n        {optionsList}\n      </select>\n      <i className=\"fas fa-list\" id=\"addList\" onClick={addNewList}></i>\n    </div>\n  );\n};\n\nexport default ListSelector;\n"]},"metadata":{},"sourceType":"module"}