{"ast":null,"code":"// Copyright 2011 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __extends = this.__extends || function (d, b) {\n  for (var p in b) {\n    if (b.hasOwnProperty(p)) d[p] = b[p];\n  }\n\n  function __() {\n    this.constructor = d;\n  }\n\n  __.prototype = b.prototype;\n  d.prototype = new __();\n};\n\nvar MutationObserverCtor;\nif (typeof WebKitMutationObserver !== 'undefined') MutationObserverCtor = WebKitMutationObserver;else MutationObserverCtor = MutationObserver;\n\nif (MutationObserverCtor === undefined) {\n  console.error('DOM Mutation Observers are required.');\n  console.error('https://developer.mozilla.org/en-US/docs/DOM/MutationObserver');\n  throw Error('DOM Mutation Observers are required');\n}\n\nvar NodeMap = function () {\n  function NodeMap() {\n    this.nodes = [];\n    this.values = [];\n  }\n\n  NodeMap.prototype.isIndex = function (s) {\n    return +s === s >>> 0;\n  };\n\n  NodeMap.prototype.nodeId = function (node) {\n    var id = node[NodeMap.ID_PROP];\n    if (!id) id = node[NodeMap.ID_PROP] = NodeMap.nextId_++;\n    return id;\n  };\n\n  NodeMap.prototype.set = function (node, value) {\n    var id = this.nodeId(node);\n    this.nodes[id] = node;\n    this.values[id] = value;\n  };\n\n  NodeMap.prototype.get = function (node) {\n    var id = this.nodeId(node);\n    return this.values[id];\n  };\n\n  NodeMap.prototype.has = function (node) {\n    return this.nodeId(node) in this.nodes;\n  };\n\n  NodeMap.prototype.delete = function (node) {\n    var id = this.nodeId(node);\n    delete this.nodes[id];\n    this.values[id] = undefined;\n  };\n\n  NodeMap.prototype.keys = function () {\n    var nodes = [];\n\n    for (var id in this.nodes) {\n      if (!this.isIndex(id)) continue;\n      nodes.push(this.nodes[id]);\n    }\n\n    return nodes;\n  };\n\n  NodeMap.ID_PROP = '__mutation_summary_node_map_id__';\n  NodeMap.nextId_ = 1;\n  return NodeMap;\n}();\n/**\n *  var reachableMatchableProduct = [\n *  //  STAYED_OUT,  ENTERED,     STAYED_IN,   EXITED\n *    [ STAYED_OUT,  STAYED_OUT,  STAYED_OUT,  STAYED_OUT ], // STAYED_OUT\n *    [ STAYED_OUT,  ENTERED,     ENTERED,     STAYED_OUT ], // ENTERED\n *    [ STAYED_OUT,  ENTERED,     STAYED_IN,   EXITED     ], // STAYED_IN\n *    [ STAYED_OUT,  STAYED_OUT,  EXITED,      EXITED     ]  // EXITED\n *  ];\n */\n\n\nvar Movement;\n\n(function (Movement) {\n  Movement[Movement[\"STAYED_OUT\"] = 0] = \"STAYED_OUT\";\n  Movement[Movement[\"ENTERED\"] = 1] = \"ENTERED\";\n  Movement[Movement[\"STAYED_IN\"] = 2] = \"STAYED_IN\";\n  Movement[Movement[\"REPARENTED\"] = 3] = \"REPARENTED\";\n  Movement[Movement[\"REORDERED\"] = 4] = \"REORDERED\";\n  Movement[Movement[\"EXITED\"] = 5] = \"EXITED\";\n})(Movement || (Movement = {}));\n\nfunction enteredOrExited(changeType) {\n  return changeType === Movement.ENTERED || changeType === Movement.EXITED;\n}\n\nvar NodeChange = function () {\n  function NodeChange(node, childList, attributes, characterData, oldParentNode, added, attributeOldValues, characterDataOldValue) {\n    if (childList === void 0) {\n      childList = false;\n    }\n\n    if (attributes === void 0) {\n      attributes = false;\n    }\n\n    if (characterData === void 0) {\n      characterData = false;\n    }\n\n    if (oldParentNode === void 0) {\n      oldParentNode = null;\n    }\n\n    if (added === void 0) {\n      added = false;\n    }\n\n    if (attributeOldValues === void 0) {\n      attributeOldValues = null;\n    }\n\n    if (characterDataOldValue === void 0) {\n      characterDataOldValue = null;\n    }\n\n    this.node = node;\n    this.childList = childList;\n    this.attributes = attributes;\n    this.characterData = characterData;\n    this.oldParentNode = oldParentNode;\n    this.added = added;\n    this.attributeOldValues = attributeOldValues;\n    this.characterDataOldValue = characterDataOldValue;\n    this.isCaseInsensitive = this.node.nodeType === Node.ELEMENT_NODE && this.node instanceof HTMLElement && this.node.ownerDocument instanceof HTMLDocument;\n  }\n\n  NodeChange.prototype.getAttributeOldValue = function (name) {\n    if (!this.attributeOldValues) return undefined;\n    if (this.isCaseInsensitive) name = name.toLowerCase();\n    return this.attributeOldValues[name];\n  };\n\n  NodeChange.prototype.getAttributeNamesMutated = function () {\n    var names = [];\n    if (!this.attributeOldValues) return names;\n\n    for (var name in this.attributeOldValues) {\n      names.push(name);\n    }\n\n    return names;\n  };\n\n  NodeChange.prototype.attributeMutated = function (name, oldValue) {\n    this.attributes = true;\n    this.attributeOldValues = this.attributeOldValues || {};\n    if (name in this.attributeOldValues) return;\n    this.attributeOldValues[name] = oldValue;\n  };\n\n  NodeChange.prototype.characterDataMutated = function (oldValue) {\n    if (this.characterData) return;\n    this.characterData = true;\n    this.characterDataOldValue = oldValue;\n  }; // Note: is it possible to receive a removal followed by a removal. This\n  // can occur if the removed node is added to an non-observed node, that\n  // node is added to the observed area, and then the node removed from\n  // it.\n\n\n  NodeChange.prototype.removedFromParent = function (parent) {\n    this.childList = true;\n    if (this.added || this.oldParentNode) this.added = false;else this.oldParentNode = parent;\n  };\n\n  NodeChange.prototype.insertedIntoParent = function () {\n    this.childList = true;\n    this.added = true;\n  }; // An node's oldParent is\n  //   -its present parent, if its parentNode was not changed.\n  //   -null if the first thing that happened to it was an add.\n  //   -the node it was removed from if the first thing that happened to it\n  //      was a remove.\n\n\n  NodeChange.prototype.getOldParent = function () {\n    if (this.childList) {\n      if (this.oldParentNode) return this.oldParentNode;\n      if (this.added) return null;\n    }\n\n    return this.node.parentNode;\n  };\n\n  return NodeChange;\n}();\n\nvar ChildListChange = function () {\n  function ChildListChange() {\n    this.added = new NodeMap();\n    this.removed = new NodeMap();\n    this.maybeMoved = new NodeMap();\n    this.oldPrevious = new NodeMap();\n    this.moved = undefined;\n  }\n\n  return ChildListChange;\n}();\n\nvar TreeChanges = function (_super) {\n  __extends(TreeChanges, _super);\n\n  function TreeChanges(rootNode, mutations) {\n    _super.call(this);\n\n    this.rootNode = rootNode;\n    this.reachableCache = undefined;\n    this.wasReachableCache = undefined;\n    this.anyParentsChanged = false;\n    this.anyAttributesChanged = false;\n    this.anyCharacterDataChanged = false;\n\n    for (var m = 0; m < mutations.length; m++) {\n      var mutation = mutations[m];\n\n      switch (mutation.type) {\n        case 'childList':\n          this.anyParentsChanged = true;\n\n          for (var i = 0; i < mutation.removedNodes.length; i++) {\n            var node = mutation.removedNodes[i];\n            this.getChange(node).removedFromParent(mutation.target);\n          }\n\n          for (var i = 0; i < mutation.addedNodes.length; i++) {\n            var node = mutation.addedNodes[i];\n            this.getChange(node).insertedIntoParent();\n          }\n\n          break;\n\n        case 'attributes':\n          this.anyAttributesChanged = true;\n          var change = this.getChange(mutation.target);\n          change.attributeMutated(mutation.attributeName, mutation.oldValue);\n          break;\n\n        case 'characterData':\n          this.anyCharacterDataChanged = true;\n          var change = this.getChange(mutation.target);\n          change.characterDataMutated(mutation.oldValue);\n          break;\n      }\n    }\n  }\n\n  TreeChanges.prototype.getChange = function (node) {\n    var change = this.get(node);\n\n    if (!change) {\n      change = new NodeChange(node);\n      this.set(node, change);\n    }\n\n    return change;\n  };\n\n  TreeChanges.prototype.getOldParent = function (node) {\n    var change = this.get(node);\n    return change ? change.getOldParent() : node.parentNode;\n  };\n\n  TreeChanges.prototype.getIsReachable = function (node) {\n    if (node === this.rootNode) return true;\n    if (!node) return false;\n    this.reachableCache = this.reachableCache || new NodeMap();\n    var isReachable = this.reachableCache.get(node);\n\n    if (isReachable === undefined) {\n      isReachable = this.getIsReachable(node.parentNode);\n      this.reachableCache.set(node, isReachable);\n    }\n\n    return isReachable;\n  }; // A node wasReachable if its oldParent wasReachable.\n\n\n  TreeChanges.prototype.getWasReachable = function (node) {\n    if (node === this.rootNode) return true;\n    if (!node) return false;\n    this.wasReachableCache = this.wasReachableCache || new NodeMap();\n    var wasReachable = this.wasReachableCache.get(node);\n\n    if (wasReachable === undefined) {\n      wasReachable = this.getWasReachable(this.getOldParent(node));\n      this.wasReachableCache.set(node, wasReachable);\n    }\n\n    return wasReachable;\n  };\n\n  TreeChanges.prototype.reachabilityChange = function (node) {\n    if (this.getIsReachable(node)) {\n      return this.getWasReachable(node) ? Movement.STAYED_IN : Movement.ENTERED;\n    }\n\n    return this.getWasReachable(node) ? Movement.EXITED : Movement.STAYED_OUT;\n  };\n\n  return TreeChanges;\n}(NodeMap);\n\nvar MutationProjection = function () {\n  // TOOD(any)\n  function MutationProjection(rootNode, mutations, selectors, calcReordered, calcOldPreviousSibling) {\n    this.rootNode = rootNode;\n    this.mutations = mutations;\n    this.selectors = selectors;\n    this.calcReordered = calcReordered;\n    this.calcOldPreviousSibling = calcOldPreviousSibling;\n    this.treeChanges = new TreeChanges(rootNode, mutations);\n    this.entered = [];\n    this.exited = [];\n    this.stayedIn = new NodeMap();\n    this.visited = new NodeMap();\n    this.childListChangeMap = undefined;\n    this.characterDataOnly = undefined;\n    this.matchCache = undefined;\n    this.processMutations();\n  }\n\n  MutationProjection.prototype.processMutations = function () {\n    if (!this.treeChanges.anyParentsChanged && !this.treeChanges.anyAttributesChanged) return;\n    var changedNodes = this.treeChanges.keys();\n\n    for (var i = 0; i < changedNodes.length; i++) {\n      this.visitNode(changedNodes[i], undefined);\n    }\n  };\n\n  MutationProjection.prototype.visitNode = function (node, parentReachable) {\n    if (this.visited.has(node)) return;\n    this.visited.set(node, true);\n    var change = this.treeChanges.get(node);\n    var reachable = parentReachable; // node inherits its parent's reachability change unless\n    // its parentNode was mutated.\n\n    if (change && change.childList || reachable == undefined) reachable = this.treeChanges.reachabilityChange(node);\n    if (reachable === Movement.STAYED_OUT) return; // Cache match results for sub-patterns.\n\n    this.matchabilityChange(node);\n\n    if (reachable === Movement.ENTERED) {\n      this.entered.push(node);\n    } else if (reachable === Movement.EXITED) {\n      this.exited.push(node);\n      this.ensureHasOldPreviousSiblingIfNeeded(node);\n    } else if (reachable === Movement.STAYED_IN) {\n      var movement = Movement.STAYED_IN;\n\n      if (change && change.childList) {\n        if (change.oldParentNode !== node.parentNode) {\n          movement = Movement.REPARENTED;\n          this.ensureHasOldPreviousSiblingIfNeeded(node);\n        } else if (this.calcReordered && this.wasReordered(node)) {\n          movement = Movement.REORDERED;\n        }\n      }\n\n      this.stayedIn.set(node, movement);\n    }\n\n    if (reachable === Movement.STAYED_IN) return; // reachable === ENTERED || reachable === EXITED.\n\n    for (var child = node.firstChild; child; child = child.nextSibling) {\n      this.visitNode(child, reachable);\n    }\n  };\n\n  MutationProjection.prototype.ensureHasOldPreviousSiblingIfNeeded = function (node) {\n    if (!this.calcOldPreviousSibling) return;\n    this.processChildlistChanges();\n    var parentNode = node.parentNode;\n    var nodeChange = this.treeChanges.get(node);\n    if (nodeChange && nodeChange.oldParentNode) parentNode = nodeChange.oldParentNode;\n    var change = this.childListChangeMap.get(parentNode);\n\n    if (!change) {\n      change = new ChildListChange();\n      this.childListChangeMap.set(parentNode, change);\n    }\n\n    if (!change.oldPrevious.has(node)) {\n      change.oldPrevious.set(node, node.previousSibling);\n    }\n  };\n\n  MutationProjection.prototype.getChanged = function (summary, selectors, characterDataOnly) {\n    this.selectors = selectors;\n    this.characterDataOnly = characterDataOnly;\n\n    for (var i = 0; i < this.entered.length; i++) {\n      var node = this.entered[i];\n      var matchable = this.matchabilityChange(node);\n      if (matchable === Movement.ENTERED || matchable === Movement.STAYED_IN) summary.added.push(node);\n    }\n\n    var stayedInNodes = this.stayedIn.keys();\n\n    for (var i = 0; i < stayedInNodes.length; i++) {\n      var node = stayedInNodes[i];\n      var matchable = this.matchabilityChange(node);\n\n      if (matchable === Movement.ENTERED) {\n        summary.added.push(node);\n      } else if (matchable === Movement.EXITED) {\n        summary.removed.push(node);\n      } else if (matchable === Movement.STAYED_IN && (summary.reparented || summary.reordered)) {\n        var movement = this.stayedIn.get(node);\n        if (summary.reparented && movement === Movement.REPARENTED) summary.reparented.push(node);else if (summary.reordered && movement === Movement.REORDERED) summary.reordered.push(node);\n      }\n    }\n\n    for (var i = 0; i < this.exited.length; i++) {\n      var node = this.exited[i];\n      var matchable = this.matchabilityChange(node);\n      if (matchable === Movement.EXITED || matchable === Movement.STAYED_IN) summary.removed.push(node);\n    }\n  };\n\n  MutationProjection.prototype.getOldParentNode = function (node) {\n    var change = this.treeChanges.get(node);\n    if (change && change.childList) return change.oldParentNode ? change.oldParentNode : null;\n    var reachabilityChange = this.treeChanges.reachabilityChange(node);\n    if (reachabilityChange === Movement.STAYED_OUT || reachabilityChange === Movement.ENTERED) throw Error('getOldParentNode requested on invalid node.');\n    return node.parentNode;\n  };\n\n  MutationProjection.prototype.getOldPreviousSibling = function (node) {\n    var parentNode = node.parentNode;\n    var nodeChange = this.treeChanges.get(node);\n    if (nodeChange && nodeChange.oldParentNode) parentNode = nodeChange.oldParentNode;\n    var change = this.childListChangeMap.get(parentNode);\n    if (!change) throw Error('getOldPreviousSibling requested on invalid node.');\n    return change.oldPrevious.get(node);\n  };\n\n  MutationProjection.prototype.getOldAttribute = function (element, attrName) {\n    var change = this.treeChanges.get(element);\n    if (!change || !change.attributes) throw Error('getOldAttribute requested on invalid node.');\n    var value = change.getAttributeOldValue(attrName);\n    if (value === undefined) throw Error('getOldAttribute requested for unchanged attribute name.');\n    return value;\n  };\n\n  MutationProjection.prototype.attributeChangedNodes = function (includeAttributes) {\n    if (!this.treeChanges.anyAttributesChanged) return {}; // No attributes mutations occurred.\n\n    var attributeFilter;\n    var caseInsensitiveFilter;\n\n    if (includeAttributes) {\n      attributeFilter = {};\n      caseInsensitiveFilter = {};\n\n      for (var i = 0; i < includeAttributes.length; i++) {\n        var attrName = includeAttributes[i];\n        attributeFilter[attrName] = true;\n        caseInsensitiveFilter[attrName.toLowerCase()] = attrName;\n      }\n    }\n\n    var result = {};\n    var nodes = this.treeChanges.keys();\n\n    for (var i = 0; i < nodes.length; i++) {\n      var node = nodes[i];\n      var change = this.treeChanges.get(node);\n      if (!change.attributes) continue;\n\n      if (Movement.STAYED_IN !== this.treeChanges.reachabilityChange(node) || Movement.STAYED_IN !== this.matchabilityChange(node)) {\n        continue;\n      }\n\n      var element = node;\n      var changedAttrNames = change.getAttributeNamesMutated();\n\n      for (var j = 0; j < changedAttrNames.length; j++) {\n        var attrName = changedAttrNames[j];\n\n        if (attributeFilter && !attributeFilter[attrName] && !(change.isCaseInsensitive && caseInsensitiveFilter[attrName])) {\n          continue;\n        }\n\n        var oldValue = change.getAttributeOldValue(attrName);\n        if (oldValue === element.getAttribute(attrName)) continue;\n        if (caseInsensitiveFilter && change.isCaseInsensitive) attrName = caseInsensitiveFilter[attrName];\n        result[attrName] = result[attrName] || [];\n        result[attrName].push(element);\n      }\n    }\n\n    return result;\n  };\n\n  MutationProjection.prototype.getOldCharacterData = function (node) {\n    var change = this.treeChanges.get(node);\n    if (!change || !change.characterData) throw Error('getOldCharacterData requested on invalid node.');\n    return change.characterDataOldValue;\n  };\n\n  MutationProjection.prototype.getCharacterDataChanged = function () {\n    if (!this.treeChanges.anyCharacterDataChanged) return []; // No characterData mutations occurred.\n\n    var nodes = this.treeChanges.keys();\n    var result = [];\n\n    for (var i = 0; i < nodes.length; i++) {\n      var target = nodes[i];\n      if (Movement.STAYED_IN !== this.treeChanges.reachabilityChange(target)) continue;\n      var change = this.treeChanges.get(target);\n      if (!change.characterData || target.textContent == change.characterDataOldValue) continue;\n      result.push(target);\n    }\n\n    return result;\n  };\n\n  MutationProjection.prototype.computeMatchabilityChange = function (selector, el) {\n    if (!this.matchCache) this.matchCache = [];\n    if (!this.matchCache[selector.uid]) this.matchCache[selector.uid] = new NodeMap();\n    var cache = this.matchCache[selector.uid];\n    var result = cache.get(el);\n\n    if (result === undefined) {\n      result = selector.matchabilityChange(el, this.treeChanges.get(el));\n      cache.set(el, result);\n    }\n\n    return result;\n  };\n\n  MutationProjection.prototype.matchabilityChange = function (node) {\n    var _this = this; // TODO(rafaelw): Include PI, CDATA?\n    // Only include text nodes.\n\n\n    if (this.characterDataOnly) {\n      switch (node.nodeType) {\n        case Node.COMMENT_NODE:\n        case Node.TEXT_NODE:\n          return Movement.STAYED_IN;\n\n        default:\n          return Movement.STAYED_OUT;\n      }\n    } // No element filter. Include all nodes.\n\n\n    if (!this.selectors) return Movement.STAYED_IN; // Element filter. Exclude non-elements.\n\n    if (node.nodeType !== Node.ELEMENT_NODE) return Movement.STAYED_OUT;\n    var el = node;\n    var matchChanges = this.selectors.map(function (selector) {\n      return _this.computeMatchabilityChange(selector, el);\n    });\n    var accum = Movement.STAYED_OUT;\n    var i = 0;\n\n    while (accum !== Movement.STAYED_IN && i < matchChanges.length) {\n      switch (matchChanges[i]) {\n        case Movement.STAYED_IN:\n          accum = Movement.STAYED_IN;\n          break;\n\n        case Movement.ENTERED:\n          if (accum === Movement.EXITED) accum = Movement.STAYED_IN;else accum = Movement.ENTERED;\n          break;\n\n        case Movement.EXITED:\n          if (accum === Movement.ENTERED) accum = Movement.STAYED_IN;else accum = Movement.EXITED;\n          break;\n      }\n\n      i++;\n    }\n\n    return accum;\n  };\n\n  MutationProjection.prototype.getChildlistChange = function (el) {\n    var change = this.childListChangeMap.get(el);\n\n    if (!change) {\n      change = new ChildListChange();\n      this.childListChangeMap.set(el, change);\n    }\n\n    return change;\n  };\n\n  MutationProjection.prototype.processChildlistChanges = function () {\n    if (this.childListChangeMap) return;\n    this.childListChangeMap = new NodeMap();\n\n    for (var i = 0; i < this.mutations.length; i++) {\n      var mutation = this.mutations[i];\n      if (mutation.type != 'childList') continue;\n      if (this.treeChanges.reachabilityChange(mutation.target) !== Movement.STAYED_IN && !this.calcOldPreviousSibling) continue;\n      var change = this.getChildlistChange(mutation.target);\n      var oldPrevious = mutation.previousSibling;\n\n      function recordOldPrevious(node, previous) {\n        if (!node || change.oldPrevious.has(node) || change.added.has(node) || change.maybeMoved.has(node)) return;\n        if (previous && (change.added.has(previous) || change.maybeMoved.has(previous))) return;\n        change.oldPrevious.set(node, previous);\n      }\n\n      for (var j = 0; j < mutation.removedNodes.length; j++) {\n        var node = mutation.removedNodes[j];\n        recordOldPrevious(node, oldPrevious);\n\n        if (change.added.has(node)) {\n          change.added.delete(node);\n        } else {\n          change.removed.set(node, true);\n          change.maybeMoved.delete(node);\n        }\n\n        oldPrevious = node;\n      }\n\n      recordOldPrevious(mutation.nextSibling, oldPrevious);\n\n      for (var j = 0; j < mutation.addedNodes.length; j++) {\n        var node = mutation.addedNodes[j];\n\n        if (change.removed.has(node)) {\n          change.removed.delete(node);\n          change.maybeMoved.set(node, true);\n        } else {\n          change.added.set(node, true);\n        }\n      }\n    }\n  };\n\n  MutationProjection.prototype.wasReordered = function (node) {\n    if (!this.treeChanges.anyParentsChanged) return false;\n    this.processChildlistChanges();\n    var parentNode = node.parentNode;\n    var nodeChange = this.treeChanges.get(node);\n    if (nodeChange && nodeChange.oldParentNode) parentNode = nodeChange.oldParentNode;\n    var change = this.childListChangeMap.get(parentNode);\n    if (!change) return false;\n    if (change.moved) return change.moved.get(node);\n    change.moved = new NodeMap();\n    var pendingMoveDecision = new NodeMap();\n\n    function isMoved(node) {\n      if (!node) return false;\n      if (!change.maybeMoved.has(node)) return false;\n      var didMove = change.moved.get(node);\n      if (didMove !== undefined) return didMove;\n\n      if (pendingMoveDecision.has(node)) {\n        didMove = true;\n      } else {\n        pendingMoveDecision.set(node, true);\n        didMove = getPrevious(node) !== getOldPrevious(node);\n      }\n\n      if (pendingMoveDecision.has(node)) {\n        pendingMoveDecision.delete(node);\n        change.moved.set(node, didMove);\n      } else {\n        didMove = change.moved.get(node);\n      }\n\n      return didMove;\n    }\n\n    var oldPreviousCache = new NodeMap();\n\n    function getOldPrevious(node) {\n      var oldPrevious = oldPreviousCache.get(node);\n      if (oldPrevious !== undefined) return oldPrevious;\n      oldPrevious = change.oldPrevious.get(node);\n\n      while (oldPrevious && (change.removed.has(oldPrevious) || isMoved(oldPrevious))) {\n        oldPrevious = getOldPrevious(oldPrevious);\n      }\n\n      if (oldPrevious === undefined) oldPrevious = node.previousSibling;\n      oldPreviousCache.set(node, oldPrevious);\n      return oldPrevious;\n    }\n\n    var previousCache = new NodeMap();\n\n    function getPrevious(node) {\n      if (previousCache.has(node)) return previousCache.get(node);\n      var previous = node.previousSibling;\n\n      while (previous && (change.added.has(previous) || isMoved(previous))) {\n        previous = previous.previousSibling;\n      }\n\n      previousCache.set(node, previous);\n      return previous;\n    }\n\n    change.maybeMoved.keys().forEach(isMoved);\n    return change.moved.get(node);\n  };\n\n  return MutationProjection;\n}();\n\nvar Summary = function () {\n  function Summary(projection, query) {\n    var _this = this;\n\n    this.projection = projection;\n    this.added = [];\n    this.removed = [];\n    this.reparented = query.all || query.element || query.characterData ? [] : undefined;\n    this.reordered = query.all ? [] : undefined;\n    projection.getChanged(this, query.elementFilter, query.characterData);\n\n    if (query.all || query.attribute || query.attributeList) {\n      var filter = query.attribute ? [query.attribute] : query.attributeList;\n      var attributeChanged = projection.attributeChangedNodes(filter);\n\n      if (query.attribute) {\n        this.valueChanged = attributeChanged[query.attribute] || [];\n      } else {\n        this.attributeChanged = attributeChanged;\n\n        if (query.attributeList) {\n          query.attributeList.forEach(function (attrName) {\n            if (!_this.attributeChanged.hasOwnProperty(attrName)) _this.attributeChanged[attrName] = [];\n          });\n        }\n      }\n    }\n\n    if (query.all || query.characterData) {\n      var characterDataChanged = projection.getCharacterDataChanged();\n      if (query.characterData) this.valueChanged = characterDataChanged;else this.characterDataChanged = characterDataChanged;\n    }\n\n    if (this.reordered) this.getOldPreviousSibling = projection.getOldPreviousSibling.bind(projection);\n  }\n\n  Summary.prototype.getOldParentNode = function (node) {\n    return this.projection.getOldParentNode(node);\n  };\n\n  Summary.prototype.getOldAttribute = function (node, name) {\n    return this.projection.getOldAttribute(node, name);\n  };\n\n  Summary.prototype.getOldCharacterData = function (node) {\n    return this.projection.getOldCharacterData(node);\n  };\n\n  Summary.prototype.getOldPreviousSibling = function (node) {\n    return this.projection.getOldPreviousSibling(node);\n  };\n\n  return Summary;\n}(); // TODO(rafaelw): Allow ':' and '.' as valid name characters.\n\n\nvar validNameInitialChar = /[a-zA-Z_]+/;\nvar validNameNonInitialChar = /[a-zA-Z0-9_\\-]+/; // TODO(rafaelw): Consider allowing backslash in the attrValue.\n// TODO(rafaelw): There's got a to be way to represent this state machine\n// more compactly???\n\nfunction escapeQuotes(value) {\n  return '\"' + value.replace(/\"/, '\\\\\\\"') + '\"';\n}\n\nvar Qualifier = function () {\n  function Qualifier() {}\n\n  Qualifier.prototype.matches = function (oldValue) {\n    if (oldValue === null) return false;\n    if (this.attrValue === undefined) return true;\n    if (!this.contains) return this.attrValue == oldValue;\n    var tokens = oldValue.split(' ');\n\n    for (var i = 0; i < tokens.length; i++) {\n      if (this.attrValue === tokens[i]) return true;\n    }\n\n    return false;\n  };\n\n  Qualifier.prototype.toString = function () {\n    if (this.attrName === 'class' && this.contains) return '.' + this.attrValue;\n    if (this.attrName === 'id' && !this.contains) return '#' + this.attrValue;\n    if (this.contains) return '[' + this.attrName + '~=' + escapeQuotes(this.attrValue) + ']';\n    if ('attrValue' in this) return '[' + this.attrName + '=' + escapeQuotes(this.attrValue) + ']';\n    return '[' + this.attrName + ']';\n  };\n\n  return Qualifier;\n}();\n\nvar Selector = function () {\n  function Selector() {\n    this.uid = Selector.nextUid++;\n    this.qualifiers = [];\n  }\n\n  Object.defineProperty(Selector.prototype, \"caseInsensitiveTagName\", {\n    get: function get() {\n      return this.tagName.toUpperCase();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Selector.prototype, \"selectorString\", {\n    get: function get() {\n      return this.tagName + this.qualifiers.join('');\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Selector.prototype.isMatching = function (el) {\n    return el[Selector.matchesSelector](this.selectorString);\n  };\n\n  Selector.prototype.wasMatching = function (el, change, isMatching) {\n    if (!change || !change.attributes) return isMatching;\n    var tagName = change.isCaseInsensitive ? this.caseInsensitiveTagName : this.tagName;\n    if (tagName !== '*' && tagName !== el.tagName) return false;\n    var attributeOldValues = [];\n    var anyChanged = false;\n\n    for (var i = 0; i < this.qualifiers.length; i++) {\n      var qualifier = this.qualifiers[i];\n      var oldValue = change.getAttributeOldValue(qualifier.attrName);\n      attributeOldValues.push(oldValue);\n      anyChanged = anyChanged || oldValue !== undefined;\n    }\n\n    if (!anyChanged) return isMatching;\n\n    for (var i = 0; i < this.qualifiers.length; i++) {\n      var qualifier = this.qualifiers[i];\n      var oldValue = attributeOldValues[i];\n      if (oldValue === undefined) oldValue = el.getAttribute(qualifier.attrName);\n      if (!qualifier.matches(oldValue)) return false;\n    }\n\n    return true;\n  };\n\n  Selector.prototype.matchabilityChange = function (el, change) {\n    var isMatching = this.isMatching(el);\n    if (isMatching) return this.wasMatching(el, change, isMatching) ? Movement.STAYED_IN : Movement.ENTERED;else return this.wasMatching(el, change, isMatching) ? Movement.EXITED : Movement.STAYED_OUT;\n  };\n\n  Selector.parseSelectors = function (input) {\n    var selectors = [];\n    var currentSelector;\n    var currentQualifier;\n\n    function newSelector() {\n      if (currentSelector) {\n        if (currentQualifier) {\n          currentSelector.qualifiers.push(currentQualifier);\n          currentQualifier = undefined;\n        }\n\n        selectors.push(currentSelector);\n      }\n\n      currentSelector = new Selector();\n    }\n\n    function newQualifier() {\n      if (currentQualifier) currentSelector.qualifiers.push(currentQualifier);\n      currentQualifier = new Qualifier();\n    }\n\n    var WHITESPACE = /\\s/;\n    var valueQuoteChar;\n    var SYNTAX_ERROR = 'Invalid or unsupported selector syntax.';\n    var SELECTOR = 1;\n    var TAG_NAME = 2;\n    var QUALIFIER = 3;\n    var QUALIFIER_NAME_FIRST_CHAR = 4;\n    var QUALIFIER_NAME = 5;\n    var ATTR_NAME_FIRST_CHAR = 6;\n    var ATTR_NAME = 7;\n    var EQUIV_OR_ATTR_QUAL_END = 8;\n    var EQUAL = 9;\n    var ATTR_QUAL_END = 10;\n    var VALUE_FIRST_CHAR = 11;\n    var VALUE = 12;\n    var QUOTED_VALUE = 13;\n    var SELECTOR_SEPARATOR = 14;\n    var state = SELECTOR;\n    var i = 0;\n\n    while (i < input.length) {\n      var c = input[i++];\n\n      switch (state) {\n        case SELECTOR:\n          if (c.match(validNameInitialChar)) {\n            newSelector();\n            currentSelector.tagName = c;\n            state = TAG_NAME;\n            break;\n          }\n\n          if (c == '*') {\n            newSelector();\n            currentSelector.tagName = '*';\n            state = QUALIFIER;\n            break;\n          }\n\n          if (c == '.') {\n            newSelector();\n            newQualifier();\n            currentSelector.tagName = '*';\n            currentQualifier.attrName = 'class';\n            currentQualifier.contains = true;\n            state = QUALIFIER_NAME_FIRST_CHAR;\n            break;\n          }\n\n          if (c == '#') {\n            newSelector();\n            newQualifier();\n            currentSelector.tagName = '*';\n            currentQualifier.attrName = 'id';\n            state = QUALIFIER_NAME_FIRST_CHAR;\n            break;\n          }\n\n          if (c == '[') {\n            newSelector();\n            newQualifier();\n            currentSelector.tagName = '*';\n            currentQualifier.attrName = '';\n            state = ATTR_NAME_FIRST_CHAR;\n            break;\n          }\n\n          if (c.match(WHITESPACE)) break;\n          throw Error(SYNTAX_ERROR);\n\n        case TAG_NAME:\n          if (c.match(validNameNonInitialChar)) {\n            currentSelector.tagName += c;\n            break;\n          }\n\n          if (c == '.') {\n            newQualifier();\n            currentQualifier.attrName = 'class';\n            currentQualifier.contains = true;\n            state = QUALIFIER_NAME_FIRST_CHAR;\n            break;\n          }\n\n          if (c == '#') {\n            newQualifier();\n            currentQualifier.attrName = 'id';\n            state = QUALIFIER_NAME_FIRST_CHAR;\n            break;\n          }\n\n          if (c == '[') {\n            newQualifier();\n            currentQualifier.attrName = '';\n            state = ATTR_NAME_FIRST_CHAR;\n            break;\n          }\n\n          if (c.match(WHITESPACE)) {\n            state = SELECTOR_SEPARATOR;\n            break;\n          }\n\n          if (c == ',') {\n            state = SELECTOR;\n            break;\n          }\n\n          throw Error(SYNTAX_ERROR);\n\n        case QUALIFIER:\n          if (c == '.') {\n            newQualifier();\n            currentQualifier.attrName = 'class';\n            currentQualifier.contains = true;\n            state = QUALIFIER_NAME_FIRST_CHAR;\n            break;\n          }\n\n          if (c == '#') {\n            newQualifier();\n            currentQualifier.attrName = 'id';\n            state = QUALIFIER_NAME_FIRST_CHAR;\n            break;\n          }\n\n          if (c == '[') {\n            newQualifier();\n            currentQualifier.attrName = '';\n            state = ATTR_NAME_FIRST_CHAR;\n            break;\n          }\n\n          if (c.match(WHITESPACE)) {\n            state = SELECTOR_SEPARATOR;\n            break;\n          }\n\n          if (c == ',') {\n            state = SELECTOR;\n            break;\n          }\n\n          throw Error(SYNTAX_ERROR);\n\n        case QUALIFIER_NAME_FIRST_CHAR:\n          if (c.match(validNameInitialChar)) {\n            currentQualifier.attrValue = c;\n            state = QUALIFIER_NAME;\n            break;\n          }\n\n          throw Error(SYNTAX_ERROR);\n\n        case QUALIFIER_NAME:\n          if (c.match(validNameNonInitialChar)) {\n            currentQualifier.attrValue += c;\n            break;\n          }\n\n          if (c == '.') {\n            newQualifier();\n            currentQualifier.attrName = 'class';\n            currentQualifier.contains = true;\n            state = QUALIFIER_NAME_FIRST_CHAR;\n            break;\n          }\n\n          if (c == '#') {\n            newQualifier();\n            currentQualifier.attrName = 'id';\n            state = QUALIFIER_NAME_FIRST_CHAR;\n            break;\n          }\n\n          if (c == '[') {\n            newQualifier();\n            state = ATTR_NAME_FIRST_CHAR;\n            break;\n          }\n\n          if (c.match(WHITESPACE)) {\n            state = SELECTOR_SEPARATOR;\n            break;\n          }\n\n          if (c == ',') {\n            state = SELECTOR;\n            break;\n          }\n\n          throw Error(SYNTAX_ERROR);\n\n        case ATTR_NAME_FIRST_CHAR:\n          if (c.match(validNameInitialChar)) {\n            currentQualifier.attrName = c;\n            state = ATTR_NAME;\n            break;\n          }\n\n          if (c.match(WHITESPACE)) break;\n          throw Error(SYNTAX_ERROR);\n\n        case ATTR_NAME:\n          if (c.match(validNameNonInitialChar)) {\n            currentQualifier.attrName += c;\n            break;\n          }\n\n          if (c.match(WHITESPACE)) {\n            state = EQUIV_OR_ATTR_QUAL_END;\n            break;\n          }\n\n          if (c == '~') {\n            currentQualifier.contains = true;\n            state = EQUAL;\n            break;\n          }\n\n          if (c == '=') {\n            currentQualifier.attrValue = '';\n            state = VALUE_FIRST_CHAR;\n            break;\n          }\n\n          if (c == ']') {\n            state = QUALIFIER;\n            break;\n          }\n\n          throw Error(SYNTAX_ERROR);\n\n        case EQUIV_OR_ATTR_QUAL_END:\n          if (c == '~') {\n            currentQualifier.contains = true;\n            state = EQUAL;\n            break;\n          }\n\n          if (c == '=') {\n            currentQualifier.attrValue = '';\n            state = VALUE_FIRST_CHAR;\n            break;\n          }\n\n          if (c == ']') {\n            state = QUALIFIER;\n            break;\n          }\n\n          if (c.match(WHITESPACE)) break;\n          throw Error(SYNTAX_ERROR);\n\n        case EQUAL:\n          if (c == '=') {\n            currentQualifier.attrValue = '';\n            state = VALUE_FIRST_CHAR;\n            break;\n          }\n\n          throw Error(SYNTAX_ERROR);\n\n        case ATTR_QUAL_END:\n          if (c == ']') {\n            state = QUALIFIER;\n            break;\n          }\n\n          if (c.match(WHITESPACE)) break;\n          throw Error(SYNTAX_ERROR);\n\n        case VALUE_FIRST_CHAR:\n          if (c.match(WHITESPACE)) break;\n\n          if (c == '\"' || c == \"'\") {\n            valueQuoteChar = c;\n            state = QUOTED_VALUE;\n            break;\n          }\n\n          currentQualifier.attrValue += c;\n          state = VALUE;\n          break;\n\n        case VALUE:\n          if (c.match(WHITESPACE)) {\n            state = ATTR_QUAL_END;\n            break;\n          }\n\n          if (c == ']') {\n            state = QUALIFIER;\n            break;\n          }\n\n          if (c == \"'\" || c == '\"') throw Error(SYNTAX_ERROR);\n          currentQualifier.attrValue += c;\n          break;\n\n        case QUOTED_VALUE:\n          if (c == valueQuoteChar) {\n            state = ATTR_QUAL_END;\n            break;\n          }\n\n          currentQualifier.attrValue += c;\n          break;\n\n        case SELECTOR_SEPARATOR:\n          if (c.match(WHITESPACE)) break;\n\n          if (c == ',') {\n            state = SELECTOR;\n            break;\n          }\n\n          throw Error(SYNTAX_ERROR);\n      }\n    }\n\n    switch (state) {\n      case SELECTOR:\n      case TAG_NAME:\n      case QUALIFIER:\n      case QUALIFIER_NAME:\n      case SELECTOR_SEPARATOR:\n        // Valid end states.\n        newSelector();\n        break;\n\n      default:\n        throw Error(SYNTAX_ERROR);\n    }\n\n    if (!selectors.length) throw Error(SYNTAX_ERROR);\n    return selectors;\n  };\n\n  Selector.nextUid = 1;\n\n  Selector.matchesSelector = function () {\n    var element = document.createElement('div');\n    if (typeof element['webkitMatchesSelector'] === 'function') return 'webkitMatchesSelector';\n    if (typeof element['mozMatchesSelector'] === 'function') return 'mozMatchesSelector';\n    if (typeof element['msMatchesSelector'] === 'function') return 'msMatchesSelector';\n    return 'matchesSelector';\n  }();\n\n  return Selector;\n}();\n\nvar attributeFilterPattern = /^([a-zA-Z:_]+[a-zA-Z0-9_\\-:\\.]*)$/;\n\nfunction validateAttribute(attribute) {\n  if (typeof attribute != 'string') throw Error('Invalid request opion. attribute must be a non-zero length string.');\n  attribute = attribute.trim();\n  if (!attribute) throw Error('Invalid request opion. attribute must be a non-zero length string.');\n  if (!attribute.match(attributeFilterPattern)) throw Error('Invalid request option. invalid attribute name: ' + attribute);\n  return attribute;\n}\n\nfunction validateElementAttributes(attribs) {\n  if (!attribs.trim().length) throw Error('Invalid request option: elementAttributes must contain at least one attribute.');\n  var lowerAttributes = {};\n  var attributes = {};\n  var tokens = attribs.split(/\\s+/);\n\n  for (var i = 0; i < tokens.length; i++) {\n    var name = tokens[i];\n    if (!name) continue;\n    var name = validateAttribute(name);\n    var nameLower = name.toLowerCase();\n    if (lowerAttributes[nameLower]) throw Error('Invalid request option: observing multiple case variations of the same attribute is not supported.');\n    attributes[name] = true;\n    lowerAttributes[nameLower] = true;\n  }\n\n  return Object.keys(attributes);\n}\n\nfunction elementFilterAttributes(selectors) {\n  var attributes = {};\n  selectors.forEach(function (selector) {\n    selector.qualifiers.forEach(function (qualifier) {\n      attributes[qualifier.attrName] = true;\n    });\n  });\n  return Object.keys(attributes);\n}\n\nvar MutationSummary = function () {\n  function MutationSummary(opts) {\n    var _this = this;\n\n    this.connected = false;\n    this.options = MutationSummary.validateOptions(opts);\n    this.observerOptions = MutationSummary.createObserverOptions(this.options.queries);\n    this.root = this.options.rootNode;\n    this.callback = this.options.callback;\n    this.elementFilter = Array.prototype.concat.apply([], this.options.queries.map(function (query) {\n      return query.elementFilter ? query.elementFilter : [];\n    }));\n    if (!this.elementFilter.length) this.elementFilter = undefined;\n    this.calcReordered = this.options.queries.some(function (query) {\n      return query.all;\n    });\n    this.queryValidators = []; // TODO(rafaelw): Shouldn't always define this.\n\n    if (MutationSummary.createQueryValidator) {\n      this.queryValidators = this.options.queries.map(function (query) {\n        return MutationSummary.createQueryValidator(_this.root, query);\n      });\n    }\n\n    this.observer = new MutationObserverCtor(function (mutations) {\n      _this.observerCallback(mutations);\n    });\n    this.reconnect();\n  }\n\n  MutationSummary.createObserverOptions = function (queries) {\n    var observerOptions = {\n      childList: true,\n      subtree: true\n    };\n    var attributeFilter;\n\n    function observeAttributes(attributes) {\n      if (observerOptions.attributes && !attributeFilter) return; // already observing all.\n\n      observerOptions.attributes = true;\n      observerOptions.attributeOldValue = true;\n\n      if (!attributes) {\n        // observe all.\n        attributeFilter = undefined;\n        return;\n      } // add to observed.\n\n\n      attributeFilter = attributeFilter || {};\n      attributes.forEach(function (attribute) {\n        attributeFilter[attribute] = true;\n        attributeFilter[attribute.toLowerCase()] = true;\n      });\n    }\n\n    queries.forEach(function (query) {\n      if (query.characterData) {\n        observerOptions.characterData = true;\n        observerOptions.characterDataOldValue = true;\n        return;\n      }\n\n      if (query.all) {\n        observeAttributes();\n        observerOptions.characterData = true;\n        observerOptions.characterDataOldValue = true;\n        return;\n      }\n\n      if (query.attribute) {\n        observeAttributes([query.attribute.trim()]);\n        return;\n      }\n\n      var attributes = elementFilterAttributes(query.elementFilter).concat(query.attributeList || []);\n      if (attributes.length) observeAttributes(attributes);\n    });\n    if (attributeFilter) observerOptions.attributeFilter = Object.keys(attributeFilter);\n    return observerOptions;\n  };\n\n  MutationSummary.validateOptions = function (options) {\n    for (var prop in options) {\n      if (!(prop in MutationSummary.optionKeys)) throw Error('Invalid option: ' + prop);\n    }\n\n    if (typeof options.callback !== 'function') throw Error('Invalid options: callback is required and must be a function');\n    if (!options.queries || !options.queries.length) throw Error('Invalid options: queries must contain at least one query request object.');\n    var opts = {\n      callback: options.callback,\n      rootNode: options.rootNode || document,\n      observeOwnChanges: !!options.observeOwnChanges,\n      oldPreviousSibling: !!options.oldPreviousSibling,\n      queries: []\n    };\n\n    for (var i = 0; i < options.queries.length; i++) {\n      var request = options.queries[i]; // all\n\n      if (request.all) {\n        if (Object.keys(request).length > 1) throw Error('Invalid request option. all has no options.');\n        opts.queries.push({\n          all: true\n        });\n        continue;\n      } // attribute\n\n\n      if ('attribute' in request) {\n        var query = {\n          attribute: validateAttribute(request.attribute)\n        };\n        query.elementFilter = Selector.parseSelectors('*[' + query.attribute + ']');\n        if (Object.keys(request).length > 1) throw Error('Invalid request option. attribute has no options.');\n        opts.queries.push(query);\n        continue;\n      } // element\n\n\n      if ('element' in request) {\n        var requestOptionCount = Object.keys(request).length;\n        var query = {\n          element: request.element,\n          elementFilter: Selector.parseSelectors(request.element)\n        };\n\n        if (request.hasOwnProperty('elementAttributes')) {\n          query.attributeList = validateElementAttributes(request.elementAttributes);\n          requestOptionCount--;\n        }\n\n        if (requestOptionCount > 1) throw Error('Invalid request option. element only allows elementAttributes option.');\n        opts.queries.push(query);\n        continue;\n      } // characterData\n\n\n      if (request.characterData) {\n        if (Object.keys(request).length > 1) throw Error('Invalid request option. characterData has no options.');\n        opts.queries.push({\n          characterData: true\n        });\n        continue;\n      }\n\n      throw Error('Invalid request option. Unknown query request.');\n    }\n\n    return opts;\n  };\n\n  MutationSummary.prototype.createSummaries = function (mutations) {\n    if (!mutations || !mutations.length) return [];\n    var projection = new MutationProjection(this.root, mutations, this.elementFilter, this.calcReordered, this.options.oldPreviousSibling);\n    var summaries = [];\n\n    for (var i = 0; i < this.options.queries.length; i++) {\n      summaries.push(new Summary(projection, this.options.queries[i]));\n    }\n\n    return summaries;\n  };\n\n  MutationSummary.prototype.checkpointQueryValidators = function () {\n    this.queryValidators.forEach(function (validator) {\n      if (validator) validator.recordPreviousState();\n    });\n  };\n\n  MutationSummary.prototype.runQueryValidators = function (summaries) {\n    this.queryValidators.forEach(function (validator, index) {\n      if (validator) validator.validate(summaries[index]);\n    });\n  };\n\n  MutationSummary.prototype.changesToReport = function (summaries) {\n    return summaries.some(function (summary) {\n      var summaryProps = ['added', 'removed', 'reordered', 'reparented', 'valueChanged', 'characterDataChanged'];\n      if (summaryProps.some(function (prop) {\n        return summary[prop] && summary[prop].length;\n      })) return true;\n\n      if (summary.attributeChanged) {\n        var attrNames = Object.keys(summary.attributeChanged);\n        var attrsChanged = attrNames.some(function (attrName) {\n          return !!summary.attributeChanged[attrName].length;\n        });\n        if (attrsChanged) return true;\n      }\n\n      return false;\n    });\n  };\n\n  MutationSummary.prototype.observerCallback = function (mutations) {\n    if (!this.options.observeOwnChanges) this.observer.disconnect();\n    var summaries = this.createSummaries(mutations);\n    this.runQueryValidators(summaries);\n    if (this.options.observeOwnChanges) this.checkpointQueryValidators();\n    if (this.changesToReport(summaries)) this.callback(summaries); // disconnect() may have been called during the callback.\n\n    if (!this.options.observeOwnChanges && this.connected) {\n      this.checkpointQueryValidators();\n      this.observer.observe(this.root, this.observerOptions);\n    }\n  };\n\n  MutationSummary.prototype.reconnect = function () {\n    if (this.connected) throw Error('Already connected');\n    this.observer.observe(this.root, this.observerOptions);\n    this.connected = true;\n    this.checkpointQueryValidators();\n  };\n\n  MutationSummary.prototype.takeSummaries = function () {\n    if (!this.connected) throw Error('Not connected');\n    var summaries = this.createSummaries(this.observer.takeRecords());\n    return this.changesToReport(summaries) ? summaries : undefined;\n  };\n\n  MutationSummary.prototype.disconnect = function () {\n    var summaries = this.takeSummaries();\n    this.observer.disconnect();\n    this.connected = false;\n    return summaries;\n  };\n\n  MutationSummary.NodeMap = NodeMap; // exposed for use in TreeMirror.\n\n  MutationSummary.parseElementFilter = Selector.parseSelectors; // exposed for testing.\n\n  MutationSummary.optionKeys = {\n    'callback': true,\n    'queries': true,\n    'rootNode': true,\n    'oldPreviousSibling': true,\n    'observeOwnChanges': true\n  };\n  return MutationSummary;\n}();\n\nmodule.exports = MutationSummary;","map":{"version":3,"sources":["/home/revpro/Desktop/new/ToDoApp/node_modules/mutation-summary/src/mutation-summary.js"],"names":["__extends","d","b","p","hasOwnProperty","__","constructor","prototype","MutationObserverCtor","WebKitMutationObserver","MutationObserver","undefined","console","error","Error","NodeMap","nodes","values","isIndex","s","nodeId","node","id","ID_PROP","nextId_","set","value","get","has","delete","keys","push","Movement","enteredOrExited","changeType","ENTERED","EXITED","NodeChange","childList","attributes","characterData","oldParentNode","added","attributeOldValues","characterDataOldValue","isCaseInsensitive","nodeType","Node","ELEMENT_NODE","HTMLElement","ownerDocument","HTMLDocument","getAttributeOldValue","name","toLowerCase","getAttributeNamesMutated","names","attributeMutated","oldValue","characterDataMutated","removedFromParent","parent","insertedIntoParent","getOldParent","parentNode","ChildListChange","removed","maybeMoved","oldPrevious","moved","TreeChanges","_super","rootNode","mutations","call","reachableCache","wasReachableCache","anyParentsChanged","anyAttributesChanged","anyCharacterDataChanged","m","length","mutation","type","i","removedNodes","getChange","target","addedNodes","change","attributeName","getIsReachable","isReachable","getWasReachable","wasReachable","reachabilityChange","STAYED_IN","STAYED_OUT","MutationProjection","selectors","calcReordered","calcOldPreviousSibling","treeChanges","entered","exited","stayedIn","visited","childListChangeMap","characterDataOnly","matchCache","processMutations","changedNodes","visitNode","parentReachable","reachable","matchabilityChange","ensureHasOldPreviousSiblingIfNeeded","movement","REPARENTED","wasReordered","REORDERED","child","firstChild","nextSibling","processChildlistChanges","nodeChange","previousSibling","getChanged","summary","matchable","stayedInNodes","reparented","reordered","getOldParentNode","getOldPreviousSibling","getOldAttribute","element","attrName","attributeChangedNodes","includeAttributes","attributeFilter","caseInsensitiveFilter","result","changedAttrNames","j","getAttribute","getOldCharacterData","getCharacterDataChanged","textContent","computeMatchabilityChange","selector","el","uid","cache","_this","COMMENT_NODE","TEXT_NODE","matchChanges","map","accum","getChildlistChange","recordOldPrevious","previous","pendingMoveDecision","isMoved","didMove","getPrevious","getOldPrevious","oldPreviousCache","previousCache","forEach","Summary","projection","query","all","elementFilter","attribute","attributeList","filter","attributeChanged","valueChanged","characterDataChanged","bind","validNameInitialChar","validNameNonInitialChar","escapeQuotes","replace","Qualifier","matches","attrValue","contains","tokens","split","toString","Selector","nextUid","qualifiers","Object","defineProperty","tagName","toUpperCase","enumerable","configurable","join","isMatching","matchesSelector","selectorString","wasMatching","caseInsensitiveTagName","anyChanged","qualifier","parseSelectors","input","currentSelector","currentQualifier","newSelector","newQualifier","WHITESPACE","valueQuoteChar","SYNTAX_ERROR","SELECTOR","TAG_NAME","QUALIFIER","QUALIFIER_NAME_FIRST_CHAR","QUALIFIER_NAME","ATTR_NAME_FIRST_CHAR","ATTR_NAME","EQUIV_OR_ATTR_QUAL_END","EQUAL","ATTR_QUAL_END","VALUE_FIRST_CHAR","VALUE","QUOTED_VALUE","SELECTOR_SEPARATOR","state","c","match","document","createElement","attributeFilterPattern","validateAttribute","trim","validateElementAttributes","attribs","lowerAttributes","nameLower","elementFilterAttributes","MutationSummary","opts","connected","options","validateOptions","observerOptions","createObserverOptions","queries","root","callback","Array","concat","apply","some","queryValidators","createQueryValidator","observer","observerCallback","reconnect","subtree","observeAttributes","attributeOldValue","prop","optionKeys","observeOwnChanges","oldPreviousSibling","request","requestOptionCount","elementAttributes","createSummaries","summaries","checkpointQueryValidators","validator","recordPreviousState","runQueryValidators","index","validate","changesToReport","summaryProps","attrNames","attrsChanged","disconnect","observe","takeSummaries","takeRecords","parseElementFilter","module","exports"],"mappings":"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","sourcesContent":["// Copyright 2011 Google Inc.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar __extends = this.__extends || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    __.prototype = b.prototype;\n    d.prototype = new __();\n};\nvar MutationObserverCtor;\nif (typeof WebKitMutationObserver !== 'undefined')\n    MutationObserverCtor = WebKitMutationObserver;\nelse\n    MutationObserverCtor = MutationObserver;\nif (MutationObserverCtor === undefined) {\n    console.error('DOM Mutation Observers are required.');\n    console.error('https://developer.mozilla.org/en-US/docs/DOM/MutationObserver');\n    throw Error('DOM Mutation Observers are required');\n}\nvar NodeMap = (function () {\n    function NodeMap() {\n        this.nodes = [];\n        this.values = [];\n    }\n    NodeMap.prototype.isIndex = function (s) {\n        return +s === s >>> 0;\n    };\n    NodeMap.prototype.nodeId = function (node) {\n        var id = node[NodeMap.ID_PROP];\n        if (!id)\n            id = node[NodeMap.ID_PROP] = NodeMap.nextId_++;\n        return id;\n    };\n    NodeMap.prototype.set = function (node, value) {\n        var id = this.nodeId(node);\n        this.nodes[id] = node;\n        this.values[id] = value;\n    };\n    NodeMap.prototype.get = function (node) {\n        var id = this.nodeId(node);\n        return this.values[id];\n    };\n    NodeMap.prototype.has = function (node) {\n        return this.nodeId(node) in this.nodes;\n    };\n    NodeMap.prototype.delete = function (node) {\n        var id = this.nodeId(node);\n        delete this.nodes[id];\n        this.values[id] = undefined;\n    };\n    NodeMap.prototype.keys = function () {\n        var nodes = [];\n        for (var id in this.nodes) {\n            if (!this.isIndex(id))\n                continue;\n            nodes.push(this.nodes[id]);\n        }\n        return nodes;\n    };\n    NodeMap.ID_PROP = '__mutation_summary_node_map_id__';\n    NodeMap.nextId_ = 1;\n    return NodeMap;\n})();\n/**\n *  var reachableMatchableProduct = [\n *  //  STAYED_OUT,  ENTERED,     STAYED_IN,   EXITED\n *    [ STAYED_OUT,  STAYED_OUT,  STAYED_OUT,  STAYED_OUT ], // STAYED_OUT\n *    [ STAYED_OUT,  ENTERED,     ENTERED,     STAYED_OUT ], // ENTERED\n *    [ STAYED_OUT,  ENTERED,     STAYED_IN,   EXITED     ], // STAYED_IN\n *    [ STAYED_OUT,  STAYED_OUT,  EXITED,      EXITED     ]  // EXITED\n *  ];\n */\nvar Movement;\n(function (Movement) {\n    Movement[Movement[\"STAYED_OUT\"] = 0] = \"STAYED_OUT\";\n    Movement[Movement[\"ENTERED\"] = 1] = \"ENTERED\";\n    Movement[Movement[\"STAYED_IN\"] = 2] = \"STAYED_IN\";\n    Movement[Movement[\"REPARENTED\"] = 3] = \"REPARENTED\";\n    Movement[Movement[\"REORDERED\"] = 4] = \"REORDERED\";\n    Movement[Movement[\"EXITED\"] = 5] = \"EXITED\";\n})(Movement || (Movement = {}));\nfunction enteredOrExited(changeType) {\n    return changeType === Movement.ENTERED || changeType === Movement.EXITED;\n}\nvar NodeChange = (function () {\n    function NodeChange(node, childList, attributes, characterData, oldParentNode, added, attributeOldValues, characterDataOldValue) {\n        if (childList === void 0) { childList = false; }\n        if (attributes === void 0) { attributes = false; }\n        if (characterData === void 0) { characterData = false; }\n        if (oldParentNode === void 0) { oldParentNode = null; }\n        if (added === void 0) { added = false; }\n        if (attributeOldValues === void 0) { attributeOldValues = null; }\n        if (characterDataOldValue === void 0) { characterDataOldValue = null; }\n        this.node = node;\n        this.childList = childList;\n        this.attributes = attributes;\n        this.characterData = characterData;\n        this.oldParentNode = oldParentNode;\n        this.added = added;\n        this.attributeOldValues = attributeOldValues;\n        this.characterDataOldValue = characterDataOldValue;\n        this.isCaseInsensitive =\n            this.node.nodeType === Node.ELEMENT_NODE &&\n                this.node instanceof HTMLElement &&\n                this.node.ownerDocument instanceof HTMLDocument;\n    }\n    NodeChange.prototype.getAttributeOldValue = function (name) {\n        if (!this.attributeOldValues)\n            return undefined;\n        if (this.isCaseInsensitive)\n            name = name.toLowerCase();\n        return this.attributeOldValues[name];\n    };\n    NodeChange.prototype.getAttributeNamesMutated = function () {\n        var names = [];\n        if (!this.attributeOldValues)\n            return names;\n        for (var name in this.attributeOldValues) {\n            names.push(name);\n        }\n        return names;\n    };\n    NodeChange.prototype.attributeMutated = function (name, oldValue) {\n        this.attributes = true;\n        this.attributeOldValues = this.attributeOldValues || {};\n        if (name in this.attributeOldValues)\n            return;\n        this.attributeOldValues[name] = oldValue;\n    };\n    NodeChange.prototype.characterDataMutated = function (oldValue) {\n        if (this.characterData)\n            return;\n        this.characterData = true;\n        this.characterDataOldValue = oldValue;\n    };\n    // Note: is it possible to receive a removal followed by a removal. This\n    // can occur if the removed node is added to an non-observed node, that\n    // node is added to the observed area, and then the node removed from\n    // it.\n    NodeChange.prototype.removedFromParent = function (parent) {\n        this.childList = true;\n        if (this.added || this.oldParentNode)\n            this.added = false;\n        else\n            this.oldParentNode = parent;\n    };\n    NodeChange.prototype.insertedIntoParent = function () {\n        this.childList = true;\n        this.added = true;\n    };\n    // An node's oldParent is\n    //   -its present parent, if its parentNode was not changed.\n    //   -null if the first thing that happened to it was an add.\n    //   -the node it was removed from if the first thing that happened to it\n    //      was a remove.\n    NodeChange.prototype.getOldParent = function () {\n        if (this.childList) {\n            if (this.oldParentNode)\n                return this.oldParentNode;\n            if (this.added)\n                return null;\n        }\n        return this.node.parentNode;\n    };\n    return NodeChange;\n})();\nvar ChildListChange = (function () {\n    function ChildListChange() {\n        this.added = new NodeMap();\n        this.removed = new NodeMap();\n        this.maybeMoved = new NodeMap();\n        this.oldPrevious = new NodeMap();\n        this.moved = undefined;\n    }\n    return ChildListChange;\n})();\nvar TreeChanges = (function (_super) {\n    __extends(TreeChanges, _super);\n    function TreeChanges(rootNode, mutations) {\n        _super.call(this);\n        this.rootNode = rootNode;\n        this.reachableCache = undefined;\n        this.wasReachableCache = undefined;\n        this.anyParentsChanged = false;\n        this.anyAttributesChanged = false;\n        this.anyCharacterDataChanged = false;\n        for (var m = 0; m < mutations.length; m++) {\n            var mutation = mutations[m];\n            switch (mutation.type) {\n                case 'childList':\n                    this.anyParentsChanged = true;\n                    for (var i = 0; i < mutation.removedNodes.length; i++) {\n                        var node = mutation.removedNodes[i];\n                        this.getChange(node).removedFromParent(mutation.target);\n                    }\n                    for (var i = 0; i < mutation.addedNodes.length; i++) {\n                        var node = mutation.addedNodes[i];\n                        this.getChange(node).insertedIntoParent();\n                    }\n                    break;\n                case 'attributes':\n                    this.anyAttributesChanged = true;\n                    var change = this.getChange(mutation.target);\n                    change.attributeMutated(mutation.attributeName, mutation.oldValue);\n                    break;\n                case 'characterData':\n                    this.anyCharacterDataChanged = true;\n                    var change = this.getChange(mutation.target);\n                    change.characterDataMutated(mutation.oldValue);\n                    break;\n            }\n        }\n    }\n    TreeChanges.prototype.getChange = function (node) {\n        var change = this.get(node);\n        if (!change) {\n            change = new NodeChange(node);\n            this.set(node, change);\n        }\n        return change;\n    };\n    TreeChanges.prototype.getOldParent = function (node) {\n        var change = this.get(node);\n        return change ? change.getOldParent() : node.parentNode;\n    };\n    TreeChanges.prototype.getIsReachable = function (node) {\n        if (node === this.rootNode)\n            return true;\n        if (!node)\n            return false;\n        this.reachableCache = this.reachableCache || new NodeMap();\n        var isReachable = this.reachableCache.get(node);\n        if (isReachable === undefined) {\n            isReachable = this.getIsReachable(node.parentNode);\n            this.reachableCache.set(node, isReachable);\n        }\n        return isReachable;\n    };\n    // A node wasReachable if its oldParent wasReachable.\n    TreeChanges.prototype.getWasReachable = function (node) {\n        if (node === this.rootNode)\n            return true;\n        if (!node)\n            return false;\n        this.wasReachableCache = this.wasReachableCache || new NodeMap();\n        var wasReachable = this.wasReachableCache.get(node);\n        if (wasReachable === undefined) {\n            wasReachable = this.getWasReachable(this.getOldParent(node));\n            this.wasReachableCache.set(node, wasReachable);\n        }\n        return wasReachable;\n    };\n    TreeChanges.prototype.reachabilityChange = function (node) {\n        if (this.getIsReachable(node)) {\n            return this.getWasReachable(node) ?\n                Movement.STAYED_IN : Movement.ENTERED;\n        }\n        return this.getWasReachable(node) ?\n            Movement.EXITED : Movement.STAYED_OUT;\n    };\n    return TreeChanges;\n})(NodeMap);\nvar MutationProjection = (function () {\n    // TOOD(any)\n    function MutationProjection(rootNode, mutations, selectors, calcReordered, calcOldPreviousSibling) {\n        this.rootNode = rootNode;\n        this.mutations = mutations;\n        this.selectors = selectors;\n        this.calcReordered = calcReordered;\n        this.calcOldPreviousSibling = calcOldPreviousSibling;\n        this.treeChanges = new TreeChanges(rootNode, mutations);\n        this.entered = [];\n        this.exited = [];\n        this.stayedIn = new NodeMap();\n        this.visited = new NodeMap();\n        this.childListChangeMap = undefined;\n        this.characterDataOnly = undefined;\n        this.matchCache = undefined;\n        this.processMutations();\n    }\n    MutationProjection.prototype.processMutations = function () {\n        if (!this.treeChanges.anyParentsChanged &&\n            !this.treeChanges.anyAttributesChanged)\n            return;\n        var changedNodes = this.treeChanges.keys();\n        for (var i = 0; i < changedNodes.length; i++) {\n            this.visitNode(changedNodes[i], undefined);\n        }\n    };\n    MutationProjection.prototype.visitNode = function (node, parentReachable) {\n        if (this.visited.has(node))\n            return;\n        this.visited.set(node, true);\n        var change = this.treeChanges.get(node);\n        var reachable = parentReachable;\n        // node inherits its parent's reachability change unless\n        // its parentNode was mutated.\n        if ((change && change.childList) || reachable == undefined)\n            reachable = this.treeChanges.reachabilityChange(node);\n        if (reachable === Movement.STAYED_OUT)\n            return;\n        // Cache match results for sub-patterns.\n        this.matchabilityChange(node);\n        if (reachable === Movement.ENTERED) {\n            this.entered.push(node);\n        }\n        else if (reachable === Movement.EXITED) {\n            this.exited.push(node);\n            this.ensureHasOldPreviousSiblingIfNeeded(node);\n        }\n        else if (reachable === Movement.STAYED_IN) {\n            var movement = Movement.STAYED_IN;\n            if (change && change.childList) {\n                if (change.oldParentNode !== node.parentNode) {\n                    movement = Movement.REPARENTED;\n                    this.ensureHasOldPreviousSiblingIfNeeded(node);\n                }\n                else if (this.calcReordered && this.wasReordered(node)) {\n                    movement = Movement.REORDERED;\n                }\n            }\n            this.stayedIn.set(node, movement);\n        }\n        if (reachable === Movement.STAYED_IN)\n            return;\n        // reachable === ENTERED || reachable === EXITED.\n        for (var child = node.firstChild; child; child = child.nextSibling) {\n            this.visitNode(child, reachable);\n        }\n    };\n    MutationProjection.prototype.ensureHasOldPreviousSiblingIfNeeded = function (node) {\n        if (!this.calcOldPreviousSibling)\n            return;\n        this.processChildlistChanges();\n        var parentNode = node.parentNode;\n        var nodeChange = this.treeChanges.get(node);\n        if (nodeChange && nodeChange.oldParentNode)\n            parentNode = nodeChange.oldParentNode;\n        var change = this.childListChangeMap.get(parentNode);\n        if (!change) {\n            change = new ChildListChange();\n            this.childListChangeMap.set(parentNode, change);\n        }\n        if (!change.oldPrevious.has(node)) {\n            change.oldPrevious.set(node, node.previousSibling);\n        }\n    };\n    MutationProjection.prototype.getChanged = function (summary, selectors, characterDataOnly) {\n        this.selectors = selectors;\n        this.characterDataOnly = characterDataOnly;\n        for (var i = 0; i < this.entered.length; i++) {\n            var node = this.entered[i];\n            var matchable = this.matchabilityChange(node);\n            if (matchable === Movement.ENTERED || matchable === Movement.STAYED_IN)\n                summary.added.push(node);\n        }\n        var stayedInNodes = this.stayedIn.keys();\n        for (var i = 0; i < stayedInNodes.length; i++) {\n            var node = stayedInNodes[i];\n            var matchable = this.matchabilityChange(node);\n            if (matchable === Movement.ENTERED) {\n                summary.added.push(node);\n            }\n            else if (matchable === Movement.EXITED) {\n                summary.removed.push(node);\n            }\n            else if (matchable === Movement.STAYED_IN && (summary.reparented || summary.reordered)) {\n                var movement = this.stayedIn.get(node);\n                if (summary.reparented && movement === Movement.REPARENTED)\n                    summary.reparented.push(node);\n                else if (summary.reordered && movement === Movement.REORDERED)\n                    summary.reordered.push(node);\n            }\n        }\n        for (var i = 0; i < this.exited.length; i++) {\n            var node = this.exited[i];\n            var matchable = this.matchabilityChange(node);\n            if (matchable === Movement.EXITED || matchable === Movement.STAYED_IN)\n                summary.removed.push(node);\n        }\n    };\n    MutationProjection.prototype.getOldParentNode = function (node) {\n        var change = this.treeChanges.get(node);\n        if (change && change.childList)\n            return change.oldParentNode ? change.oldParentNode : null;\n        var reachabilityChange = this.treeChanges.reachabilityChange(node);\n        if (reachabilityChange === Movement.STAYED_OUT || reachabilityChange === Movement.ENTERED)\n            throw Error('getOldParentNode requested on invalid node.');\n        return node.parentNode;\n    };\n    MutationProjection.prototype.getOldPreviousSibling = function (node) {\n        var parentNode = node.parentNode;\n        var nodeChange = this.treeChanges.get(node);\n        if (nodeChange && nodeChange.oldParentNode)\n            parentNode = nodeChange.oldParentNode;\n        var change = this.childListChangeMap.get(parentNode);\n        if (!change)\n            throw Error('getOldPreviousSibling requested on invalid node.');\n        return change.oldPrevious.get(node);\n    };\n    MutationProjection.prototype.getOldAttribute = function (element, attrName) {\n        var change = this.treeChanges.get(element);\n        if (!change || !change.attributes)\n            throw Error('getOldAttribute requested on invalid node.');\n        var value = change.getAttributeOldValue(attrName);\n        if (value === undefined)\n            throw Error('getOldAttribute requested for unchanged attribute name.');\n        return value;\n    };\n    MutationProjection.prototype.attributeChangedNodes = function (includeAttributes) {\n        if (!this.treeChanges.anyAttributesChanged)\n            return {}; // No attributes mutations occurred.\n        var attributeFilter;\n        var caseInsensitiveFilter;\n        if (includeAttributes) {\n            attributeFilter = {};\n            caseInsensitiveFilter = {};\n            for (var i = 0; i < includeAttributes.length; i++) {\n                var attrName = includeAttributes[i];\n                attributeFilter[attrName] = true;\n                caseInsensitiveFilter[attrName.toLowerCase()] = attrName;\n            }\n        }\n        var result = {};\n        var nodes = this.treeChanges.keys();\n        for (var i = 0; i < nodes.length; i++) {\n            var node = nodes[i];\n            var change = this.treeChanges.get(node);\n            if (!change.attributes)\n                continue;\n            if (Movement.STAYED_IN !== this.treeChanges.reachabilityChange(node) ||\n                Movement.STAYED_IN !== this.matchabilityChange(node)) {\n                continue;\n            }\n            var element = node;\n            var changedAttrNames = change.getAttributeNamesMutated();\n            for (var j = 0; j < changedAttrNames.length; j++) {\n                var attrName = changedAttrNames[j];\n                if (attributeFilter &&\n                    !attributeFilter[attrName] &&\n                    !(change.isCaseInsensitive && caseInsensitiveFilter[attrName])) {\n                    continue;\n                }\n                var oldValue = change.getAttributeOldValue(attrName);\n                if (oldValue === element.getAttribute(attrName))\n                    continue;\n                if (caseInsensitiveFilter && change.isCaseInsensitive)\n                    attrName = caseInsensitiveFilter[attrName];\n                result[attrName] = result[attrName] || [];\n                result[attrName].push(element);\n            }\n        }\n        return result;\n    };\n    MutationProjection.prototype.getOldCharacterData = function (node) {\n        var change = this.treeChanges.get(node);\n        if (!change || !change.characterData)\n            throw Error('getOldCharacterData requested on invalid node.');\n        return change.characterDataOldValue;\n    };\n    MutationProjection.prototype.getCharacterDataChanged = function () {\n        if (!this.treeChanges.anyCharacterDataChanged)\n            return []; // No characterData mutations occurred.\n        var nodes = this.treeChanges.keys();\n        var result = [];\n        for (var i = 0; i < nodes.length; i++) {\n            var target = nodes[i];\n            if (Movement.STAYED_IN !== this.treeChanges.reachabilityChange(target))\n                continue;\n            var change = this.treeChanges.get(target);\n            if (!change.characterData ||\n                target.textContent == change.characterDataOldValue)\n                continue;\n            result.push(target);\n        }\n        return result;\n    };\n    MutationProjection.prototype.computeMatchabilityChange = function (selector, el) {\n        if (!this.matchCache)\n            this.matchCache = [];\n        if (!this.matchCache[selector.uid])\n            this.matchCache[selector.uid] = new NodeMap();\n        var cache = this.matchCache[selector.uid];\n        var result = cache.get(el);\n        if (result === undefined) {\n            result = selector.matchabilityChange(el, this.treeChanges.get(el));\n            cache.set(el, result);\n        }\n        return result;\n    };\n    MutationProjection.prototype.matchabilityChange = function (node) {\n        var _this = this;\n        // TODO(rafaelw): Include PI, CDATA?\n        // Only include text nodes.\n        if (this.characterDataOnly) {\n            switch (node.nodeType) {\n                case Node.COMMENT_NODE:\n                case Node.TEXT_NODE:\n                    return Movement.STAYED_IN;\n                default:\n                    return Movement.STAYED_OUT;\n            }\n        }\n        // No element filter. Include all nodes.\n        if (!this.selectors)\n            return Movement.STAYED_IN;\n        // Element filter. Exclude non-elements.\n        if (node.nodeType !== Node.ELEMENT_NODE)\n            return Movement.STAYED_OUT;\n        var el = node;\n        var matchChanges = this.selectors.map(function (selector) {\n            return _this.computeMatchabilityChange(selector, el);\n        });\n        var accum = Movement.STAYED_OUT;\n        var i = 0;\n        while (accum !== Movement.STAYED_IN && i < matchChanges.length) {\n            switch (matchChanges[i]) {\n                case Movement.STAYED_IN:\n                    accum = Movement.STAYED_IN;\n                    break;\n                case Movement.ENTERED:\n                    if (accum === Movement.EXITED)\n                        accum = Movement.STAYED_IN;\n                    else\n                        accum = Movement.ENTERED;\n                    break;\n                case Movement.EXITED:\n                    if (accum === Movement.ENTERED)\n                        accum = Movement.STAYED_IN;\n                    else\n                        accum = Movement.EXITED;\n                    break;\n            }\n            i++;\n        }\n        return accum;\n    };\n    MutationProjection.prototype.getChildlistChange = function (el) {\n        var change = this.childListChangeMap.get(el);\n        if (!change) {\n            change = new ChildListChange();\n            this.childListChangeMap.set(el, change);\n        }\n        return change;\n    };\n    MutationProjection.prototype.processChildlistChanges = function () {\n        if (this.childListChangeMap)\n            return;\n        this.childListChangeMap = new NodeMap();\n        for (var i = 0; i < this.mutations.length; i++) {\n            var mutation = this.mutations[i];\n            if (mutation.type != 'childList')\n                continue;\n            if (this.treeChanges.reachabilityChange(mutation.target) !== Movement.STAYED_IN &&\n                !this.calcOldPreviousSibling)\n                continue;\n            var change = this.getChildlistChange(mutation.target);\n            var oldPrevious = mutation.previousSibling;\n            function recordOldPrevious(node, previous) {\n                if (!node ||\n                    change.oldPrevious.has(node) ||\n                    change.added.has(node) ||\n                    change.maybeMoved.has(node))\n                    return;\n                if (previous &&\n                    (change.added.has(previous) ||\n                        change.maybeMoved.has(previous)))\n                    return;\n                change.oldPrevious.set(node, previous);\n            }\n            for (var j = 0; j < mutation.removedNodes.length; j++) {\n                var node = mutation.removedNodes[j];\n                recordOldPrevious(node, oldPrevious);\n                if (change.added.has(node)) {\n                    change.added.delete(node);\n                }\n                else {\n                    change.removed.set(node, true);\n                    change.maybeMoved.delete(node);\n                }\n                oldPrevious = node;\n            }\n            recordOldPrevious(mutation.nextSibling, oldPrevious);\n            for (var j = 0; j < mutation.addedNodes.length; j++) {\n                var node = mutation.addedNodes[j];\n                if (change.removed.has(node)) {\n                    change.removed.delete(node);\n                    change.maybeMoved.set(node, true);\n                }\n                else {\n                    change.added.set(node, true);\n                }\n            }\n        }\n    };\n    MutationProjection.prototype.wasReordered = function (node) {\n        if (!this.treeChanges.anyParentsChanged)\n            return false;\n        this.processChildlistChanges();\n        var parentNode = node.parentNode;\n        var nodeChange = this.treeChanges.get(node);\n        if (nodeChange && nodeChange.oldParentNode)\n            parentNode = nodeChange.oldParentNode;\n        var change = this.childListChangeMap.get(parentNode);\n        if (!change)\n            return false;\n        if (change.moved)\n            return change.moved.get(node);\n        change.moved = new NodeMap();\n        var pendingMoveDecision = new NodeMap();\n        function isMoved(node) {\n            if (!node)\n                return false;\n            if (!change.maybeMoved.has(node))\n                return false;\n            var didMove = change.moved.get(node);\n            if (didMove !== undefined)\n                return didMove;\n            if (pendingMoveDecision.has(node)) {\n                didMove = true;\n            }\n            else {\n                pendingMoveDecision.set(node, true);\n                didMove = getPrevious(node) !== getOldPrevious(node);\n            }\n            if (pendingMoveDecision.has(node)) {\n                pendingMoveDecision.delete(node);\n                change.moved.set(node, didMove);\n            }\n            else {\n                didMove = change.moved.get(node);\n            }\n            return didMove;\n        }\n        var oldPreviousCache = new NodeMap();\n        function getOldPrevious(node) {\n            var oldPrevious = oldPreviousCache.get(node);\n            if (oldPrevious !== undefined)\n                return oldPrevious;\n            oldPrevious = change.oldPrevious.get(node);\n            while (oldPrevious &&\n                (change.removed.has(oldPrevious) || isMoved(oldPrevious))) {\n                oldPrevious = getOldPrevious(oldPrevious);\n            }\n            if (oldPrevious === undefined)\n                oldPrevious = node.previousSibling;\n            oldPreviousCache.set(node, oldPrevious);\n            return oldPrevious;\n        }\n        var previousCache = new NodeMap();\n        function getPrevious(node) {\n            if (previousCache.has(node))\n                return previousCache.get(node);\n            var previous = node.previousSibling;\n            while (previous && (change.added.has(previous) || isMoved(previous)))\n                previous = previous.previousSibling;\n            previousCache.set(node, previous);\n            return previous;\n        }\n        change.maybeMoved.keys().forEach(isMoved);\n        return change.moved.get(node);\n    };\n    return MutationProjection;\n})();\nvar Summary = (function () {\n    function Summary(projection, query) {\n        var _this = this;\n        this.projection = projection;\n        this.added = [];\n        this.removed = [];\n        this.reparented = query.all || query.element || query.characterData ? [] : undefined;\n        this.reordered = query.all ? [] : undefined;\n        projection.getChanged(this, query.elementFilter, query.characterData);\n        if (query.all || query.attribute || query.attributeList) {\n            var filter = query.attribute ? [query.attribute] : query.attributeList;\n            var attributeChanged = projection.attributeChangedNodes(filter);\n            if (query.attribute) {\n                this.valueChanged = attributeChanged[query.attribute] || [];\n            }\n            else {\n                this.attributeChanged = attributeChanged;\n                if (query.attributeList) {\n                    query.attributeList.forEach(function (attrName) {\n                        if (!_this.attributeChanged.hasOwnProperty(attrName))\n                            _this.attributeChanged[attrName] = [];\n                    });\n                }\n            }\n        }\n        if (query.all || query.characterData) {\n            var characterDataChanged = projection.getCharacterDataChanged();\n            if (query.characterData)\n                this.valueChanged = characterDataChanged;\n            else\n                this.characterDataChanged = characterDataChanged;\n        }\n        if (this.reordered)\n            this.getOldPreviousSibling = projection.getOldPreviousSibling.bind(projection);\n    }\n    Summary.prototype.getOldParentNode = function (node) {\n        return this.projection.getOldParentNode(node);\n    };\n    Summary.prototype.getOldAttribute = function (node, name) {\n        return this.projection.getOldAttribute(node, name);\n    };\n    Summary.prototype.getOldCharacterData = function (node) {\n        return this.projection.getOldCharacterData(node);\n    };\n    Summary.prototype.getOldPreviousSibling = function (node) {\n        return this.projection.getOldPreviousSibling(node);\n    };\n    return Summary;\n})();\n// TODO(rafaelw): Allow ':' and '.' as valid name characters.\nvar validNameInitialChar = /[a-zA-Z_]+/;\nvar validNameNonInitialChar = /[a-zA-Z0-9_\\-]+/;\n// TODO(rafaelw): Consider allowing backslash in the attrValue.\n// TODO(rafaelw): There's got a to be way to represent this state machine\n// more compactly???\nfunction escapeQuotes(value) {\n    return '\"' + value.replace(/\"/, '\\\\\\\"') + '\"';\n}\nvar Qualifier = (function () {\n    function Qualifier() {\n    }\n    Qualifier.prototype.matches = function (oldValue) {\n        if (oldValue === null)\n            return false;\n        if (this.attrValue === undefined)\n            return true;\n        if (!this.contains)\n            return this.attrValue == oldValue;\n        var tokens = oldValue.split(' ');\n        for (var i = 0; i < tokens.length; i++) {\n            if (this.attrValue === tokens[i])\n                return true;\n        }\n        return false;\n    };\n    Qualifier.prototype.toString = function () {\n        if (this.attrName === 'class' && this.contains)\n            return '.' + this.attrValue;\n        if (this.attrName === 'id' && !this.contains)\n            return '#' + this.attrValue;\n        if (this.contains)\n            return '[' + this.attrName + '~=' + escapeQuotes(this.attrValue) + ']';\n        if ('attrValue' in this)\n            return '[' + this.attrName + '=' + escapeQuotes(this.attrValue) + ']';\n        return '[' + this.attrName + ']';\n    };\n    return Qualifier;\n})();\nvar Selector = (function () {\n    function Selector() {\n        this.uid = Selector.nextUid++;\n        this.qualifiers = [];\n    }\n    Object.defineProperty(Selector.prototype, \"caseInsensitiveTagName\", {\n        get: function () {\n            return this.tagName.toUpperCase();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Selector.prototype, \"selectorString\", {\n        get: function () {\n            return this.tagName + this.qualifiers.join('');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Selector.prototype.isMatching = function (el) {\n        return el[Selector.matchesSelector](this.selectorString);\n    };\n    Selector.prototype.wasMatching = function (el, change, isMatching) {\n        if (!change || !change.attributes)\n            return isMatching;\n        var tagName = change.isCaseInsensitive ? this.caseInsensitiveTagName : this.tagName;\n        if (tagName !== '*' && tagName !== el.tagName)\n            return false;\n        var attributeOldValues = [];\n        var anyChanged = false;\n        for (var i = 0; i < this.qualifiers.length; i++) {\n            var qualifier = this.qualifiers[i];\n            var oldValue = change.getAttributeOldValue(qualifier.attrName);\n            attributeOldValues.push(oldValue);\n            anyChanged = anyChanged || (oldValue !== undefined);\n        }\n        if (!anyChanged)\n            return isMatching;\n        for (var i = 0; i < this.qualifiers.length; i++) {\n            var qualifier = this.qualifiers[i];\n            var oldValue = attributeOldValues[i];\n            if (oldValue === undefined)\n                oldValue = el.getAttribute(qualifier.attrName);\n            if (!qualifier.matches(oldValue))\n                return false;\n        }\n        return true;\n    };\n    Selector.prototype.matchabilityChange = function (el, change) {\n        var isMatching = this.isMatching(el);\n        if (isMatching)\n            return this.wasMatching(el, change, isMatching) ? Movement.STAYED_IN : Movement.ENTERED;\n        else\n            return this.wasMatching(el, change, isMatching) ? Movement.EXITED : Movement.STAYED_OUT;\n    };\n    Selector.parseSelectors = function (input) {\n        var selectors = [];\n        var currentSelector;\n        var currentQualifier;\n        function newSelector() {\n            if (currentSelector) {\n                if (currentQualifier) {\n                    currentSelector.qualifiers.push(currentQualifier);\n                    currentQualifier = undefined;\n                }\n                selectors.push(currentSelector);\n            }\n            currentSelector = new Selector();\n        }\n        function newQualifier() {\n            if (currentQualifier)\n                currentSelector.qualifiers.push(currentQualifier);\n            currentQualifier = new Qualifier();\n        }\n        var WHITESPACE = /\\s/;\n        var valueQuoteChar;\n        var SYNTAX_ERROR = 'Invalid or unsupported selector syntax.';\n        var SELECTOR = 1;\n        var TAG_NAME = 2;\n        var QUALIFIER = 3;\n        var QUALIFIER_NAME_FIRST_CHAR = 4;\n        var QUALIFIER_NAME = 5;\n        var ATTR_NAME_FIRST_CHAR = 6;\n        var ATTR_NAME = 7;\n        var EQUIV_OR_ATTR_QUAL_END = 8;\n        var EQUAL = 9;\n        var ATTR_QUAL_END = 10;\n        var VALUE_FIRST_CHAR = 11;\n        var VALUE = 12;\n        var QUOTED_VALUE = 13;\n        var SELECTOR_SEPARATOR = 14;\n        var state = SELECTOR;\n        var i = 0;\n        while (i < input.length) {\n            var c = input[i++];\n            switch (state) {\n                case SELECTOR:\n                    if (c.match(validNameInitialChar)) {\n                        newSelector();\n                        currentSelector.tagName = c;\n                        state = TAG_NAME;\n                        break;\n                    }\n                    if (c == '*') {\n                        newSelector();\n                        currentSelector.tagName = '*';\n                        state = QUALIFIER;\n                        break;\n                    }\n                    if (c == '.') {\n                        newSelector();\n                        newQualifier();\n                        currentSelector.tagName = '*';\n                        currentQualifier.attrName = 'class';\n                        currentQualifier.contains = true;\n                        state = QUALIFIER_NAME_FIRST_CHAR;\n                        break;\n                    }\n                    if (c == '#') {\n                        newSelector();\n                        newQualifier();\n                        currentSelector.tagName = '*';\n                        currentQualifier.attrName = 'id';\n                        state = QUALIFIER_NAME_FIRST_CHAR;\n                        break;\n                    }\n                    if (c == '[') {\n                        newSelector();\n                        newQualifier();\n                        currentSelector.tagName = '*';\n                        currentQualifier.attrName = '';\n                        state = ATTR_NAME_FIRST_CHAR;\n                        break;\n                    }\n                    if (c.match(WHITESPACE))\n                        break;\n                    throw Error(SYNTAX_ERROR);\n                case TAG_NAME:\n                    if (c.match(validNameNonInitialChar)) {\n                        currentSelector.tagName += c;\n                        break;\n                    }\n                    if (c == '.') {\n                        newQualifier();\n                        currentQualifier.attrName = 'class';\n                        currentQualifier.contains = true;\n                        state = QUALIFIER_NAME_FIRST_CHAR;\n                        break;\n                    }\n                    if (c == '#') {\n                        newQualifier();\n                        currentQualifier.attrName = 'id';\n                        state = QUALIFIER_NAME_FIRST_CHAR;\n                        break;\n                    }\n                    if (c == '[') {\n                        newQualifier();\n                        currentQualifier.attrName = '';\n                        state = ATTR_NAME_FIRST_CHAR;\n                        break;\n                    }\n                    if (c.match(WHITESPACE)) {\n                        state = SELECTOR_SEPARATOR;\n                        break;\n                    }\n                    if (c == ',') {\n                        state = SELECTOR;\n                        break;\n                    }\n                    throw Error(SYNTAX_ERROR);\n                case QUALIFIER:\n                    if (c == '.') {\n                        newQualifier();\n                        currentQualifier.attrName = 'class';\n                        currentQualifier.contains = true;\n                        state = QUALIFIER_NAME_FIRST_CHAR;\n                        break;\n                    }\n                    if (c == '#') {\n                        newQualifier();\n                        currentQualifier.attrName = 'id';\n                        state = QUALIFIER_NAME_FIRST_CHAR;\n                        break;\n                    }\n                    if (c == '[') {\n                        newQualifier();\n                        currentQualifier.attrName = '';\n                        state = ATTR_NAME_FIRST_CHAR;\n                        break;\n                    }\n                    if (c.match(WHITESPACE)) {\n                        state = SELECTOR_SEPARATOR;\n                        break;\n                    }\n                    if (c == ',') {\n                        state = SELECTOR;\n                        break;\n                    }\n                    throw Error(SYNTAX_ERROR);\n                case QUALIFIER_NAME_FIRST_CHAR:\n                    if (c.match(validNameInitialChar)) {\n                        currentQualifier.attrValue = c;\n                        state = QUALIFIER_NAME;\n                        break;\n                    }\n                    throw Error(SYNTAX_ERROR);\n                case QUALIFIER_NAME:\n                    if (c.match(validNameNonInitialChar)) {\n                        currentQualifier.attrValue += c;\n                        break;\n                    }\n                    if (c == '.') {\n                        newQualifier();\n                        currentQualifier.attrName = 'class';\n                        currentQualifier.contains = true;\n                        state = QUALIFIER_NAME_FIRST_CHAR;\n                        break;\n                    }\n                    if (c == '#') {\n                        newQualifier();\n                        currentQualifier.attrName = 'id';\n                        state = QUALIFIER_NAME_FIRST_CHAR;\n                        break;\n                    }\n                    if (c == '[') {\n                        newQualifier();\n                        state = ATTR_NAME_FIRST_CHAR;\n                        break;\n                    }\n                    if (c.match(WHITESPACE)) {\n                        state = SELECTOR_SEPARATOR;\n                        break;\n                    }\n                    if (c == ',') {\n                        state = SELECTOR;\n                        break;\n                    }\n                    throw Error(SYNTAX_ERROR);\n                case ATTR_NAME_FIRST_CHAR:\n                    if (c.match(validNameInitialChar)) {\n                        currentQualifier.attrName = c;\n                        state = ATTR_NAME;\n                        break;\n                    }\n                    if (c.match(WHITESPACE))\n                        break;\n                    throw Error(SYNTAX_ERROR);\n                case ATTR_NAME:\n                    if (c.match(validNameNonInitialChar)) {\n                        currentQualifier.attrName += c;\n                        break;\n                    }\n                    if (c.match(WHITESPACE)) {\n                        state = EQUIV_OR_ATTR_QUAL_END;\n                        break;\n                    }\n                    if (c == '~') {\n                        currentQualifier.contains = true;\n                        state = EQUAL;\n                        break;\n                    }\n                    if (c == '=') {\n                        currentQualifier.attrValue = '';\n                        state = VALUE_FIRST_CHAR;\n                        break;\n                    }\n                    if (c == ']') {\n                        state = QUALIFIER;\n                        break;\n                    }\n                    throw Error(SYNTAX_ERROR);\n                case EQUIV_OR_ATTR_QUAL_END:\n                    if (c == '~') {\n                        currentQualifier.contains = true;\n                        state = EQUAL;\n                        break;\n                    }\n                    if (c == '=') {\n                        currentQualifier.attrValue = '';\n                        state = VALUE_FIRST_CHAR;\n                        break;\n                    }\n                    if (c == ']') {\n                        state = QUALIFIER;\n                        break;\n                    }\n                    if (c.match(WHITESPACE))\n                        break;\n                    throw Error(SYNTAX_ERROR);\n                case EQUAL:\n                    if (c == '=') {\n                        currentQualifier.attrValue = '';\n                        state = VALUE_FIRST_CHAR;\n                        break;\n                    }\n                    throw Error(SYNTAX_ERROR);\n                case ATTR_QUAL_END:\n                    if (c == ']') {\n                        state = QUALIFIER;\n                        break;\n                    }\n                    if (c.match(WHITESPACE))\n                        break;\n                    throw Error(SYNTAX_ERROR);\n                case VALUE_FIRST_CHAR:\n                    if (c.match(WHITESPACE))\n                        break;\n                    if (c == '\"' || c == \"'\") {\n                        valueQuoteChar = c;\n                        state = QUOTED_VALUE;\n                        break;\n                    }\n                    currentQualifier.attrValue += c;\n                    state = VALUE;\n                    break;\n                case VALUE:\n                    if (c.match(WHITESPACE)) {\n                        state = ATTR_QUAL_END;\n                        break;\n                    }\n                    if (c == ']') {\n                        state = QUALIFIER;\n                        break;\n                    }\n                    if (c == \"'\" || c == '\"')\n                        throw Error(SYNTAX_ERROR);\n                    currentQualifier.attrValue += c;\n                    break;\n                case QUOTED_VALUE:\n                    if (c == valueQuoteChar) {\n                        state = ATTR_QUAL_END;\n                        break;\n                    }\n                    currentQualifier.attrValue += c;\n                    break;\n                case SELECTOR_SEPARATOR:\n                    if (c.match(WHITESPACE))\n                        break;\n                    if (c == ',') {\n                        state = SELECTOR;\n                        break;\n                    }\n                    throw Error(SYNTAX_ERROR);\n            }\n        }\n        switch (state) {\n            case SELECTOR:\n            case TAG_NAME:\n            case QUALIFIER:\n            case QUALIFIER_NAME:\n            case SELECTOR_SEPARATOR:\n                // Valid end states.\n                newSelector();\n                break;\n            default:\n                throw Error(SYNTAX_ERROR);\n        }\n        if (!selectors.length)\n            throw Error(SYNTAX_ERROR);\n        return selectors;\n    };\n    Selector.nextUid = 1;\n    Selector.matchesSelector = (function () {\n        var element = document.createElement('div');\n        if (typeof element['webkitMatchesSelector'] === 'function')\n            return 'webkitMatchesSelector';\n        if (typeof element['mozMatchesSelector'] === 'function')\n            return 'mozMatchesSelector';\n        if (typeof element['msMatchesSelector'] === 'function')\n            return 'msMatchesSelector';\n        return 'matchesSelector';\n    })();\n    return Selector;\n})();\nvar attributeFilterPattern = /^([a-zA-Z:_]+[a-zA-Z0-9_\\-:\\.]*)$/;\nfunction validateAttribute(attribute) {\n    if (typeof attribute != 'string')\n        throw Error('Invalid request opion. attribute must be a non-zero length string.');\n    attribute = attribute.trim();\n    if (!attribute)\n        throw Error('Invalid request opion. attribute must be a non-zero length string.');\n    if (!attribute.match(attributeFilterPattern))\n        throw Error('Invalid request option. invalid attribute name: ' + attribute);\n    return attribute;\n}\nfunction validateElementAttributes(attribs) {\n    if (!attribs.trim().length)\n        throw Error('Invalid request option: elementAttributes must contain at least one attribute.');\n    var lowerAttributes = {};\n    var attributes = {};\n    var tokens = attribs.split(/\\s+/);\n    for (var i = 0; i < tokens.length; i++) {\n        var name = tokens[i];\n        if (!name)\n            continue;\n        var name = validateAttribute(name);\n        var nameLower = name.toLowerCase();\n        if (lowerAttributes[nameLower])\n            throw Error('Invalid request option: observing multiple case variations of the same attribute is not supported.');\n        attributes[name] = true;\n        lowerAttributes[nameLower] = true;\n    }\n    return Object.keys(attributes);\n}\nfunction elementFilterAttributes(selectors) {\n    var attributes = {};\n    selectors.forEach(function (selector) {\n        selector.qualifiers.forEach(function (qualifier) {\n            attributes[qualifier.attrName] = true;\n        });\n    });\n    return Object.keys(attributes);\n}\nvar MutationSummary = (function () {\n    function MutationSummary(opts) {\n        var _this = this;\n        this.connected = false;\n        this.options = MutationSummary.validateOptions(opts);\n        this.observerOptions = MutationSummary.createObserverOptions(this.options.queries);\n        this.root = this.options.rootNode;\n        this.callback = this.options.callback;\n        this.elementFilter = Array.prototype.concat.apply([], this.options.queries.map(function (query) {\n            return query.elementFilter ? query.elementFilter : [];\n        }));\n        if (!this.elementFilter.length)\n            this.elementFilter = undefined;\n        this.calcReordered = this.options.queries.some(function (query) {\n            return query.all;\n        });\n        this.queryValidators = []; // TODO(rafaelw): Shouldn't always define this.\n        if (MutationSummary.createQueryValidator) {\n            this.queryValidators = this.options.queries.map(function (query) {\n                return MutationSummary.createQueryValidator(_this.root, query);\n            });\n        }\n        this.observer = new MutationObserverCtor(function (mutations) {\n            _this.observerCallback(mutations);\n        });\n        this.reconnect();\n    }\n    MutationSummary.createObserverOptions = function (queries) {\n        var observerOptions = {\n            childList: true,\n            subtree: true\n        };\n        var attributeFilter;\n        function observeAttributes(attributes) {\n            if (observerOptions.attributes && !attributeFilter)\n                return; // already observing all.\n            observerOptions.attributes = true;\n            observerOptions.attributeOldValue = true;\n            if (!attributes) {\n                // observe all.\n                attributeFilter = undefined;\n                return;\n            }\n            // add to observed.\n            attributeFilter = attributeFilter || {};\n            attributes.forEach(function (attribute) {\n                attributeFilter[attribute] = true;\n                attributeFilter[attribute.toLowerCase()] = true;\n            });\n        }\n        queries.forEach(function (query) {\n            if (query.characterData) {\n                observerOptions.characterData = true;\n                observerOptions.characterDataOldValue = true;\n                return;\n            }\n            if (query.all) {\n                observeAttributes();\n                observerOptions.characterData = true;\n                observerOptions.characterDataOldValue = true;\n                return;\n            }\n            if (query.attribute) {\n                observeAttributes([query.attribute.trim()]);\n                return;\n            }\n            var attributes = elementFilterAttributes(query.elementFilter).concat(query.attributeList || []);\n            if (attributes.length)\n                observeAttributes(attributes);\n        });\n        if (attributeFilter)\n            observerOptions.attributeFilter = Object.keys(attributeFilter);\n        return observerOptions;\n    };\n    MutationSummary.validateOptions = function (options) {\n        for (var prop in options) {\n            if (!(prop in MutationSummary.optionKeys))\n                throw Error('Invalid option: ' + prop);\n        }\n        if (typeof options.callback !== 'function')\n            throw Error('Invalid options: callback is required and must be a function');\n        if (!options.queries || !options.queries.length)\n            throw Error('Invalid options: queries must contain at least one query request object.');\n        var opts = {\n            callback: options.callback,\n            rootNode: options.rootNode || document,\n            observeOwnChanges: !!options.observeOwnChanges,\n            oldPreviousSibling: !!options.oldPreviousSibling,\n            queries: []\n        };\n        for (var i = 0; i < options.queries.length; i++) {\n            var request = options.queries[i];\n            // all\n            if (request.all) {\n                if (Object.keys(request).length > 1)\n                    throw Error('Invalid request option. all has no options.');\n                opts.queries.push({ all: true });\n                continue;\n            }\n            // attribute\n            if ('attribute' in request) {\n                var query = {\n                    attribute: validateAttribute(request.attribute)\n                };\n                query.elementFilter = Selector.parseSelectors('*[' + query.attribute + ']');\n                if (Object.keys(request).length > 1)\n                    throw Error('Invalid request option. attribute has no options.');\n                opts.queries.push(query);\n                continue;\n            }\n            // element\n            if ('element' in request) {\n                var requestOptionCount = Object.keys(request).length;\n                var query = {\n                    element: request.element,\n                    elementFilter: Selector.parseSelectors(request.element)\n                };\n                if (request.hasOwnProperty('elementAttributes')) {\n                    query.attributeList = validateElementAttributes(request.elementAttributes);\n                    requestOptionCount--;\n                }\n                if (requestOptionCount > 1)\n                    throw Error('Invalid request option. element only allows elementAttributes option.');\n                opts.queries.push(query);\n                continue;\n            }\n            // characterData\n            if (request.characterData) {\n                if (Object.keys(request).length > 1)\n                    throw Error('Invalid request option. characterData has no options.');\n                opts.queries.push({ characterData: true });\n                continue;\n            }\n            throw Error('Invalid request option. Unknown query request.');\n        }\n        return opts;\n    };\n    MutationSummary.prototype.createSummaries = function (mutations) {\n        if (!mutations || !mutations.length)\n            return [];\n        var projection = new MutationProjection(this.root, mutations, this.elementFilter, this.calcReordered, this.options.oldPreviousSibling);\n        var summaries = [];\n        for (var i = 0; i < this.options.queries.length; i++) {\n            summaries.push(new Summary(projection, this.options.queries[i]));\n        }\n        return summaries;\n    };\n    MutationSummary.prototype.checkpointQueryValidators = function () {\n        this.queryValidators.forEach(function (validator) {\n            if (validator)\n                validator.recordPreviousState();\n        });\n    };\n    MutationSummary.prototype.runQueryValidators = function (summaries) {\n        this.queryValidators.forEach(function (validator, index) {\n            if (validator)\n                validator.validate(summaries[index]);\n        });\n    };\n    MutationSummary.prototype.changesToReport = function (summaries) {\n        return summaries.some(function (summary) {\n            var summaryProps = ['added', 'removed', 'reordered', 'reparented',\n                'valueChanged', 'characterDataChanged'];\n            if (summaryProps.some(function (prop) { return summary[prop] && summary[prop].length; }))\n                return true;\n            if (summary.attributeChanged) {\n                var attrNames = Object.keys(summary.attributeChanged);\n                var attrsChanged = attrNames.some(function (attrName) {\n                    return !!summary.attributeChanged[attrName].length;\n                });\n                if (attrsChanged)\n                    return true;\n            }\n            return false;\n        });\n    };\n    MutationSummary.prototype.observerCallback = function (mutations) {\n        if (!this.options.observeOwnChanges)\n            this.observer.disconnect();\n        var summaries = this.createSummaries(mutations);\n        this.runQueryValidators(summaries);\n        if (this.options.observeOwnChanges)\n            this.checkpointQueryValidators();\n        if (this.changesToReport(summaries))\n            this.callback(summaries);\n        // disconnect() may have been called during the callback.\n        if (!this.options.observeOwnChanges && this.connected) {\n            this.checkpointQueryValidators();\n            this.observer.observe(this.root, this.observerOptions);\n        }\n    };\n    MutationSummary.prototype.reconnect = function () {\n        if (this.connected)\n            throw Error('Already connected');\n        this.observer.observe(this.root, this.observerOptions);\n        this.connected = true;\n        this.checkpointQueryValidators();\n    };\n    MutationSummary.prototype.takeSummaries = function () {\n        if (!this.connected)\n            throw Error('Not connected');\n        var summaries = this.createSummaries(this.observer.takeRecords());\n        return this.changesToReport(summaries) ? summaries : undefined;\n    };\n    MutationSummary.prototype.disconnect = function () {\n        var summaries = this.takeSummaries();\n        this.observer.disconnect();\n        this.connected = false;\n        return summaries;\n    };\n    MutationSummary.NodeMap = NodeMap; // exposed for use in TreeMirror.\n    MutationSummary.parseElementFilter = Selector.parseSelectors; // exposed for testing.\n    MutationSummary.optionKeys = {\n        'callback': true,\n        'queries': true,\n        'rootNode': true,\n        'oldPreviousSibling': true,\n        'observeOwnChanges': true\n    };\n    return MutationSummary;\n})();\n\nmodule.exports = MutationSummary\n"]},"metadata":{},"sourceType":"script"}