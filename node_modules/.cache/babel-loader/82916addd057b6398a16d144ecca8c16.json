{"ast":null,"code":"var _jsxFileName = \"/home/revpro/Desktop/new/ToDoAppReact/ToDoApp/src/components/SearchBar.tsx\";\nimport React, { useRef } from \"react\";\n\nconst SearchBar = ({\n  state,\n  setFilteredTodos,\n  setSearchQuery\n}) => {\n  // const {state, setFilteredTodos, setSearchQuery} = props;\n  const searchInput = useRef(null);\n\n  let onSearchInputChanged = event => {\n    if (searchInput.current === null) return;\n    let text = searchInput.current.value;\n    text = text.trim().toLowerCase();\n    setSearchQuery(text);\n    let filteredTodos = [];\n    state.todos.forEach(ele => {\n      if (ele.text.toLowerCase().indexOf(text) !== -1) {\n        filteredTodos.push(ele);\n      }\n    });\n\n    if (text === \"\") {\n      filteredTodos = null;\n      setFilteredTodos(null);\n    } else {\n      setFilteredTodos([...filteredTodos]);\n    }\n  };\n\n  let resetSearch = event => {\n    if (searchInput.current === null) return;\n    searchInput.current.value = \"\";\n    setSearchQuery(\"\");\n    setFilteredTodos(null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"searchBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"searchInput\",\n    ref: searchInput,\n    onChange: onSearchInputChanged,\n    placeholder: \"Search for a To-Do\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-times\",\n    id: \"close\",\n    onClick: resetSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default SearchBar;","map":{"version":3,"sources":["/home/revpro/Desktop/new/ToDoAppReact/ToDoApp/src/components/SearchBar.tsx"],"names":["React","useRef","SearchBar","state","setFilteredTodos","setSearchQuery","searchInput","onSearchInputChanged","event","current","text","value","trim","toLowerCase","filteredTodos","todos","forEach","ele","indexOf","push","resetSearch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;;AASA,MAAMC,SAAyC,GAAG,CAAC;AACjDC,EAAAA,KADiD;AAEjDC,EAAAA,gBAFiD;AAGjDC,EAAAA;AAHiD,CAAD,KAI5C;AACJ;AACA,QAAMC,WAAW,GAAGL,MAAM,CAAmB,IAAnB,CAA1B;;AAEA,MAAIM,oBAAoB,GAAIC,KAAD,IAAgD;AACzE,QAAIF,WAAW,CAACG,OAAZ,KAAwB,IAA5B,EAAkC;AAClC,QAAIC,IAAI,GAAGJ,WAAW,CAACG,OAAZ,CAAoBE,KAA/B;AACAD,IAAAA,IAAI,GAAGA,IAAI,CAACE,IAAL,GAAYC,WAAZ,EAAP;AACAR,IAAAA,cAAc,CAACK,IAAD,CAAd;AACA,QAAII,aAAgC,GAAG,EAAvC;AACAX,IAAAA,KAAK,CAACY,KAAN,CAAYC,OAAZ,CAAqBC,GAAD,IAAS;AAC3B,UAAIA,GAAG,CAACP,IAAJ,CAASG,WAAT,GAAuBK,OAAvB,CAA+BR,IAA/B,MAAyC,CAAC,CAA9C,EAAiD;AAC/CI,QAAAA,aAAa,CAAEK,IAAf,CAAoBF,GAApB;AACD;AACF,KAJD;;AAKA,QAAIP,IAAI,KAAK,EAAb,EAAiB;AACfI,MAAAA,aAAa,GAAG,IAAhB;AACAV,MAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,KAHD,MAGO;AACLA,MAAAA,gBAAgB,CAAC,CAAC,GAAGU,aAAJ,CAAD,CAAhB;AACD;AACF,GAjBD;;AAmBA,MAAIM,WAAW,GAAIZ,KAAD,IAAsD;AACtE,QAAIF,WAAW,CAACG,OAAZ,KAAwB,IAA5B,EAAkC;AAClCH,IAAAA,WAAW,CAACG,OAAZ,CAAoBE,KAApB,GAA4B,EAA5B;AACAN,IAAAA,cAAc,CAAC,EAAD,CAAd;AACAD,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,aAFL;AAGE,IAAA,GAAG,EAAEE,WAHP;AAIE,IAAA,QAAQ,EAAEC,oBAJZ;AAKE,IAAA,WAAW,EAAC,oBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AAAG,IAAA,SAAS,EAAC,cAAb;AAA4B,IAAA,EAAE,EAAC,OAA/B;AAAuC,IAAA,OAAO,EAAEa,WAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD,CA9CD;;AAgDA,eAAelB,SAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport { State, TodoItem } from \"./TodoApp\";\n\ntype Props = {\n  state: State;\n  setFilteredTodos: React.Dispatch<React.SetStateAction<TodoItem[] | null>>;\n  setSearchQuery: React.Dispatch<React.SetStateAction<string>>;\n};\n\nconst SearchBar: React.FunctionComponent<Props> = ({\n  state,\n  setFilteredTodos,\n  setSearchQuery,\n}) => {\n  // const {state, setFilteredTodos, setSearchQuery} = props;\n  const searchInput = useRef<HTMLInputElement>(null);\n\n  let onSearchInputChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (searchInput.current === null) return;\n    let text = searchInput.current.value;\n    text = text.trim().toLowerCase();\n    setSearchQuery(text);\n    let filteredTodos: TodoItem[] | null = [];\n    state.todos.forEach((ele) => {\n      if (ele.text.toLowerCase().indexOf(text) !== -1) {\n        filteredTodos!.push(ele);\n      }\n    });\n    if (text === \"\") {\n      filteredTodos = null;\n      setFilteredTodos(null);\n    } else {\n      setFilteredTodos([...filteredTodos]);\n    }\n  };\n\n  let resetSearch = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (searchInput.current === null) return;\n    searchInput.current.value = \"\";\n    setSearchQuery(\"\");\n    setFilteredTodos(null);\n  };\n\n  return (\n    <div className=\"searchBar\">\n      <input\n        type=\"text\"\n        id=\"searchInput\"\n        ref={searchInput}\n        onChange={onSearchInputChanged}\n        placeholder=\"Search for a To-Do\"\n      />\n      <i className=\"fas fa-times\" id=\"close\" onClick={resetSearch}></i>\n    </div>\n  );\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}