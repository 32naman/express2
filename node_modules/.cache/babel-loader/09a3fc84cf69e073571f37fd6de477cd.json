{"ast":null,"code":"var _jsxFileName = \"/home/revpro/Desktop/new/ToDoAppReact/ToDoApp/src/components/ListSelector.tsx\";\nimport React, { useEffect, useRef } from \"react\";\nimport netCalls from \"../netCallsMod\";\nconst PORT = 8000;\nconst getURL = `http://localhost:${PORT}/getdata`;\n\nconst ListSelector = ({\n  state,\n  updateState,\n  setTodos\n}) => {\n  const lists = useRef(null);\n  useEffect(() => {\n    let todos = [];\n    netCalls.getJSON(getURL, state.listNum, (err, data) => {\n      if (err !== null) {\n        console.log(\"Empty\"); // updateState({todos: todos});\n\n        setTodos([...todos]);\n      } else {\n        console.log(\"Loaded\");\n        console.log(data);\n        todos = JSON.parse(data[\"json\"]); // updateState({todos: todos});\n\n        setTodos([...todos]);\n      }\n    }, state.id_token);\n    if (lists.current !== null) lists.current.selectedIndex = state.listNum - 1;\n  }, [state.listNum, state.id_token, setTodos]);\n\n  let getList = e => {\n    console.log(\"onChange\");\n    if (lists.current === null) return;\n    let listNum = Number(lists.current.selectedIndex + 1);\n    if (listNum === 0) return;\n    console.log(listNum);\n    updateState({\n      listNum: listNum\n    });\n  };\n\n  let addNewList = e => {\n    let totalLists = state.totalLists + 1;\n    updateState({\n      totalLists: totalLists\n    });\n    console.log(totalLists);\n    updateState({\n      listNum: totalLists\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ListSelectorUI, {\n    state: state,\n    getList: getList,\n    addNewList: addNewList,\n    lists: lists,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  });\n};\n\nconst ListSelectorUI = ({\n  state,\n  getList,\n  addNewList,\n  lists\n}) => {\n  //   const { state, getList, addNewList, lists } = props;\n  let optionsList = [];\n\n  for (let i = 1; i <= state.totalLists; i++) {\n    optionsList.push( /*#__PURE__*/React.createElement(\"option\", {\n      value: i.toString(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, \"List\" + i.toString()));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"multipleLists\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    id: \"lists\",\n    ref: lists,\n    onChange: getList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, optionsList), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fas fa-list\",\n    id: \"addList\",\n    onClick: addNewList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ListSelector;","map":{"version":3,"sources":["/home/revpro/Desktop/new/ToDoAppReact/ToDoApp/src/components/ListSelector.tsx"],"names":["React","useEffect","useRef","netCalls","PORT","getURL","ListSelector","state","updateState","setTodos","lists","todos","getJSON","listNum","err","data","console","log","JSON","parse","id_token","current","selectedIndex","getList","e","Number","addNewList","totalLists","ListSelectorUI","optionsList","i","push","toString"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport netCalls from \"../netCallsMod\";\nimport { State, TodoItem } from \"./TodoApp\";\n\nconst PORT = 8000;\nconst getURL = `http://localhost:${PORT}/getdata`;\n\ntype Props = {\n  state: State;\n  updateState: (stateData: Partial<State>) => void;\n  setTodos: React.Dispatch<React.SetStateAction<TodoItem[]>>;\n};\n\ntype PropsUI = {\n  state: State;\n  getList: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n  addNewList: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  lists: React.RefObject<HTMLSelectElement>;\n};\n\nconst ListSelector: React.FunctionComponent<Props> = ({\n  state,\n  updateState,\n  setTodos,\n}) => {\n  const lists = useRef<HTMLSelectElement>(null);\n  useEffect(() => {\n    let todos = [];\n    netCalls.getJSON(\n      getURL,\n      state.listNum,\n      (err: number | null, data: object) => {\n        if (err !== null) {\n          console.log(\"Empty\");\n          // updateState({todos: todos});\n          setTodos([...todos]);\n        } else {\n          console.log(\"Loaded\");\n          console.log(data);\n          todos = JSON.parse(data[\"json\"]);\n          // updateState({todos: todos});\n          setTodos([...todos]);\n        }\n      },\n      state.id_token\n    );\n    if (lists.current !== null) lists.current.selectedIndex = state.listNum - 1;\n  }, [state.listNum, state.id_token, setTodos]);\n\n  let getList = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    console.log(\"onChange\");\n    if (lists.current === null) return;\n    let listNum = Number(lists.current.selectedIndex + 1);\n    if (listNum === 0) return;\n    console.log(listNum);\n    updateState({ listNum: listNum });\n  };\n\n  let addNewList = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    let totalLists = state.totalLists + 1;\n    updateState({ totalLists: totalLists });\n    console.log(totalLists);\n    updateState({ listNum: totalLists });\n  };\n\n  return (\n    <ListSelectorUI\n      state={state}\n      getList={getList}\n      addNewList={addNewList}\n      lists={lists}\n    />\n  );\n};\n\nconst ListSelectorUI: React.FunctionComponent<PropsUI> = ({\n  state,\n  getList,\n  addNewList,\n  lists,\n}) => {\n  //   const { state, getList, addNewList, lists } = props;\n  let optionsList: JSX.Element[] = [];\n  for (let i = 1; i <= state.totalLists; i++) {\n    optionsList.push(\n      <option value={i.toString()}>{\"List\" + i.toString()}</option>\n    );\n  }\n  return (\n    <div className=\"multipleLists\">\n      <select id=\"lists\" ref={lists} onChange={getList}>\n        {optionsList}\n      </select>\n      <i className=\"fas fa-list\" id=\"addList\" onClick={addNewList}></i>\n    </div>\n  );\n};\n\nexport default ListSelector;\n"]},"metadata":{},"sourceType":"module"}