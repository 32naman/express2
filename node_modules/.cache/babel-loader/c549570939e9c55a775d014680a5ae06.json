{"ast":null,"code":"var _jsxFileName = \"/home/revpro/Desktop/new/ToDoAppReact/ToDoApp/src/components/ScreenShareAgent.tsx\";\nimport React, { useState } from 'react';\nimport { TreeMirror } from '../tree_mirror';\nconst PORT = 8000;\nconst url = new URL(document.URL);\nconst search_params = url.searchParams;\nconst hash = search_params.get('hash');\nconst socketURL = `ws://localhost:${PORT}/screenShareAgent?hash=` + hash;\n\nfunction ScreenShareAgent() {\n  const [socket, setSocket] = useState(new WebSocket(socketURL));\n\n  function clearPage() {\n    while (document.firstChild) {\n      document.removeChild(document.firstChild);\n    }\n\n    ;\n  }\n\n  let userCursor;\n  let notCreated = true;\n  let base;\n  let mirror = new TreeMirror(document, {\n    createElement: function (tagName) {\n      if (tagName === 'SCRIPT') {\n        let node = document.createElement('NO-SCRIPT');\n        node.style.display = 'none';\n        return node;\n      }\n\n      if (tagName === 'HEAD') {\n        let node = document.createElement('HEAD');\n        node.appendChild(document.createElement('BASE'));\n\n        if (node != null && node.firstChild != null) {\n          let nodeFirstChild = node.firstChild;\n          nodeFirstChild['href'] = base;\n        }\n\n        return node;\n      }\n    }\n  });\n\n  let handleMessage = msg => {\n    if (msg.error) {}\n\n    if (msg.clear) clearPage();else if (msg.base) {\n      base = msg.base;\n    } else if (msg.scroll) document.documentElement.scrollTop = document.body.scrollTop = msg.scroll;else if (msg.x) {\n      if (notCreated) {\n        userCursor = document.createElement(\"div\");\n        userCursor.innerHTML = \"<i class ='fas fa-mouse-pointer'></i>\";\n        userCursor.style.position = \"absolute\";\n        let userCursorStyle = userCursor.style;\n        userCursorStyle.size = \"20px\";\n        const rootDiv = document.getElementById('root');\n        if (rootDiv != null) rootDiv.appendChild(userCursor);\n        notCreated = false;\n      }\n\n      let width = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n      let height = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;\n      let x = msg.x / msg.width * width;\n      let y = msg.y / msg.height * height;\n      userCursor.style.left = x + 'px';\n      userCursor.style.top = y + 'px';\n    } else if (msg.f) {\n      mirror[msg.f].apply(mirror, msg.args);\n\n      if (msg.f === 'intialize') {\n        userCursor = document.createElement(\"div\");\n        userCursor.innerHTML = \"<i class ='fas fa-mouse-pointer'></i>\";\n        userCursor.style.position = \"absolute\";\n        let userCursorStyle = userCursor.style;\n        userCursorStyle.size = \"20px\";\n        const rootDiv = document.getElementById('root');\n        if (rootDiv != null) rootDiv.appendChild(userCursor);\n        notCreated = false;\n      }\n    }\n  };\n\n  socket.onmessage = function (event) {\n    let msg = JSON.parse(event.data);\n\n    if (msg instanceof Array) {\n      msg.forEach(function (subMessage) {\n        console.log(subMessage);\n        handleMessage(JSON.parse(subMessage));\n      });\n    } else {\n      console.log(msg);\n      handleMessage(msg);\n    }\n  };\n\n  socket.onclose = function () {\n    setSocket(new WebSocket(socketURL));\n  };\n\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, \"Empty\");\n}\n\nexport default ScreenShareAgent;","map":{"version":3,"sources":["/home/revpro/Desktop/new/ToDoAppReact/ToDoApp/src/components/ScreenShareAgent.tsx"],"names":["React","useState","TreeMirror","PORT","url","URL","document","search_params","searchParams","hash","get","socketURL","ScreenShareAgent","socket","setSocket","WebSocket","clearPage","firstChild","removeChild","userCursor","notCreated","base","mirror","createElement","tagName","node","style","display","appendChild","nodeFirstChild","handleMessage","msg","error","clear","scroll","documentElement","scrollTop","body","x","innerHTML","position","userCursorStyle","size","rootDiv","getElementById","width","window","innerWidth","clientWidth","height","innerHeight","clientHeight","y","left","top","f","apply","args","onmessage","event","JSON","parse","data","Array","forEach","subMessage","console","log","onclose"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport {TreeMirror} from '../tree_mirror';\n\nconst PORT = 8000;\nconst url = new URL(document.URL);\nconst search_params = url.searchParams;\nconst hash = search_params.get('hash');\nconst socketURL = `ws://localhost:${PORT}/screenShareAgent?hash=`+hash;\ninterface CSSStyleDeclarationWithResize extends CSSStyleDeclaration {\n  size: string\n}\ninterface Msg{\n  error:boolean;\n  clear:boolean;\n  base:string;\n  scroll:number;\n  x:number;\n  y:number;\n  width:number;\n  height:number;\n  f:string;\n  args: (number | object[])[];\n}\n\ninterface Child{\n  [Key:string]:any;\n}\n\nfunction ScreenShareAgent(){\n\n    const [socket,setSocket]=useState(new WebSocket(socketURL));\n\n    function clearPage(){\n        while (document.firstChild) {\n            document.removeChild(document.firstChild);\n        };\n    }\n\n    let userCursor:HTMLDivElement;\n    let notCreated = true;\n    let base:string;\n    let mirror :Child= new TreeMirror(document, {\n        createElement: function(tagName:string) {\n        if (tagName === 'SCRIPT') {\n            let node = document.createElement('NO-SCRIPT');\n            node.style.display = 'none';\n            return node;\n        }\n\n        if (tagName === 'HEAD') {\n            let node = document.createElement('HEAD');\n            node.appendChild(document.createElement('BASE'));\n            if((node!=null)&&(node.firstChild!=null)){\n              let nodeFirstChild:Child=node.firstChild;\n              nodeFirstChild['href'] = base;\n            }\n            return node;\n        }\n        }\n    });\n\n    let handleMessage = (msg:Msg) => {\n        if(msg.error){\n        }\n        if (msg.clear)\n            clearPage();\n        else if (msg.base) {\n            base = msg.base;\n        }\n        else if (msg.scroll)\n            document.documentElement.scrollTop = document.body.scrollTop = msg.scroll;\n        else if (msg.x) {\n            if(notCreated) {\n                userCursor = document.createElement(\"div\");\n                userCursor.innerHTML = \"<i class ='fas fa-mouse-pointer'></i>\";\n                userCursor.style.position = \"absolute\";\n                let userCursorStyle:CSSStyleDeclarationWithResize=userCursor.style as CSSStyleDeclarationWithResize;\n                userCursorStyle.size = \"20px\"; \n                const rootDiv = document.getElementById('root');\n                if(rootDiv!=null)\n                rootDiv.appendChild(userCursor);\n                notCreated = false;\n            }\n            let width = window.innerWidth \n            || document.documentElement.clientWidth\n            || document.body.clientWidth;\n            let height = window.innerHeight \n            || document.documentElement.clientHeight\n            || document.body.clientHeight;\n            let x = (msg.x / msg.width) * width;\n            let y = (msg.y / msg.height) * height;\n            userCursor.style.left = x + 'px';\n            userCursor.style.top = y + 'px';\n        }\n        else if(msg.f) {\n            mirror[msg.f].apply(mirror, msg.args);\n            if(msg.f === 'intialize') {\n                userCursor = document.createElement(\"div\");\n                userCursor.innerHTML = \"<i class ='fas fa-mouse-pointer'></i>\";\n                userCursor.style.position = \"absolute\";\n                let userCursorStyle:CSSStyleDeclarationWithResize=userCursor.style as CSSStyleDeclarationWithResize;\n                userCursorStyle.size = \"20px\"; \n                const rootDiv = document.getElementById('root');\n                if(rootDiv!=null)\n                rootDiv.appendChild(userCursor);\n                notCreated = false;\n            }\n        }\n    }\n\n    socket.onmessage = function(event) {\n        let msg = JSON.parse(event.data);\n        if (msg instanceof Array) {\n            msg.forEach(function(subMessage) {\n                console.log(subMessage);\n                handleMessage(JSON.parse(subMessage));\n            });\n        } else {\n            console.log(msg);\n            handleMessage(msg);\n        }\n    }\n\n    socket.onclose = function() {\n        setSocket(new WebSocket(socketURL));\n    }\n\n    return (\n        <h1>Empty</h1>\n    );\n}\n\nexport default ScreenShareAgent;"]},"metadata":{},"sourceType":"module"}