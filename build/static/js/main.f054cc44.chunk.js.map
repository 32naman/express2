{"version":3,"sources":["components/Login.tsx","netCallsMod.ts","components/ListSelector.tsx","components/SearchBar.tsx","components/TodoList.tsx","components/InputTodo.tsx","components/ShareableLink.tsx","tree_mirror.js","components/TodoApp.tsx","netCallsShare.ts","components/TodoListShare.tsx","components/InputTodoShare.tsx","components/SharedTodo.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["Login","props","onSignIn","googleUser","i","console","log","id_token","getAuthResponse","updateState","localStorage","setItem","window","location","assign","useEffect","gapi","signin2","render","className","id","netCalls","url","listNum","callback","a","postMessage","fetch","method","headers","body","response","json","result","status","todos","postJSON","token","JSON","stringify","text","undefined","getJSON","putJSON","verifyToken","generateLink","generateSSCode","getURL","ListSelectorUI","state","getList","addNewList","lists","optionsList","totalLists","push","value","toString","ref","onChange","onClick","ListSelector","setTodos","useRef","err","data","parse","current","selectedIndex","e","Number","SearchBar","setFilteredTodos","setSearchQuery","searchInput","type","event","trim","toLowerCase","filteredTodos","forEach","ele","indexOf","placeholder","putURL","TodoListUI","tickOrDelete","todoList","map","todo","doneTodo","done","key","TodoList","btn","target","HTMLElement","item","parentElement","todoText","querySelector","ind","findIndex","innerText","splice","InputTodo","inputNewTodo","todosSend","Math","random","shareURL","ShareableLinkUI","genShareLink","linkAddRef","ShareableLink","linkAdd","then","innerHTML","TreeMirrorClient","TreeMirror","root","delegate","this","idMap","prototype","initialize","rootId","children","length","deserializeNode","applyChanged","removed","addedOrMoved","attributes","_this","node","parentNode","previousSibling","removeChild","parent","previous","insertBefore","nextSibling","firstChild","Object","keys","attrName","newVal","removeAttribute","setAttribute","textContent","nodeData","doc","ownerDocument","nodeType","Node","COMMENT_NODE","createComment","TEXT_NODE","createTextNode","DOCUMENT_TYPE_NODE","implementation","createDocumentType","name","publicId","systemId","ELEMENT_NODE","createElement","tagName","appendChild","childNodes","mirror","testingQueries","nextId","knownNodes","MutationSummary","NodeMap","serializeNode","child","queries","all","concat","mutationSummary","rootNode","summaries","disconnect","rememberNode","set","forgetNode","delete","recursive","get","docType","elm","attr","serializeAddedAndMoved","added","reparented","reordered","parentMap","moved","has","serializeAttributeChanges","attributeChanged","element","record","getAttribute","summary","characterDataChanged","socketURL","TodoApp","useState","setListNum","setTotalLists","searchQuery","Date","toLocaleDateString","day","month","weekday","date","setDate","getItem","setID","sharing","setSharing","setSocket","peer","dataChannel","msgs","clear","peerConn","peerDataSend","send","socket","close","mirrorClient","mousePos","WebSocket","document","onmousemove","width","innerWidth","documentElement","clientWidth","height","innerHeight","clientHeight","x","pageX","y","pageY","onscroll","verScroll","scrollTop","scroll","onopen","base","href","match","f","args","onmessage","RTCPeerConnection","iceServers","urls","onicecandidate","candidate","onconnectionstatechange","connectionState","setRemoteDescription","RTCSessionDescription","createAnswer","offerToReceiveAudio","offerToReceiveVideo","descrip","setLocalDescription","ondatachannel","channel","onclose","addIceCandidate","RTCIceCandidate","useScreenShareWithWebRTC","load","auth2","init","preventDefault","getAuthInstance","signOut","history","stateData","hash","sharePOSTURL","setNewTodo","newTodo","useNewTodo","shareSocketURL","SharedTodo","hash_val","URL","searchParams","startSocket","dataWithKey","App","forceRefresh","path","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f054cc44.chunk.js","sourcesContent":["// import { History } from 'history';\nimport React, {useEffect} from 'react';\nimport './Login.css';\n// import { Redirect } from 'react-router-dom';\n// import { rootCertificates } from 'tls';\ndeclare var gapi: any;\n\n\ninterface Props {\n  updateState: (id_token: string) => void;\n  state: {\n    id_token: string;\n  };\n  /* other props for ChildComponent */\n}\nfunction Login(props:Props){\n\n    let onSignIn = (googleUser: { getAuthResponse: () => { (): any; new(): any; id_token: string; }; }) => {\n        // console.log(googleUser);\n        for(let i=0;i<10;i++) console.log('\\n');\n        const id_token:string = googleUser.getAuthResponse().id_token;\n        props.updateState(id_token);\n        localStorage.setItem('id_token', id_token);\n        window.location.assign(\"http://localhost:8000/todos\");\n    }\n\n    useEffect( () =>{\n        console.log(\"Component Mounted\");\n        gapi.signin2.render('gsign', {\n            'scope': 'profile email',\n            'width': 200,\n            'height': 50,\n            'longtitle': true,\n            'theme': 'dark',\n            'onsuccess': onSignIn\n        });\n    }, [] );\n\n    return (\n        <div className=\"container\">\n            <div className=\"g-signin2\" id=\"gsign\"> </div>\n        </div>\n    );\n}\n\nexport default Login;\n","var netCalls = (function () {\n  async function getJSON(\n    url: string,\n    listNum: number,\n    callback: (err: number | null, data: object) => void,\n    id_token: string | null\n  ) {\n    // const id_token = localStorage.getItem(\"token\");\n    console.log(url);\n    console.log(id_token);\n\n    let postMessage = \"id_token=\" + id_token + \"&listNum=\" + listNum;\n    let response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n      },\n      body: postMessage,\n    });\n    let result = await response.json();\n    if (response.status === 200) {\n      callback(null, result);\n    } else {\n      callback(response.status, result);\n    }\n  }\n\n  async function putJSON(\n    url: string,\n    listNum: number,\n    todos: object[],\n    id_token: string | null\n  ) {\n    // const id_token = localStorage.getItem(\"token\");\n\n    let postJSON = {\n      token: id_token,\n      listNum: listNum,\n      json: JSON.stringify(todos),\n    };\n    await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(postJSON),\n    });\n  }\n\n  async function verifyToken(url: string, id_token: string | null) {\n    // const id_token = localStorage.getItem(\"token\");\n    console.log(id_token);\n\n    let postMessage = \"id_token=\" + id_token;\n    let response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n      },\n      body: postMessage,\n    });\n    let result = await response.text();\n    console.log(\"Signed in as: \" + result);\n  }\n\n  async function generateLink(\n    url: string,\n    listNum: number,\n    id_token: string | null\n  ) {\n    // const id_token = localStorage.getItem(\"token\");\n\n    let postMessage = \"id_token=\" + id_token + \"&listNum=\" + listNum;\n    let response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n      },\n      body: postMessage,\n    });\n    let result = await response.text();\n    // linkAdd.innerHTML = `<a href=\"${result}\" target=\"_blank\">${result}</a>`;\n    return result;\n  }\n\n  async function generateSSCode(url: string) {\n    let response = await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n      },\n      body: undefined,\n    });\n    let result = await response.text();\n    return result;\n  }\n\n  return {\n    getJSON: getJSON,\n    putJSON: putJSON,\n    verifyToken: verifyToken,\n    generateLink: generateLink,\n    generateSSCode: generateSSCode,\n  };\n})();\n\nexport default netCalls;\n","import React, { useEffect, useRef } from \"react\";\nimport netCalls from \"../netCallsMod\";\nimport { State, TodoItem } from \"./TodoApp\";\n\nconst PORT = 8000;\nconst getURL = `http://localhost:${PORT}/getdata`;\n\ntype Props = {\n  state: State;\n  updateState: (stateData: Partial<State>) => void;\n  setTodos: React.Dispatch<React.SetStateAction<TodoItem[]>>;\n};\n\ntype PropsUI = {\n  state: State;\n  getList: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n  addNewList: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  lists: React.RefObject<HTMLSelectElement>;\n};\n\nconst ListSelector: React.FunctionComponent<Props> = ({\n  state,\n  updateState,\n  setTodos,\n}) => {\n  const lists = useRef<HTMLSelectElement>(null);\n  useEffect(() => {\n    let todos = [];\n    netCalls.getJSON(\n      getURL,\n      state.listNum,\n      (err: number | null, data: object) => {\n        if (err !== null) {\n          console.log(\"Empty\");\n          // updateState({todos: todos});\n          setTodos([...todos]);\n        } else {\n          console.log(\"Loaded\");\n          console.log(data);\n          todos = JSON.parse(data[\"json\"]);\n          // updateState({todos: todos});\n          setTodos([...todos]);\n        }\n      },\n      state.id_token\n    );\n    if (lists.current !== null) lists.current.selectedIndex = state.listNum - 1;\n  }, [state.listNum, state.id_token, setTodos]);\n\n  let getList = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    console.log(\"onChange\");\n    if (lists.current === null) return;\n    let listNum = Number(lists.current.selectedIndex + 1);\n    if (listNum === 0) return;\n    console.log(listNum);\n    updateState({ listNum: listNum });\n  };\n\n  let addNewList = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    let totalLists = state.totalLists + 1;\n    updateState({ totalLists: totalLists });\n    console.log(totalLists);\n    updateState({ listNum: totalLists });\n  };\n\n  return (\n    <ListSelectorUI\n      state={state}\n      getList={getList}\n      addNewList={addNewList}\n      lists={lists}\n    />\n  );\n};\n\nconst ListSelectorUI: React.FunctionComponent<PropsUI> = ({\n  state,\n  getList,\n  addNewList,\n  lists,\n}) => {\n  //   const { state, getList, addNewList, lists } = props;\n  let optionsList: JSX.Element[] = [];\n  for (let i = 1; i <= state.totalLists; i++) {\n    optionsList.push(\n      <option value={i.toString()}>{\"List\" + i.toString()}</option>\n    );\n  }\n  return (\n    <div className=\"multipleLists\">\n      <select id=\"lists\" ref={lists} onChange={getList}>\n        {optionsList}\n      </select>\n      <i className=\"fas fa-list\" id=\"addList\" onClick={addNewList}></i>\n    </div>\n  );\n};\n\nexport default ListSelector;\n","import React, { useRef } from \"react\";\nimport { State, TodoItem } from \"./TodoApp\";\n\ntype Props = {\n  state: State;\n  setFilteredTodos: React.Dispatch<React.SetStateAction<TodoItem[] | null>>;\n  setSearchQuery: React.Dispatch<React.SetStateAction<string>>;\n};\n\nconst SearchBar: React.FunctionComponent<Props> = ({\n  state,\n  setFilteredTodos,\n  setSearchQuery,\n}) => {\n  // const {state, setFilteredTodos, setSearchQuery} = props;\n  const searchInput = useRef<HTMLInputElement>(null);\n\n  let onSearchInputChanged = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (searchInput.current === null) return;\n    let text = searchInput.current.value;\n    text = text.trim().toLowerCase();\n    setSearchQuery(text);\n    let filteredTodos: TodoItem[] | null = [];\n    state.todos.forEach((ele) => {\n      if (ele.text.toLowerCase().indexOf(text) !== -1) {\n        filteredTodos!.push(ele);\n      }\n    });\n    if (text === \"\") {\n      filteredTodos = null;\n      setFilteredTodos(null);\n    } else {\n      setFilteredTodos([...filteredTodos]);\n    }\n  };\n\n  let resetSearch = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (searchInput.current === null) return;\n    searchInput.current.value = \"\";\n    setSearchQuery(\"\");\n    setFilteredTodos(null);\n  };\n\n  return (\n    <div className=\"searchBar\">\n      <input\n        type=\"text\"\n        id=\"searchInput\"\n        ref={searchInput}\n        onChange={onSearchInputChanged}\n        placeholder=\"Search for a To-Do\"\n      />\n      <i className=\"fas fa-times\" id=\"close\" onClick={resetSearch}></i>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React from \"react\";\nimport netCalls from \"../netCallsMod\";\nimport { State, TodoItem } from \"./TodoApp\";\n\nconst PORT = 8000;\nconst putURL = `http://localhost:${PORT}/postdata`;\n\ntype Props = {\n  state: State;\n  setTodos: React.Dispatch<React.SetStateAction<TodoItem[]>>;\n};\n\ntype PropsUI = {\n  state: State;\n  tickOrDelete: (event: any) => void;\n};\n\nconst TodoList: React.FunctionComponent<Props> = ({ state, setTodos }) => {\n  let tickOrDelete = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    let btn: HTMLElement;\n    if (event.target instanceof HTMLElement) btn = event.target;\n    else return;\n    let todos = state.todos;\n\n    const item = btn.parentElement;\n    if (item === null) return;\n    const todoText = item.querySelector(\".text\") as HTMLElement;\n    let ind = todos.findIndex((ele) => ele.text === todoText.innerText);\n    // Tick Case\n    if (btn.id === \"tick\") {\n      todos[ind].done = !todos[ind].done;\n    }\n    // Delete Case\n    else if (btn.id === \"delete\") {\n      // item.remove();\n      todos.splice(ind, 1);\n    }\n\n    setTodos([...todos]);\n    netCalls.putJSON(putURL, state.listNum, todos, state.id_token);\n  };\n\n  return (\n    <div className=\"todo\">\n      <TodoListUI state={state} tickOrDelete={tickOrDelete} />\n    </div>\n  );\n};\n\nconst TodoListUI: React.FunctionComponent<PropsUI> = ({\n  state,\n  tickOrDelete,\n}) => {\n  // const { state, tickOrDelete } = props;\n  let Todos = state.filteredTodos ?? state.todos;\n  let todoList = Todos.map((todo) => {\n    let doneTodo = todo.done ? \"text lineThrough\" : \"text\";\n    return (\n      <li className=\"item\" key={todo.id}>\n        <p className={doneTodo}>{todo.text}</p>\n        <i className=\"fas fa-check tick\" id=\"tick\" onClick={tickOrDelete}></i>\n        <i\n          className=\"fas fa-trash delete\"\n          id=\"delete\"\n          onClick={tickOrDelete}\n        ></i>\n      </li>\n    );\n  });\n  return <ul id=\"list\">{todoList}</ul>;\n};\n\nexport default TodoList;\n","import React, { useRef } from \"react\";\nimport netCalls from \"../netCallsMod\";\nimport { State, TodoItem } from \"./TodoApp\";\n\nconst PORT = 8000;\nconst putURL = `http://localhost:${PORT}/postdata`;\n\ntype Props = {\n  state: State;\n  setTodos: React.Dispatch<React.SetStateAction<TodoItem[]>>;\n};\n\nconst InputTodo: React.FunctionComponent<Props> = ({ state, setTodos }) => {\n  const inputNewTodo = useRef<HTMLInputElement>(null);\n\n  function addTodo(event: React.MouseEvent<HTMLElement, MouseEvent>) {\n    if (inputNewTodo.current === null) return;\n    let text = inputNewTodo.current.value;\n    let todosSend: TodoItem[] = state.todos;\n    todosSend.push({ text: text.trim(), done: false, id: Math.random() });\n    setTodos([...todosSend]);\n    console.log(todosSend);\n    netCalls.putJSON(putURL, state.listNum, todosSend, state.id_token);\n    inputNewTodo.current.value = \"\";\n  }\n\n  return (\n    <div className=\"inputToDo\">\n      <input\n        type=\"text\"\n        id=\"input\"\n        ref={inputNewTodo}\n        placeholder=\"Enter a To-Do\"\n      />\n      <i className=\"fas fa-plus-square\" onClick={addTodo}></i>\n    </div>\n  );\n};\n\nexport default InputTodo;\n","import React, { useRef } from \"react\";\nimport netCalls from \"../netCallsMod\";\nimport { State } from \"./TodoApp\";\n\nconst PORT = 8000;\nconst shareURL = `http://localhost:${PORT}/shareLink`;\n\ntype Props = {\n  state: State;\n};\n\ntype PropsUI = {\n  state: State;\n  genShareLink: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  linkAddRef: React.RefObject<HTMLParagraphElement>;\n};\n\nconst ShareableLink: React.FunctionComponent<Props> = ({ state }) => {\n  const linkAdd = useRef<HTMLParagraphElement>(null);\n\n  let genShareLink = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    netCalls\n      .generateLink(shareURL, state.listNum, state.id_token)\n      .then((result) => {\n        if (linkAdd.current === null) return;\n        linkAdd.current.innerHTML = `<a href=\"${result}\" target=\"_blank\">${result}</a>`;\n      });\n  };\n\n  return (\n    <ShareableLinkUI\n      state={state}\n      genShareLink={genShareLink}\n      linkAddRef={linkAdd}\n    />\n  );\n};\n\nconst ShareableLinkUI: React.FunctionComponent<PropsUI> = ({\n  state,\n  genShareLink,\n  linkAddRef,\n}) => {\n  // const { state, genShareLink, linkAddRef } = props;\n  return (\n    <div className=\"shareLink\">\n      <p id=\"linkAdd\" ref={linkAddRef}>\n        {\"Generate Link for List \" + state.listNum.toString()}\n      </p>\n      <i className=\"fas fa-link\" id=\"genLink\" onClick={genShareLink}></i>\n    </div>\n  );\n};\n\nexport default ShareableLink;\n","///<reference path='mutation-summary.js'/>\nimport MutationSummary from \"mutation-summary\";\n\nexport var TreeMirror = (function () {\n  function TreeMirror(root, delegate) {\n    this.root = root;\n    this.delegate = delegate;\n    this.idMap = {};\n  }\n  TreeMirror.prototype.initialize = function (rootId, children) {\n    this.idMap[rootId] = this.root;\n    for (var i = 0; i < children.length; i++)\n      this.deserializeNode(children[i], this.root);\n  };\n  TreeMirror.prototype.applyChanged = function (\n    removed,\n    addedOrMoved,\n    attributes,\n    text\n  ) {\n    var _this = this;\n    // NOTE: Applying the changes can result in an attempting to add a child\n    // to a parent which is presently an ancestor of the parent. This can occur\n    // based on random ordering of moves. The way we handle this is to first\n    // remove all changed nodes from their parents, then apply.\n    addedOrMoved.forEach(function (data) {\n      var node = _this.deserializeNode(data);\n      var parent = _this.deserializeNode(data.parentNode);\n      var previous = _this.deserializeNode(data.previousSibling);\n      if (node.parentNode) node.parentNode.removeChild(node);\n    });\n    removed.forEach(function (data) {\n      var node = _this.deserializeNode(data);\n      if (node.parentNode) node.parentNode.removeChild(node);\n    });\n    addedOrMoved.forEach(function (data) {\n      var node = _this.deserializeNode(data);\n      var parent = _this.deserializeNode(data.parentNode);\n      var previous = _this.deserializeNode(data.previousSibling);\n      parent.insertBefore(\n        node,\n        previous ? previous.nextSibling : parent.firstChild\n      );\n    });\n    attributes.forEach(function (data) {\n      var node = _this.deserializeNode(data);\n      Object.keys(data.attributes).forEach(function (attrName) {\n        var newVal = data.attributes[attrName];\n        if (newVal === null) {\n          node.removeAttribute(attrName);\n        } else {\n          if (\n            !_this.delegate ||\n            !_this.delegate.setAttribute ||\n            !_this.delegate.setAttribute(node, attrName, newVal)\n          ) {\n            node.setAttribute(attrName, newVal);\n          }\n        }\n      });\n    });\n    text.forEach(function (data) {\n      var node = _this.deserializeNode(data);\n      node.textContent = data.textContent;\n    });\n    removed.forEach(function (node) {\n      delete _this.idMap[node.id];\n    });\n  };\n  TreeMirror.prototype.deserializeNode = function (nodeData, parent) {\n    var _this = this;\n    if (nodeData === null) return null;\n    var node = this.idMap[nodeData.id];\n    if (node) return node;\n    var doc = this.root.ownerDocument;\n    if (doc === null) doc = this.root;\n    switch (nodeData.nodeType) {\n      case Node.COMMENT_NODE:\n        node = doc.createComment(nodeData.textContent);\n        break;\n      case Node.TEXT_NODE:\n        node = doc.createTextNode(nodeData.textContent);\n        break;\n      case Node.DOCUMENT_TYPE_NODE:\n        node = doc.implementation.createDocumentType(\n          nodeData.name,\n          nodeData.publicId,\n          nodeData.systemId\n        );\n        break;\n      case Node.ELEMENT_NODE:\n        if (this.delegate && this.delegate.createElement)\n          node = this.delegate.createElement(nodeData.tagName);\n        if (!node) node = doc.createElement(nodeData.tagName);\n        Object.keys(nodeData.attributes).forEach(function (name) {\n          if (\n            !_this.delegate ||\n            !_this.delegate.setAttribute ||\n            !_this.delegate.setAttribute(node, name, nodeData.attributes[name])\n          ) {\n            node.setAttribute(name, nodeData.attributes[name]);\n          }\n        });\n        break;\n    }\n    if (!node) throw \"ouch\";\n    this.idMap[nodeData.id] = node;\n    if (parent) parent.appendChild(node);\n    if (nodeData.childNodes) {\n      for (var i = 0; i < nodeData.childNodes.length; i++)\n        this.deserializeNode(nodeData.childNodes[i], node);\n    }\n    return node;\n  };\n  return TreeMirror;\n})();\nexport var TreeMirrorClient = (function () {\n  function TreeMirrorClient(target, mirror, testingQueries) {\n    var _this = this;\n    this.target = target;\n    this.mirror = mirror;\n    this.nextId = 1;\n    this.knownNodes = new MutationSummary.NodeMap();\n    var rootId = this.serializeNode(target).id;\n    var children = [];\n    for (var child = target.firstChild; child; child = child.nextSibling)\n      children.push(this.serializeNode(child, true));\n    this.mirror.initialize(rootId, children);\n    var self = this;\n    var queries = [{ all: true }];\n    if (testingQueries) queries = queries.concat(testingQueries);\n    this.mutationSummary = new MutationSummary({\n      rootNode: target,\n      callback: function (summaries) {\n        _this.applyChanged(summaries);\n      },\n      queries: queries,\n    });\n  }\n  TreeMirrorClient.prototype.disconnect = function () {\n    if (this.mutationSummary) {\n      this.mutationSummary.disconnect();\n      this.mutationSummary = undefined;\n    }\n  };\n  TreeMirrorClient.prototype.rememberNode = function (node) {\n    var id = this.nextId++;\n    this.knownNodes.set(node, id);\n    return id;\n  };\n  TreeMirrorClient.prototype.forgetNode = function (node) {\n    this.knownNodes.delete(node);\n  };\n  TreeMirrorClient.prototype.serializeNode = function (node, recursive) {\n    if (node === null) return null;\n    var id = this.knownNodes.get(node);\n    if (id !== undefined) {\n      return { id: id };\n    }\n    var data = {\n      nodeType: node.nodeType,\n      id: this.rememberNode(node),\n    };\n    switch (data.nodeType) {\n      case Node.DOCUMENT_TYPE_NODE:\n        var docType = node;\n        data.name = docType.name;\n        data.publicId = docType.publicId;\n        data.systemId = docType.systemId;\n        break;\n      case Node.COMMENT_NODE:\n      case Node.TEXT_NODE:\n        data.textContent = node.textContent;\n        break;\n      case Node.ELEMENT_NODE:\n        var elm = node;\n        data.tagName = elm.tagName;\n        data.attributes = {};\n        for (var i = 0; i < elm.attributes.length; i++) {\n          var attr = elm.attributes[i];\n          data.attributes[attr.name] = attr.value;\n        }\n        if (recursive && elm.childNodes.length) {\n          data.childNodes = [];\n          for (var child = elm.firstChild; child; child = child.nextSibling)\n            data.childNodes.push(this.serializeNode(child, true));\n        }\n        break;\n    }\n    return data;\n  };\n  TreeMirrorClient.prototype.serializeAddedAndMoved = function (\n    added,\n    reparented,\n    reordered\n  ) {\n    var _this = this;\n    var all = added.concat(reparented).concat(reordered);\n    var parentMap = new MutationSummary.NodeMap();\n    all.forEach(function (node) {\n      var parent = node.parentNode;\n      var children = parentMap.get(parent);\n      if (!children) {\n        children = new MutationSummary.NodeMap();\n        parentMap.set(parent, children);\n      }\n      children.set(node, true);\n    });\n    var moved = [];\n    parentMap.keys().forEach(function (parent) {\n      var children = parentMap.get(parent);\n      var keys = children.keys();\n      while (keys.length) {\n        var node = keys[0];\n        while (node.previousSibling && children.has(node.previousSibling))\n          node = node.previousSibling;\n        while (node && children.has(node)) {\n          var data = _this.serializeNode(node);\n          data.previousSibling = _this.serializeNode(node.previousSibling);\n          data.parentNode = _this.serializeNode(node.parentNode);\n          moved.push(data);\n          children.delete(node);\n          node = node.nextSibling;\n        }\n        var keys = children.keys();\n      }\n    });\n    return moved;\n  };\n  TreeMirrorClient.prototype.serializeAttributeChanges = function (\n    attributeChanged\n  ) {\n    var _this = this;\n    var map = new MutationSummary.NodeMap();\n    Object.keys(attributeChanged).forEach(function (attrName) {\n      attributeChanged[attrName].forEach(function (element) {\n        var record = map.get(element);\n        if (!record) {\n          record = _this.serializeNode(element);\n          record.attributes = {};\n          map.set(element, record);\n        }\n        record.attributes[attrName] = element.getAttribute(attrName);\n      });\n    });\n    return map.keys().map(function (node) {\n      return map.get(node);\n    });\n  };\n  TreeMirrorClient.prototype.applyChanged = function (summaries) {\n    var _this = this;\n    var summary = summaries[0];\n    var removed = summary.removed.map(function (node) {\n      return _this.serializeNode(node);\n    });\n    var moved = this.serializeAddedAndMoved(\n      summary.added,\n      summary.reparented,\n      summary.reordered\n    );\n    var attributes = this.serializeAttributeChanges(summary.attributeChanged);\n    var text = summary.characterDataChanged.map(function (node) {\n      var data = _this.serializeNode(node);\n      data.textContent = node.textContent;\n      return data;\n    });\n    this.mirror.applyChanged(removed, moved, attributes, text);\n    summary.removed.forEach(function (node) {\n      _this.forgetNode(node);\n    });\n  };\n  return TreeMirrorClient;\n})();\n","import React, { useState, useEffect, useRef } from \"react\";\nimport netCalls from \"../netCallsMod\";\nimport ListSelector from \"./ListSelector\";\nimport SearchBar from \"./SearchBar\";\nimport TodoList from \"./TodoList\";\nimport InputTodo from \"./InputTodo\";\nimport ShareableLink from \"./ShareableLink\";\nimport ScreenSharing from \"./ScreenSharing\";\nimport { TreeMirrorClient } from \"../tree_mirror\";\nimport \"./TodoApp.css\";\nimport { RouteComponentProps } from \"react-router-dom\";\n\ndeclare var gapi: any;\nconst PORT = 8000;\nconst ScreenSharePORT = 7000;\nconst getURL = `http://localhost:${PORT}/getdata`;\nconst socketURL = `ws://localhost:${ScreenSharePORT}/screenShareClient`;\n\nexport interface TodoItem {\n  text: string;\n  done: boolean;\n  id: number;\n}\n\nexport interface State {\n  todos: TodoItem[];\n  listNum: number;\n  totalLists: number;\n  searchQuery: string;\n  filteredTodos: TodoItem[] | null;\n  date: string;\n  id_token: string | null;\n  sharing: string;\n}\n\nfunction useScreenShareWithWebRTC(): [\n  string,\n  React.Dispatch<React.SetStateAction<string>>\n] {\n  const [sharing, setSharing] = useState<string>(\"off\");\n  const [, setSocket] = useState<WebSocket | undefined>(undefined);\n  const peer = useRef<RTCPeerConnection>(null);\n  const dataChannel = useRef<RTCDataChannel>(null);\n  const msgs = useRef<string[]>([JSON.stringify({ clear: true })]);\n  const peerConn = useRef(false);\n\n  useEffect(() => {\n    let peerDataSend = (data) => {\n      if (peerConn.current === false) {\n        msgs.current.push(JSON.stringify(data));\n      } else {\n        dataChannel.current.send(JSON.stringify(data));\n      }\n    };\n\n    console.log(sharing);\n    if (sharing === \"off\") {\n      console.log(\"Entering off\");\n      // if(shareSocket !== undefined) shareSocket.close();\n      // setSocket(undefined);\n      setSocket((socket) => {\n        if (socket !== undefined) socket.close();\n        return undefined;\n      });\n    } else {\n      let socket = new WebSocket(socketURL + `?hash=${sharing}`);\n      setSocket(socket);\n\n      let mirrorClient: any;\n      let mousePos: { x: number; y: number; width: number; height: number };\n\n      document.onmousemove = (e) => {\n        let width =\n          window.innerWidth ||\n          document.documentElement.clientWidth ||\n          document.body.clientWidth;\n        let height =\n          window.innerHeight ||\n          document.documentElement.clientHeight ||\n          document.body.clientHeight;\n\n        mousePos = {\n          x: e.pageX,\n          y: e.pageY,\n          width: width,\n          height: height,\n        };\n        // socket.send(JSON.stringify(mousePos));\n        peerDataSend(mousePos);\n      };\n\n      window.onscroll = () => {\n        let verScroll =\n          document.documentElement.scrollTop || document.body.scrollTop;\n        // socket.send(JSON.stringify({ scroll: verScroll }));\n        peerDataSend({ scroll: verScroll });\n      };\n\n      socket.onopen = () => {\n        peerDataSend({\n          base: window.location.href.match(/^(.*\\/)[^/]*$/)![1],\n        });\n        mirrorClient = new TreeMirrorClient(\n          document,\n          {\n            initialize: function (rootId: number, children: object[]) {\n              peerDataSend({\n                f: \"initialize\",\n                args: [rootId, children],\n              });\n            },\n\n            applyChanged: function (\n              removed: object[],\n              addedOrMoved: object[],\n              attributes: object[],\n              text: object[]\n            ) {\n              peerDataSend({\n                f: \"applyChanged\",\n                args: [removed, addedOrMoved, attributes, text],\n              });\n            },\n          },\n          null\n        );\n      };\n\n      socket.onmessage = function (event) {\n        let data = JSON.parse(event.data);\n        console.log(data);\n        if (data.type === \"offer\") {\n          console.log(\"Peer Creation\");\n          let config = {\n            iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\n          };\n          peer.current = new RTCPeerConnection(config);\n\n          peer.current.onicecandidate = (event) => {\n            if (!event || !event.candidate) {\n              console.log(event.candidate);\n              return;\n            }\n            socket.send(\n              JSON.stringify({\n                type: \"candidate\",\n                value: event.candidate,\n              })\n            );\n          };\n\n          peer.current.onconnectionstatechange = (event) => {\n            if (peer.current.connectionState === \"connected\") {\n              console.log(\"Peer Connected\");\n            }\n          };\n\n          peer.current.setRemoteDescription(\n            new RTCSessionDescription(data.value)\n          );\n\n          let sdpConstraints = {\n            offerToReceiveAudio: false,\n            offerToReceiveVideo: false,\n          };\n          peer.current.createAnswer(sdpConstraints).then((descrip) => {\n            console.log(\"Sending Answer\");\n            peer.current.setLocalDescription(descrip);\n            socket.send(\n              JSON.stringify({\n                type: \"answer\",\n                value: descrip,\n              })\n            );\n          }, null);\n\n          peer.current.ondatachannel = (event) => {\n            dataChannel.current = event.channel;\n\n            dataChannel.current.onmessage = (event) => {\n              console.log(\"Message from Agent to Client on Data Channel\");\n            };\n            dataChannel.current.onopen = () => {\n              console.log(\"Data Channel Opened on Client\");\n              peerConn.current = true;\n              dataChannel.current.send(JSON.stringify(msgs.current));\n            };\n            dataChannel.current.onclose = () => {\n              console.log(\"Data Channel Closed on Client\");\n            };\n          };\n        }\n        if (data.type === \"candidate\") {\n          console.log(\"Processing ICE\");\n          peer.current.addIceCandidate(new RTCIceCandidate(data.value));\n        }\n      };\n\n      socket.onclose = function () {\n        console.log(\"Screen Sharing Socket Close\");\n        // Maybe send a message to the other peer to close\n        // peer.current.destroy();\n        dataChannel.current.send(JSON.stringify({ clear: true }));\n        peer.current.close();\n        peer.current = null;\n        mirrorClient.disconnect();\n      };\n    }\n  }, [sharing]);\n\n  return [sharing, setSharing];\n}\n\nfunction TodoApp(props: RouteComponentProps) {\n  const [todos, setTodos] = useState<TodoItem[]>([]);\n  const [listNum, setListNum] = useState<number>(1);\n  const [totalLists, setTotalLists] = useState<number>(1);\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  let [filteredTodos, setFilteredTodos] = useState<TodoItem[] | null>(null);\n  const [date, setDate] = useState<string>(\n    new Date().toLocaleDateString(\"en-IN\", {\n      day: \"numeric\",\n      month: \"short\",\n      weekday: \"short\",\n    })\n  );\n  const [id_token, setID] = useState<string | null>(\n    localStorage.getItem(\"id_token\")\n  );\n  const [sharing, setSharing] = useScreenShareWithWebRTC();\n  const state: State = {\n    todos: todos,\n    listNum: listNum,\n    totalLists: totalLists,\n    searchQuery: searchQuery,\n    filteredTodos: filteredTodos,\n    date: date,\n    id_token: id_token,\n    sharing: sharing,\n  };\n\n  let updateState = (stateData: Partial<State>) => {\n    if (stateData.todos) setTodos([...stateData.todos]);\n    if (stateData.listNum) setListNum(stateData.listNum);\n    if (stateData.totalLists) setTotalLists(stateData.totalLists);\n    if (stateData.searchQuery) setSearchQuery(stateData.searchQuery);\n    if (stateData.filteredTodos !== undefined) {\n      if (stateData.filteredTodos === null) setFilteredTodos(null);\n      else setFilteredTodos([...stateData.filteredTodos]);\n    }\n    if (stateData.date) setDate(stateData.date);\n    if (stateData.id_token) setID(stateData.id_token);\n    if (stateData.sharing) setSharing(stateData.sharing);\n  };\n\n  useEffect(() => {\n    netCalls.getJSON(\n      getURL,\n      1,\n      (err: number | null, data: object) => {\n        if (err !== null) {\n          console.log(\"Empty\");\n        } else {\n          setTodos(JSON.parse(data[\"json\"]));\n          setTotalLists(Number(data[\"listNum\"]));\n        }\n      },\n      id_token\n    );\n\n    console.log(\"Reached.\");\n    gapi.load(\"auth2\", function () {\n      gapi.auth2.init();\n    });\n  }, [id_token]);\n\n  let signOutFunc = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n    e.preventDefault();\n    console.log(\"Sign out started\");\n    var auth2 = gapi.auth2.getAuthInstance();\n    auth2.signOut().then(function () {\n      console.log(\"User signed out.\");\n      props.history.push(\"/login\");\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <div className=\"date\">{date}</div>\n        <a href=\"\" id=\"signOut\" onClick={signOutFunc}>\n          Sign Out\n        </a>\n        <ListSelector\n          state={state}\n          updateState={updateState}\n          setTodos={setTodos}\n        />\n        <SearchBar\n          state={state}\n          setFilteredTodos={setFilteredTodos}\n          setSearchQuery={setSearchQuery}\n        />\n      </div>\n      <TodoList state={state} setTodos={setTodos} />\n      <InputTodo state={state} setTodos={setTodos} />\n      <ShareableLink state={state} />\n      {/* <ScreenSharing sharing={sharing} setSharing={setSharing} /> */}\n    </div>\n  );\n}\n\nexport default TodoApp;\n","var netCalls = (function () {\n  async function getJSON(\n    url: string,\n    callback: (err: number | null, data: object) => void,\n    hash: string | null,\n    socket: WebSocket\n  ) {\n    let postJSON = { hash: hash };\n    socket.onopen = function () {\n      socket.send(JSON.stringify(postJSON));\n    };\n  }\n\n  async function putJSON(url: string, todos: object[], hash: string | null) {\n    let postJSON = { hash: hash, json: JSON.stringify(todos) };\n    console.log(todos);\n    console.log(postJSON);\n    // socket.send(JSON.stringify(postJSON));\n\n    await fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(postJSON),\n    });\n  }\n\n  return {\n    getJSON: getJSON,\n    putJSON: putJSON,\n  };\n})();\n\nexport default netCalls;\n","import React from 'react';\nimport netCalls from '../netCallsShare';\nimport {State,TodoItem} from './interfaces';\nconst PORT = 8000;\nconst sharePOSTURL = `http://localhost:${PORT}/sharePOST`;\n\ntype Props = {\n  state: State;\n  setTodos: React.Dispatch<React.SetStateAction<TodoItem[]>>;\n};\n\ntype PropsUI = {\n  state: State;\n  tickOrDelete: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n};\n\nfunction TodoList(props:Props) {\n\n    let tickOrDelete = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        const btn = event.target as HTMLElement;\n        let todos = props.state.todos; \n\n        const item = btn.parentElement;\n        let ind:number=0;\n        if(item!=null){\n          const todoText = item.querySelector('.text') as HTMLParagraphElement;\n          if(todoText!=null)\n            ind= todos.findIndex(ele => ele.text === todoText.innerText);\n          console.log(ind);\n        }\n        // Tick Case\n        if(btn.id === 'tick'){\n            todos[ind].done = !todos[ind].done;\n    \n            props.setTodos(\n              [...todos]\n            );\n            netCalls.putJSON(sharePOSTURL, todos, props.state.hash);\n        }\n        // Delete Case\n        else if(btn.id === 'delete'){\n            // item.remove();\n            todos.splice(ind,1);\n    \n            props.setTodos(\n                [...todos]\n            );\n            netCalls.putJSON(sharePOSTURL, todos, props.state.hash);    \n        }\n    }    \n\n    return (\n        <div className=\"todo\">\n            <TodoListUI state={props.state} \n            tickOrDelete={tickOrDelete}/>\n        </div>\n    ); \n}\n\nconst TodoListUI = (props:PropsUI) => {\n    const { state, tickOrDelete } = props;\n    let todos = state.filteredTodos ?? state.todos;\n    let todoList = todos.map( todo => {\n        let doneTodo = todo.done ? \"text lineThrough\" : \"text\";\n        return (\n            <li className=\"item\" key={todo.id}>\n                <p className={doneTodo}>{todo.text}</p>\n                <i className=\"fas fa-check tick\" id=\"tick\" onClick={tickOrDelete}></i>\n                <i className=\"fas fa-trash delete\" id=\"delete\" onClick={tickOrDelete}></i>\n            </li>\n        )\n    }) \n    return (\n        <ul id='list'>\n            {todoList}\n        </ul>\n    );\n}\n\nexport default TodoList;","import React, {useState, useEffect, useRef} from 'react';\nimport netCalls from '../netCallsShare';\nimport {TodoItem,State} from './interfaces';\nconst PORT = 8000;\nconst sharePOSTURL = `http://localhost:${PORT}/sharePOST`;\n\ninterface Props{\n  state:State;\n  setTodos:React.Dispatch<React.SetStateAction<TodoItem[]>>\n}\n\nfunction useNewTodo(props:Props) {\n    const [newTodo, setNewTodo] = useState(\"\");\n    const { state, setTodos } = props;\n    useEffect(()=>{\n        if(newTodo !== \"\")\n        {\n            let todosSend:TodoItem[]=[];\n            setTodos(todos => {\n                todos.push({text: newTodo.trim(), done: false, id: Math.random()});\n                todosSend = todos;\n                return [...todos];\n            })\n\n            netCalls.putJSON(sharePOSTURL, todosSend, state.hash);\n        }\n    },[newTodo, setTodos, state.hash])\n\n    return setNewTodo;\n}\n\nfunction InputTodo(props:Props){\n  const setNewTodo = useNewTodo(props);\n      const inputNewTodo = useRef<HTMLInputElement>(null);\n      \n      function addTodo() {\n        const text = inputNewTodo.current!.value;\n        setNewTodo(text);\n        inputNewTodo.current!.value = \"\"; \n      }\n\n    return (\n        <div className=\"inputToDo\">\n            <input type=\"text\" id=\"input\" ref={inputNewTodo} placeholder=\"Enter a To-Do\"/>\n            <i className=\"fas fa-plus-square\" onClick={addTodo}></i>\n        </div>\n    );  \n}\n\nexport default InputTodo;","import React, {useState, useEffect} from 'react';\nimport netCalls from '../netCallsShare';\nimport SearchBar from './SearchBar';\nimport TodoList from './TodoListShare';\nimport InputTodo from './InputTodoShare';\nimport './TodoApp.css';\nimport {State,TodoItem} from './interfaces';\nconst PORT = 8000;\nconst getURL = `http://localhost:${PORT}/getdata`;\nconst shareSocketURL = `ws://localhost:${PORT}/shareSocket`;\n\ninterface Data{\n  [Key:string]:string|undefined;\n}\n\nfunction SharedTodo(props:{state:{\n  id_token:string;\n}}) {\n    const url = new URL(document.URL);\n    const search_params = url.searchParams;\n    const hash_val = search_params.get('hash');\n    const [todos, setTodos] = useState<TodoItem[]>([]);\n    const [searchQuery, setSearchQuery] = useState(\"\");\n    let [filteredTodos, setFilteredTodos] = useState<TodoItem[]|null>(null);\n    const [date, ] = useState((new Date()).toLocaleDateString(\"en-IN\", {day: \"numeric\", month: \"short\", weekday: \"short\"}));\n    const [hash, ] = useState(hash_val);\n    const [, setSocket] = useState<WebSocket>(new WebSocket(shareSocketURL));\n    const state:State = {\n        todos: todos,\n        searchQuery: searchQuery,\n        filteredTodos: filteredTodos,\n        date: date,\n        hash: hash,\n        listNum:1,\n        totalLists:1,\n        id_token:null,\n        sharing:\"off\",\n    };\n\n    // let updateState = (stateData:State) => {\n    //     if(stateData.todos) setTodos([...stateData.todos]);\n    //     if(stateData.searchQuery) setSearchQuery(stateData.searchQuery);\n    //     if(stateData.filteredTodos !== undefined){\n    //         if(stateData.filteredTodos === null) setFilteredTodos(null);\n    //         else setFilteredTodos([...stateData.filteredTodos]);\n    //     } \n    //     if(stateData.date) setDate(stateData.date);\n    //     if(stateData.hash) setHash(stateData.hash);\n    // }\n\n    useEffect(() => {\n        console.log(\"here Mount\");\n        // this.onLoad();\n        let startSocket = new WebSocket(shareSocketURL);\n        setSocket(startSocket);\n\n        console.log(\"initial load\");\n        let todos :TodoItem[]= [];\n        netCalls.getJSON(getURL, (err:number|null, data:object) => {\n            if(err !== null){\n                console.log(\"Empty\");\n                setTodos([...todos]);\n            }\n            else{\n                console.log(\"Loaded\");\n                console.log(data);\n                let dataWithKey=data as Data;\n                if(dataWithKey[\"json\"]!==undefined)\n                  setTodos(JSON.parse(dataWithKey[\"json\"]));\n            }\n        }, hash, startSocket);\n\n        startSocket.onmessage = (event) => {\n            console.log(event.data);\n            let data = JSON.parse(event.data);\n            setTodos([...data]);\n        }\n    }, [hash])\n\n    return (\n        <div className=\"container\">\n            <div className=\"header\">\n                <div className=\"date\">{date}</div>\n                <SearchBar state={state} setFilteredTodos={setFilteredTodos} setSearchQuery={setSearchQuery}/>\n            </div>\n            <TodoList state={state} setTodos={setTodos}/>\n            <InputTodo state={state} setTodos={setTodos}/>\n        </div>\n    );\n\n}\n\nexport default SharedTodo;","import React, { useState } from \"react\";\nimport Login from \"./components/Login\";\nimport TodoApp from \"./components/TodoApp\";\nimport SharedTodo from \"./components/SharedTodo\";\nimport ScreenShareAgent from \"./components/ScreenShareAgent\";\nimport { BrowserRouter, Route, RouteComponentProps } from \"react-router-dom\";\n\nfunction App(props: {}) {\n  const [id_token, setID] = useState(\"\");\n  const state = {\n    id_token: id_token,\n  };\n\n  let updateState = (id_token: string) => {\n    console.log(id_token);\n    setID(id_token);\n  };\n\n  return (\n    <BrowserRouter forceRefresh={true}>\n      <div className=\"App\">\n        <Route\n          path=\"/login\"\n          render={(props: {}) => (\n            <Login {...props} state={state} updateState={updateState} />\n          )}\n        ></Route>\n        <Route\n          path=\"/todos\"\n          render={(props: RouteComponentProps) => <TodoApp {...props} />}\n        ></Route>\n        <Route\n          path=\"/share\"\n          render={(props: {}) => <SharedTodo {...props} state={state} />}\n        ></Route>\n        {/* <Route\n          path=\"/screen\"\n          render={(props: {}) => <ScreenShareAgent {...props} />}\n        ></Route> */}\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}